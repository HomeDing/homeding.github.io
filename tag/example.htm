
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pages marked with a Example tag</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name='description' content='All pages for Examples using HomeDing Elements.'>
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
</head>

<body class="sitelayout" style="--content-width:800px">
  <div class="navbar">
    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
    </svg>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  
  <nav class="menu"></nav>

  <main>
    <h1>Pages marked with a Example tag</h1>

    

    <ul>
<li>
<p><a href="/examples/bulb.htm">Bulb Example</a> – The Bulb Example in the HomeDing library is made especially for WiFi bulbs with the ESP8266 processor inside. These devices only have a small amount of Flash Memory available (1 MByte) for program and web UI storage.</p>
</li>
<li>
<p><a href="/examples/display.htm">Display Example</a> – The Display Example contains the extensions to the HomeDing Library that are supporting devices with a pixel based display like LCDs or LEDs.</p>
</li>
<li>
<p><a href="/stories/index.htm">Examples and Stories</a> – The Homeding library comes with some example sketches but also with some more detailed building stories and educative stories explaining insights and options.</p>
</li>
<li>
<p><a href="/examples/pwm.htm">HomeDing - PWMLED Example ???</a> –</p>
</li>
<li>
<p><a href="/examples/micro.htm">Micro Firmware</a> –</p>
</li>
<li>
<p><a href="/examples/minimal.htm">Minimal Sized Example</a> – The Minimal examples can be used on ESP8266 boards that only have a small amount of Flash Memory (1 MByte) available for program and web UI storage like the ESP-01 board and devices like the sonoff S20 switch, sockets or bulbs.</p>
</li>
<li>
<p><a href="/examples/plug.htm">Plug Example</a> – The Plug Example in the HomeDing library is made especially for WiFi Plug with the ESP8266 processor inside. These devices only have a small amount of Flash Memory available (1 MByte) for program and web UI storage.</p>
</li>
<li>
<p><a href="/examples/probe.htm">Probe example</a> – This example shows how to implement special, local elements that can retrieve sensor data from INA219 and INA266 current and voltage sensors to build a low-voltage power consumption logging device.</p>
</li>
<li>
<p><a href="/examples/rfbridge.htm">RF Bridge Example</a> – This example has a local RFCodes Element to send and receive RF Signals using 433 MHz transmitters and receivers with the &lt;a href=&quot;<a href="https://github.com/mathertel/rfcodes&amp;quot;&amp;gt;RFCodes">https://github.com/mathertel/rfcodes&amp;quot;&amp;gt;RFCodes</a> library&lt;/a&gt;. Some more Elements help to automate light and switch processes.</p>
</li>
<li>
<p><a href="/examples/radio.htm">Radio Example</a> – The <strong>radio example</strong> can be used with any board that has a 4MByte Flash memory, a FM radio receiving board, a display and a rotary encoder with button.</p>
</li>
<li>
<p><a href="/examples/standard.htm">Standard Example</a> –</p>
</li>
<li>
<p><a href="/examples/tutorial.htm">Tutorial Example</a> –</p>
</li>
<li>
<p><a href="/examples/wordclock.htm">WordClock Example</a> –</p>
</li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/tag/index.htm">All Tags</a></li>
</ul>


      
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');
    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async>
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>