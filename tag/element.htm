<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>Pages marked with a Element tag</title>
  <meta name='description' content='All pages related to HomeDing Elements.'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  main h2 {margin-top: 1rem !important;}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Pages marked with a Element tag</h1>

    
      
    <p><a href="/elements/add.htm">ADD Element</a> -- The ADD Element sums up multiple input values to create a single output value.<p><a href="/elements/aht20.htm">AHT20 Element</a> -- The AHT20Element allows retrieving temperature and humidity values from the AHT20 sensors from aosong.
<p><a href="/elements/am2320.htm">AM2320 Element</a> -- The AM2320Element allows retrieving temperature and humidity values  and creates actions when new values are available.
<p><a href="/elements/and.htm">AND Element</a> -- The AND Element combines multiple logic input values to a single output value. The output value will be true only when all input values are true.
<p><a href="/elements/light/apa102.htm">APA102 Element</a> -- The APA102 Element implements using LED Stripes and LED panels based on the apa102 chip and protocol and provides some color animations and transitions.
<p><a href="/elements/alarm.htm">Alarm Element</a> -- The AlarmElement creates a single action at a specific time that can be used e.g. for wakeup signals.<p><a href="/elements/analog.htm">Analog Element</a> -- The AnalogElement is used to capture the voltage level from the Analog Input pin with the integrated ADC and to emit corresponding events. It also handles some of the often occurring problems around capturing analog values.
<p><a href="/elements/audio/audio.htm">Audio Element</a> -- The Audio Element enables audio streaming and audio processing in a background task. The Audio Element is part of the WebRadio Example.
<p><a href="/elements/audio/index.htm">Audio Elements Overview</a> -- These Audio related components and elements are supported by the HomeDing library.<p><a href="/elements/bh1750.htm">BH1750 Element</a> -- The BH1750Element allows retrieving the environment light intensity from BH1750 Ambient Light based sensors using the i2c bus for communication
<p><a href="/elements/bl0937.htm">BL0937 Element</a> -- The BL0937Element has been implemented to support single phase energy monitoring using BL0937, HLW8012 or HJL-01 chips that are used in some retail plugs and switches.
<p><a href="/elements/bme680.htm">BME680 Element</a> -- The BME680Element implements reading the 4 sensor values from a BME680 environment air sensor chip. This sensor can capture temperature, humidity, air pressure and air resistance.
<p><a href="/elements/bmp280.htm">BMP280 Element</a> -- The BMP280 Element supports the BMP280 sensor chips for air temperature and air absolute barometric pressure.
<p><a href="/elements/button.htm">Button Element</a> -- The ButtonElement allows detecting multiple button press gestures like single short click, double click and long press.<p><a href="/elements/calc.htm">CALC Abstract Element</a> -- The CalcElement is implementing the common functionality for the Elements that create one output value from multiple input values. This Element is not intended to be used directly. Use the AND, OR and ADD Elements.
<p><a href="/elements/display/st7735.htm">Color Displays based on ST7735</a> -- The DisplayST7735Element enables using ST7735 based TFT color displays.
<p><a href="/elements/display/st7789.htm">Color Displays based on ST7789</a> -- The DisplayST7789Element enables using ST7789 based TFT color displays.
<p><a href="/elements/light/color.htm">Color Element</a> -- The Color Element allows controlling a color value for a light emitting element using color notations in the xRRGGBB or xWWRRGGBB format and brightness 0..100. A special Web UI is available.
<p><a href="/elements/dcftime.htm">DCFTime Element</a> -- The DCFtimeElement allows receiving the DCF77 signal that is available in central Europe broadcasting the official central European time.
<p><a href="/elements/dht.htm">DHT Element</a> -- The DHT Element allows retrieving temperature and humidity values from the DHT11, DHT22 and AM2302 sensors and creates actions when new values are available.
<p><a href="/elements/dstime.htm">DSTime Element</a> -- The DSTime Element gets the local time from a DS3231 chip that contains a high accurate clock running independently from the main board and processor.
<p><a href="/elements/dallas.htm">Dallas Element</a> -- The DallasElement allows retrieving temperature values from DS18B20 aka. Dallas Temperature sensors and creates actions when new values are available.
<p><a href="/elements/device.htm">Device Element</a> -- The DeviceElement allows configuration of the behavior of the device and the features offered by the board class.
<p><a href="/elements/diag.htm">Diag Element</a> -- The DiagElement is part of the DevDing Example  and offers some additional diagnose information.
<p><a href="/elements/digitalin.htm">Digital Input Element</a> -- The DigitalInElement is used to capture digital input signal and create actions based on level changes. This can e.g. be used to capture actively from buttons and switches but also some sensors offer a digital output as a 0 / 1 value.
<p><a href="/elements/digitalout.htm">Digital Output Element</a> -- The DigitalOutElement is used with the GPIO pins of the board to create a digital output level based on actions sent to the element. This can e.g. be used to switch a LED or relay on/off. 
<p><a href="/elements/digitalsequence.htm">Digital Sequence Element</a> -- The digital sequence Element is used internally for several elements that need to analyze timing sequences and digital signals.
<p><a href="/elements/digitalsignal.htm">Digital Signal Element</a> -- The DigitalSignalElement is used to handle digital input with short time level changes that might be missed when using the [DigitalInput Element](/elements/digitalin.md). On a changing input a pulse value is created with a defined duration.
<p><a href="/elements/display/button.htm">Display Button Element</a> -- The Display Button Element enables creating Actions by touching a specific area on a display.
<p><a href="/elements/display/config.htm">Display Configuration</a> -- The displays in the HomeDing library are configured by a unified set of parameters.
<p><a href="/elements/display/lcd.htm">Display LCD Element</a> -- The DisplayLCD Element implements the display using Monochrome LCDs based on HD44780 chips. The display is connected by using the PCF8574 I2C chip to control the direct input lines of the display.
<p><a href="/elements/display/sh1106.htm">Display SH1106 Element</a> -- The DisplaySH1106 Element allows connecting a pixel based OLED display based on a SH1106 chip.
<p><a href="/elements/display/ssd1306.htm">Display SSD1306 Element</a> -- The DisplaySSD1306 Element allows connecting a pixel based OLED display based on a SSD1306 chip.
<p><a href="/elements/display/ssd1309.htm">Display SSD1309 Element</a> -- The DisplaySSD1309 Element allows connecting a pixel based OLED display based on a SSD1309 chip.
<p><a href="/elements/display/touch.htm">Display Touch Element</a> -- The Display Touch Elements enables detecting touch events by touching a specific area on a display.
<p><a href="/elements/display/touchgt911.htm">Display TouchGT 911 Element</a> -- This Display Touch Elements enables retrieving touch events on displays using the 5-Point Capacitive Touch Sensor based on the GT911 chip.
<p><a href="/elements/display/bar.htm">DisplayBar Element</a> -- The DisplayBarElement allows sending a progress indicating value to the display to display it at a specified position as a bar or percentage number. The value can be changed by using an action.
<p><a href="/elements/display/dot.htm">DisplayDot Element</a> -- The DisplayDot Element allows sending a boolean value to the display and show it at a specified position as a shallow or filled dot/circle. The value can be changed by using an action.
<p><a href="/elements/display/line.htm">DisplayLine Element</a> -- The DisplayLineElement allows drawing a simple fixed line on the display when the display supports pixel drawing.
<p><a href="/elements/display/max7219.htm">DisplayMAX7219 Element</a> -- The DisplayMAX7219 Element implements a larger display by using LED 8x8 led displays matrixes based on MAX7219 controller chips.
<p><a href="/elements/display/text.htm">DisplayText Element</a> -- The DisplayTextElement allows sending a value to the display and show it at a specified position as text including a prefix and postfix. The value can be changed by using an action.
<p><a href="/elements/index.htm">Elements Overview</a> -- Elements are implementations of a specific input, output or compute functionality that corresponds to a specific functionality like Sensors, Displays, Light, I/O control and internal control logic. Elements are implemented in the HomeDing library as Components that can be controlled using setup configuration and runtime actions.
<p><a href="/elements/ina219.htm">INA219 Element</a> -- The INA219 is a current and voltage sensor that uses the I2C bus for communication that can measure voltages up to 26V and current in various ranges.
<p><a href="/elements/ina226.htm">INA226 Element</a> -- The INA226 is a current and voltage sensor that uses the I2C bus for communication that can measure voltages up to 26V on high-side or low-side and current in various ranges .
<p><a href="/elements/light/light.htm">Light Element</a> -- The LightElement is used as a base class to control a light by WRGB Value and Brightness. It can control up to 4 PWM GPIO output pins directly for WRGB lights. It is used as a base class for other light elements using a specific chip or protocol.
<p><a href="/elements/log.htm">Log Element</a> -- The LogElement enables storing timestamp based values e.g. from a sensor into a local file to be analyzed or displayed later by the Web UI.
<p><a href="/elements/max7219.htm">MAX7219 Element</a> -- The MAX7219Element enables using a single 8*8 dot display or a single 8 digit 7-segment display by using a MAX7219 driver chip. For dot matrix displays using multiple chips the DisplayMAX7219 Element offers full display support.
<p><a href="/elements/mqtt.htm">MQTT Element</a> -- The MQTTElement enables publishing values to a MQTT Sever using the mqtt protocol.
<p><a href="/elements/light/my9291.htm">MY9291 Element</a> -- The MY9291Element implements the protocol to control the Taiwan Mingyang MY9291 LED driver chip that can be found in some bulbs. It can control 3 or 4 channels of PWM output with a high PWM frequency typically used for RGB and WRGB bulbs.
<p><a href="/elements/map.htm">Map Element</a> -- The MapElement creates actions based on an in-bound value and range definitions.
<p><a href="/elements/menu.htm">Menu Element</a> -- The MenuElement allows controlling multiple values or switches by using a single rotary encoder.
<p><a href="/elements/mdns.htm">Multicast DNS Service</a> -- The mDNS service is used as the standard device discovery mechanism for HomeDing devices. This allows finding all devices in the home network.
<p><a href="/elements/ntptime.htm">NTPTime Element</a> -- The NTPTimeElement can retrieve the local time from an external ntp server on the internet.
<p><a href="/elements/light/neo.htm">Neo Element</a> -- The Neo Element implements using LED Stripes and LED panels based on the ws2812 chip and protocol and provides some color animations and transitions. Neopixels is a brand name for LED stripes with the ws2812 chips.
<p><a href="/boards/neo.htm">Neopixel board for ESP-01</a> -- The neo board is a very specific adapter to drive a Neopixel based stripe, wheel or array using a ESP-01 board. The ESP-01 boards are available with ESP8266 and ESP32-C3 chips. 
<p><a href="/elements/or.htm">OR Element</a> -- The OR Element combines multiple logic input values to a single output value. The output value will be true only when at least one of the input values is true.
<p><a href="/elements/ota.htm">OTA Element</a> -- The OTA Element allows to upload new firmware using the wireless network - Over The Air (OTA). **The update doesn&#39;t work in safemode** see [safemode](/dev/safemode.md);
<p><a href="/elements/light/p9813.htm">P9813 Element</a> -- The P9813Element implements the protocol to control the P9813 LED driver chip also known as Groove chainable LED.
<p><a href="/elements/pms.htm">PMS Element</a> -- The PMSElement allows using the laser based air particle and pollution sensor PMS5003 from plantower to report the number of micro particles in the air.
<p><a href="/elements/pwmout.htm">PWMOut Element</a> -- The PWMOutElement is used to create a variable PWM signal at the specified output pin. This can be used to drive a LED or a servo motor.
<p><a href="/elements/rfcodes.htm">RFCodes Element</a> -- The RFCodes Element is used send and receive RF signals to switching and dimming devices using RF protocols like RF433 or RF315.
<p><a href="/elements/audio/radio.htm">Radio Element</a> -- The Radio Element allows to control FM radio chips that are connected to the board via i2c bus.
<p><a href="/elements/reference.htm">Reference Element</a> -- The ReferenceElement allows creating actions by comparing an incoming value with a reference value.
<p><a href="/elements/remote.htm">Remote Element</a> -- The Remote Element allows sending actions over the network to other elements in HomeDing devices using http GET requests.
<p><a href="/elements/rotary.htm">Rotary Element</a> -- The RotaryElement is used to capture increments and decrements for values using a rotary encoder.
<p><a href="/elements/sd.htm">SD Card Element</a> -- The SDElement  uses the SPI bus to connect a SD card and makes the files available for reading and writing in the `/sd` folder.
<p><a href="/elements/sdmmc.htm">SD MMC card Element</a> -- The SDMMCElement implements access to the file system on a SDMMC card on ESP32 processors and boards.
<p><a href="/elements/sht20.htm">SHT20 Element</a> -- The SHT2x sensors provide some high precision temperature and humidity sensors that communicate on the I2C bus.
<p><a href="/elements/scene.htm">Scene Element</a> -- The Scene Element sends a series of actions triggered by a single incoming action. They can be send out step by step using a defined delay or by actions.
<p><a href="/elements/schedule.htm">Schedule Element</a> -- The ScheduleElement creates events based on the current time.
<p><a href="/elements/select.htm">Select Element</a> -- The SelectElement is used to choose one of many options with keys and a values. When selecting one of the options a key action and a value action is dispatched.
<p><a href="/elements/sensors.htm">Sensor Element Implementation</a> -- Many Element implementations for sensors require the same functionality regarding timing and using properties and actions. The abstract SensorElement offers a base class that the specific Element implementations can derive from.
<p><a href="/elements/ssdp.htm">Simple Service Discovery Protocol (SSDP) Element</a> -- The SSDPElement allows specifying the properties to send SSDP messages to the local network so the device can be discovered by Plug &amp; Play Services.
<p><a href="/elements/state.htm">Store State</a> -- This element implements storing the current state in some other places as volatile variables.
<p><a href="/elements/light/stripe.htm">Stripe Element</a> -- The StripeElement is used as a base class to control a series of lights, typically LEDs by WRGB Value and Brightness. It is used as a base class for other light elements using a specific chip or protocol.
<p><a href="/elements/switch.htm">Switch Element</a> -- The SwitchElement is used to toggle the state of a boolean value to on or off by a single action.
<p><a href="/elements/tm1637.htm">TM1637 Element</a> -- The TM1637 is a chip that allows using 7-segment displays up to 6 digits.
<p><a href="/elements/time.htm">Time Element</a> -- The time element creates actions with the current local time as value.
<p><a href="/elements/timer.htm">Timer Element</a> -- The TimerElement creates events based on a one-time or cyclic timing pattern.<p><a href="/elements/audio/tone.htm">Tone Element</a> -- The Tone Element allows creating sound using the Arduino tone function.
<p><a href="/elements/touch.htm">Touch Element</a> -- The TouchElement enables creating Actions by using touch input feature of the ESP32 than detects changes in the capacity e.g. when a finger is nearby. 
<p><a href="/elements/value.htm">Value Element</a> -- The ValueElement combines receiving modifying actions for an internal state value and sending actions on changing the value. This can e.g. be used to drive a LED or a relay.
<p><a href="/elements/weatherfeed.htm">WeatherFeed Element</a> -- <p><a href="/elements/wot.htm">WoT Element</a> -- The Element enables ...


    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>