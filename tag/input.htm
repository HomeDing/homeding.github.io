
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pages marked with a Input tag</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet">
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name="description" content="All pages explaining Input features of the HomeDing Library.">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc">
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353">
</head>

<body class="sitelayout">
  <div class="navbar">
    <button id="menu" popovertarget="my-menu">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"></path>
      </svg>
    </button>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
    
  </div>
  
  <nav popover="auto" id="my-menu" class="menu"></nav>

  <main>
    <h1>Pages marked with a Input tag</h1>

    

    <ul>
<li>
<p><a href="/elements/analog.htm">Analog Element</a> – The AnalogElement is used to capture the voltage level from the Analog Input pin with the integrated ADC and to emit corresponding events. It also handles some of the often occurring problems around capturing analog values.</p>
</li>
<li>
<p><a href="/elements/digitalin.htm">Digital Input Element</a> – The DigitalInElement is used to capture digital input signal and create actions based on level changes. This can e.g. be used to capture actively from buttons and switches but also some sensors offer a digital output as a 0 / 1 value.</p>
</li>
<li>
<p><a href="/elements/digitalsignal.htm">Digital Signal Element</a> – The DigitalSignalElement is used to handle digital input with short time level changes that might be missed when using the <a href="/elements/digitalin.htm">DigitalInput Element</a>. On a changing input a pulse value is created with a defined duration.</p>
</li>
<li>
<p><a href="/elements/display/button.htm">Display Button Element</a> – The DisplayButtonElement enables creating Actions by touching a visual button on a display supporting pixel based graphics.</p>
</li>
<li>
<p><a href="/elements/display/touch.htm">Display Touch Element</a> – The Display Touch Elements enables detecting touch events by touching a specific area on a display.</p>
</li>
<li>
<p><a href="/elements/display/touchcst816.htm">Display TouchCST816 Element</a> – The DisplayTouchCST816 Element enables retrieving one point touch events on displays using the Capacitive Touch Sensor based on the CST816 chip.</p>
</li>
<li>
<p><a href="/elements/display/touchgt911.htm">Display TouchGT911 Element</a> – The DisplayTouchGT911 Element enables retrieving touch events on displays using the Capacitive Touch Sensor based on the GT911 chip.</p>
</li>
<li>
<p><a href="/elements/rotary.htm">Rotary Element</a> – The RotaryElement is used to capture increments and decrements for values using a rotary encoder.</p>
</li>
<li>
<p><a href="/elements/sht20.htm">SHT20 Element</a> – The SHT2x sensors provide some high precision temperature and humidity sensors that communicate on the I2C bus.</p>
</li>
<li>
<p><a href="/elements/touch.htm">Touch Element</a> – The TouchElement enables creating Actions by using touch input feature of the ESP32 than detects changes in the capacity e.g. when a finger is nearby.</p>
</li>
<li>
<p><a href="/elements/weatherfeed.htm">WeatherFeed Element</a> – The WeatherFeedElement pulls information on the weather forecasts for a specific location from the internet and dispatches actions with specific data items.</p>
</li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/tag/index.htm">All Tags</a></li>
</ul>


      
  </main>

  <script>
    

    var navObj = document.querySelector('nav');
    lazyLoadHTM('nav', '/toc.htm');
  </script>

</body>
</html>