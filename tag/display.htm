
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pages marked with a Display tag</title>
    <script src="/pages.js"></script>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/story.js" type="module"></script>
    <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
    <meta name='description' content='All pages related to support Display based functionality in HomeDing Elements'>
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>Pages marked with a Display tag</h1>
      
        <ul>
<li>
<p><a href="/elements/display/st7735.htm">Color Display based on ST7735</a> – The DisplayST7735Element enables using ST7735 based TFT color displays.</p>
</li>
<li>
<p><a href="/elements/display/st7701.htm">Color Displays based on ST7701</a> – The DisplayST7701Element enables using ST7701 based TFT color displays in HomeDing based devices.</p>
</li>
<li>
<p><a href="/elements/display/st7789.htm">Color Displays based on ST7789</a> – The DisplayST7789Element enables using ST7789 based TFT color displays.</p>
</li>
<li>
<p><a href="/elements/display/st7796.htm">Color Displays based on ST7796</a> – The DisplayST7796Element enables using ST7796 based TFT color displays.</p>
</li>
<li>
<p><a href="/elements/display/panel.htm">Color Displays using the ESP32-S3 16-bit panel interface</a> – The DisplayESP32PanelElement enables using displays connected with the ESP32 Panel interface.</p>
</li>
<li>
<p><a href="/elements/display/button.htm">Display Button Element</a> – The DisplayButtonElement enables creating Actions by touching a visual button on a display supporting pixel based graphics.</p>
</li>
<li>
<p><a href="/elements/display/config.htm">Display Configuration</a> – The displays in the HomeDing library are configured by a unified set of parameters.</p>
</li>
<li>
<p><a href="/examples/display.htm">Display Example</a> – The Display Example contains the extensions to the HomeDing Library that are supporting devices with a pixel based display like LCDs or LEDs.</p>
</li>
<li>
<p><a href="/dev/displays.htm">Display Implementation</a> – The Elements and C++ Classes used for implementing Displays and their dependencies.</p>
</li>
<li>
<p><a href="/elements/display/lcd.htm">Display LCD Element</a> – The DisplayLCD Element implements the display using Monochrome LCDs based on HD44780 chips. The display is connected by using the PCF8574 I2C chip to control the direct input lines of the display.</p>
</li>
<li>
<p><a href="/elements/display/touch.htm">Display Touch Element</a> – The Display Touch Elements enables detecting touch events by touching a specific area on a display.</p>
</li>
<li>
<p><a href="/elements/display/touchcst816.htm">Display TouchCST816 Element</a> – The DisplayTouchCST816 Element enables retrieving one point touch events on displays using the Capacitive Touch Sensor based on the CST816 chip.</p>
</li>
<li>
<p><a href="/elements/display/touchft6336.htm">Display TouchFT6336U Element</a> –</p>
</li>
<li>
<p><a href="/elements/display/touchgt911.htm">Display TouchGT911 Element</a> – The DisplayTouchGT911 Element enables retrieving touch events on displays using the Capacitive Touch Sensor based on the GT911 chip.</p>
</li>
<li>
<p><a href="/elements/display/circle.htm">DisplayCircle Element</a> – The DisplayCircle Element allows showing a circle with a stroke and fill color. This can be used to visualize a boolean value on the display and show it at a specified position as a shallow or filled circle. The value can be changed by using an action.</p>
</li>
<li>
<p><a href="/elements/display/line.htm">DisplayLine Element</a> – The DisplayLineElement enables drawing a simple fixed line on a display supporting pixel based graphics.</p>
</li>
<li>
<p><a href="/elements/display/rect.htm">DisplayRect Element</a> – The DisplayRect Element allows showing a rectangular with a stroke and fill color. This can be used to visualize a boolean value on the display and show it at a specified position as a shallow or filled rectangle. The value can be changed by using an action.</p>
</li>
<li>
<p><a href="/elements/display/text.htm">DisplayText Element</a> – The DisplayTextElement allows sending a value to the display and show it at a specified position as text including a prefix and postfix. The value can be changed by using an action.</p>
</li>
<li>
<p><a href="/elements/display/textbox.htm">DisplayTextBox Element</a> – The DisplayTextBoxElement allows showing a text on the display in a rectange area at a specified position as text including a prefix and postfix. The value can be changed by using an action.</p>
</li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/tag/index.htm">All Tags</a></li>
</ul>

        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>