
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Display TouchGT911 Element</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
</head>

<body class="sitelayout" style="--content-width:800px">
  <div class="navbar">
    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
    </svg>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  
  <nav style="background-color:white"></nav>

  <main>
    <h1>Display TouchGT911 Element</h1>

    
      <div class="card-container horizontal text" style="--card-height:5rem;--card-image-size:5rem;">
        <div class="card">
          
          <div class="body">
            <p>The DisplayTouchGT911 Element enables retrieving touch events on displays using the Capacitive Touch Sensor based on the GT911 chip.</p>

          </div>
        </div>
      </div>
    

    <p>The DisplayTouchElements share the same functionality while supporting different Touch
controllers. See <a href="/elements/display/touch.htm">Display Touch Elements</a> for details on how Buttons
on the display can be used.</p>
<p>The GT911 Controller is using the i2c bus for communication.</p>
<p>Usually the GT911 controller need no configuration while operating because once programmed configurations (like resolution and hardware specifics) have been saved in the controller by the manufacturer.
There is a special sketch <code>gt911setup.ino</code> available to inspect the current configuration and even update an existing one. Be sure what you do when you use it.</p>
<h2>Driver implementation</h2>
<p>There is no general usable Arduino library available for this chip so a specific driver was
implemented.</p>
<p>The driver for this chip is embedded in the HomeDing library in folder <code>src/lib</code>. It will be
included in the firmware binary when the DisplayTouchGT911 Element is included using the
definition <code>HOMEDING_INCLUDE_DISPLAYTOUCHGT911</code> is used in the man sketch.</p>
<p>The driver only covers functionality for detecting touch events but not for configuration.
It automatically detects the used i2c address of the touch controller.</p>
<p>Other Driver implementation for other environments and non maintained libraries can be found in
GitHub. The implementation documentaton and the reference implementation from Goodix for Android
was taken as a primary source.</p>
<h2>Element Configuration</h2>
<!-- <object data="/element.svg?touchgt911" type="image/svg+xml"></object> -->
<p>The following properties are available for configuration of the element:</p>
<blockquote>
<p><strong>address</strong> – The I2C address of the GT911 controller. The driver can autodetect the i2c address.</p>
<p><strong>width</strong> – The width of the touch surface</p>
<p><strong>height</strong> – The height of the touch surface</p>
<p><strong>rotation</strong> – Rotation of the display in use using 0, 90, 180 or 270 degree.</p>
</blockquote>
<h2>Boards</h2>
<p>The following boards are using the GT911 controller:</p>
<ul>
<li><a href="/boards/esp32/panel-3248S035.htm">Panel ESP32-3248S035</a></li>
<li><a href="/boards/esp32s3/panel-8048S043.htm">Panel ESP32-8048S043C</a></li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/elements/display/touch.htm">Display Touch Elements</a></li>
<li><a href="/dev/i2c.htm">i2c bus</a></li>
<li><a href="https://www.goodix.com/en/product/touch/touch_screen_controller">https://www.goodix.com/en/product/touch/touch_screen_controller</a></li>
<li><a href="https://github.com/goodix">https://github.com/goodix</a> reference implementation for Android</li>
</ul>
<!-- 
* <https://gitlab.com/AdyaAdya/goodix-touchscreen-linux-driver/-/blob/master/goodix_mainline.c?ref_type=heads>
* <https://github.com/nik-sharky/arduino-goodix>

* <https://github.com/klaper/Sonoff-Tasmota/blob/4d9272f701682ecca3f93af927cf768a4a3274ce/lib/lib_display/GT911/GT911.cpp>
*
* <https://github.com/DiveInEmbedded/GT911-Touch-driver/blob/main/Core/Src/GT911.c>
* <https://github.com/friendlyarm/linux-3.4.y/blob/nanopi2-lollipop-mr1/drivers/input/touchscreen/gt9xx.c>
* <https://github.com/Xinyuan-LilyGO/TTGO_TWatch_Library/blob/ceadf44410d174abf8c8f9db83cfdf0c637fb2f3/src/drive/fx50xx/focaltech.cpp>
* <https://github.com/lewisxhe/SensorLib/blob/master/src/TouchDrvGT911.hpp>
* <https://github.com/lvgl/lvgl_esp32_drivers/blob/master/lvgl_touch/gt911.h>

* DataSheet: <https://m5stack.oss-cn-shenzhen.aliyuncs.com/resource/docs/datasheet/core/m5paper/gt911_datasheet.pdf>

* <https://github.com/arduino-libraries/Arduino_GigaDisplayTouch> This library is in an early
  stage and implemented for Arduino boards based on mbed operating system only. I like the
  cleaness of the interface. Rotation support is missing as well.
* <https://github.com/TAMCTec/gt911-arduino> This library is almost working but has some buffer
  overflows when communication is not correct (found more than 5 points) and needs software reset.
* <https://github.com/u4mzu4/Arduino_GT911_Library>
 -->


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/display.htm">Display</a><a href="/tag/input.htm">Input</a><a href="/tag/wip.htm">Wip</a></div>
      
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');
    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async>
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>