
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Display Button Element</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name='description' content='Display a button'>
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
</head>

<body class="sitelayout" style="--content-width:800px">
  <div class="navbar">
    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
    </svg>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  
  <nav style="background-color:white"></nav>

  <main>
    <h1>Display Button Element</h1>

    
      <div class="card-container horizontal text" style="--card-height:5rem;--card-image-size:5rem;">
        <div class="card">
          
          <div class="body">
            <p>The DisplayButtonElement enables creating Actions by touching a visual button on a display supporting pixel based graphics.</p>

          </div>
        </div>
      </div>
    

    <p>The <strong>DisplayButtonElement</strong> draws a button at the configured position where click events should be captured.</p>
<p>Displays that do not support pixel based drawings or touch events may not include this Element into the sketch.</p>
<p>The DisplayLineElement is included in the collection of <strong>Display-Draw</strong> elements and can be used on pixel based
displays only.</p>
<h2>Element Configuration</h2>
<p>The following properties are available for configuration of the element.</p>
<p><object data="/element.svg?displaybutton" type="image/svg+xml"></object></p>
<blockquote>
<p><strong>text</strong> – the text that is displayed on the button</p>
<p><strong>onclick</strong> – List of actions to be created on a click event</p>
</blockquote>
<p>The <code>DisplayOutputElement</code> captures the parameters for defining a visual Element on the display.  Tis is common for
multiple Elements even when they are not used by the element.</p>
<p>The following properties are available for configuration:</p>
<blockquote>
<p><strong>x</strong> – Specifies the x position of the Element.</p>
<p><strong>y</strong> – Specifies the y position of the Element.</p>
<p><strong>w</strong> or <strong>width</strong> – Specifies the width of the Element.</p>
<p><strong>h</strong> or <strong>height</strong> – Specifies the height of the Element.</p>
<p><strong>align</strong> – The alignment of the text.  Possible values are “left” (default), “center” and “right”.
This configuration is used by the <a href="/elements/display/textbox.htm">DisplayTextBox Element</a> only</p>
<p><strong>fontsize</strong> – Specifies the size of the text used for drawing the Element.
This configuration is used by the <a href="/elements/display/textbox.htm">DisplayTextBox Element</a> only</p>
<p><strong>stroke</strong> or <strong>color</strong> – Specifies the stroke color of the Element. When no color is specified on the
element the default stroke color from the display is used.</p>
<p><strong>fill</strong> or <strong>background</strong> – Specifies the background color of the Element. When no color is specified on
the element the default fill color from the display is used.</p>
<p><strong>border</strong> – Specifies the border color of the Element. When no color is specified on
the element the default color from the display is used.</p>
<p><strong>value</strong> – Specifies a value for the Element. This is used for some Output Elements only.</p>
<p><strong>clear</strong> – The value is cleared.</p>
</blockquote>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> – Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> – A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> – The location of the device.</p>
<p><strong>loglevel</strong> – This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
<p><strong>startup</strong> – This property can be used to start the element using a different initialization phase.
Possible values are “sys”, “net”, “time”. See <a href="/dev/startup.htm">The Startup sequence</a>.</p>
</blockquote>
<!-- TODO: documentation


==> + DisplayOutput properties

 -->
<h2>Element State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<h2>See also</h2>
<ul>
<li><a href="/elements/display/touch.htm">Display Touch Elements</a></li>
<li><a href="/elements/display/text.htm">DisplayText Element</a></li>
<li><a href="/elements/display/textbox.htm">DisplayTextBox Element</a></li>
<li><a href="/elements/display/circle.htm">DisplayCircle Element</a></li>
<li><a href="/elements/display/line.htm">DisplayLine Element</a></li>
<li><a href="/elements/display/button.htm">DisplayButton Element</a></li>
</ul>


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/display.htm">Display</a><a href="/tag/input.htm">Input</a><a href="/tag/wip.htm">Wip</a></div>
      
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');
    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async>
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>