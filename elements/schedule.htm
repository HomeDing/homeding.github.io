<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Create events started on time.'>
  <title>The Schedule Element</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <link href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css" rel="stylesheet">
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-header">
    <a href="/" title="Startpage"><img class="icon" src="/i/default.svg" /></a>
    <h1>HomeDing</h1>
  </div>

  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  <nav class="inpage open"></nav>

  <main style="background-color:#eeeeee;padding:1rem">
    <h1>The Schedule Element</h1>
<div class="iconcard"><svg class="icon"><use href="/icons.svg#schedule"></use></svg><p>The ScheduleElement creates events based on the current time.</p>
</div>
<p>When using this element a real time retrieving element must be configured as well like the <a href="/elements/ntptime.htm">NTPTime</a> or <a href="/elements/dcftime.htm">DCFTime</a>.</p>
<p>One Schedule Element can be used to create a timespan during a day that creates 2 possible events.
The first one when the <code>on</code>-time has passed and a second one when the <code>off</code>-time has passed.</p>
<p>When starting the device the following events are emitted:</p>
<ul>
<li>When starting before the defined time span the <code>off</code>-event will be emitted.</li>
<li>When starting the device in the middle of this time span the <code>on</code>-event will be emitted.</li>
<li>When starting after the defined time span the <code>off</code>-event will be emitted.</li>
</ul>
<p>The <code>onvalue</code> event is always emitted together with the <code>on</code> and <code>off</code> event situations.</p>
<h2>Element Configuration</h2>
<p>The following properties are available for configuration of the element:</p>
<p><object data="/element.svg?schedule" type="image/svg+xml"></object></p>
<p><strong>title</strong> - Caption text for the element. Used in the boards.</p>
<p><strong>description</strong> - A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>mode</strong> - The element supports 3 modes: <strong>&quot;on&quot;</strong> for always on, <strong>&quot;off&quot;</strong> for always off and <strong>&quot;timer</strong>&quot; for switching the value using the timer settings.</p>
<p><strong>ontime</strong> - Specifies the start of the time span.</p>
<p><strong>offtime</strong> - Specifies the end of the time span.</p>
<p><strong>onon</strong> - These actions are emitted when the on time has passed.</p>
<p><strong>onoff</strong> - These actions are emitted when the off time has passed.</p>
<p><strong>onvalue</strong> - These actions are emitted when the value is changing.</p>
<h2>Element State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<p><strong>value</strong> - Current output value of the element.</p>
<h2>Example Configuration</h2>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"schedule"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"lights"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"ontime"</span><span class="token operator">:</span> <span class="token string">"04:00:00"</span><span class="token punctuation">,</span><br>      <span class="token property">"offtime"</span><span class="token operator">:</span> <span class="token string">"18:00:00"</span><span class="token punctuation">,</span><br>      <span class="token property">"onon"</span><span class="token operator">:</span> <span class="token string">"device/main?log=now on."</span><span class="token punctuation">,</span><br>      <span class="token property">"onoff"</span><span class="token operator">:</span> <span class="token string">" device/main?log=now off."</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Example State</h2>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"button/start"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"active"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span><br>    <span class="token property">"value"</span><span class="token operator">:</span> ???<br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>See also</h2>
<ul>
<li><a href="/elements/timeelements.htm">Time Elements</a></li>
</ul>

  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    if (window.innerWidth > 880)
      navObj.classList.add('open');

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>