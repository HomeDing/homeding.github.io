<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>Elements Overview</title>
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  main h2 {margin-top: 1rem !important;}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Elements Overview</h1>

    
    
      <div class="plaincard">
    
    Elements are implementations of a specific input, output or compute functionality that corresponds to a specific functionality like Sensors, Displays, Light, I/O control and internal control logic. Elements are implemented in the HomeDing library as Components that can be controlled using setup configuration and runtime actions.
</div>
      
    <ul>
<li><a href="/elements/sensors.htm">Sensor Elements</a> and <a href="/sensors/sensors.htm">Sensor components</a></li>
<li><a href="/elements/light/light.htm">Light Elements</a></li>
<li><a href="/elements/audio/index.htm">Audio Elements</a></li>
<li><a href="/elements/display/index.htm">Displays</a></li>
</ul>
<p>The following element implementations are available in the current version of the HomeDing library.</p>
<h2>Input Elements</h2>
<p>Input Elements are used to create an action based on a specific input signal like digital HIGH/LOW or analog signals or values from sensors like movement detectors.</p>
<div class="iconcard">
  <a href="/elements/digitalin.htm"><svg class="icon"><use href="/icons.svg#digitalin"></use></svg></a>
  <h3><a href="/elements/digitalin.htm">Digital Input Element</a> (digitalin)</h3>
  <p>The DigitalInElement is used to capture digital input signal and create actions based on level changes. This can e.g. be used to capture actively from buttons and switches but also some sensors offer a digital output as a 0 / 1 value.
</p>
</div>
<div class="iconcard">
  <a href="/elements/digitalsignal.htm"><svg class="icon"><use href="/icons.svg#digitalin"></use></svg></a>
  <h3><a href="/elements/digitalsignal.htm">Digital Signal Element</a> (digitalsignal)</h3>
  <p>The DigitalSignalElement is used to handle digital input with short time level changes that might be missed when using the [DigitalInput Element](/elements/digitalin.md). On a changing input a pulse value is created with a defined duration.
</p>
</div>
<div class="iconcard">
  <a href="/elements/analog.htm"><svg class="icon"><use href="/icons.svg#analog"></use></svg></a>
  <h3><a href="/elements/analog.htm">Analog Element</a> (analog)</h3>
  <p>The AnalogElement is used to capture the voltage level from the Analog Input pin with the integrated ADC and to emit corresponding events. It also handles some of the often occurring problems around capturing analog values.
</p>
</div>
<div class="iconcard">
  <a href="/elements/rotary.htm"><svg class="icon"><use href="/icons.svg#rotary"></use></svg></a>
  <h3><a href="/elements/rotary.htm">Rotary Element</a> (rotary)</h3>
  <p>The RotaryElement is used to capture increments and decrements for values using a rotary encoder.
</p>
</div>
<div class="iconcard">
  <a href="/elements/touch.htm"><svg class="icon"><use href="/icons.svg#touch"></use></svg></a>
  <h3><a href="/elements/touch.htm">Touch Element</a> (touch)</h3>
  <p>The TouchElement enables creating Actions by using touch input on the ESP32.
</p>
</div>
<h2>Sensor Elements</h2>
<p>The <a href="/elements/sensors.htm">sensor elements</a> implement the adoption to a very specific sensor or sensor family. They share
some common implementation to allow gathering values on a regular basis and updating other elements or even other boards by sending actions with the current value.</p>
<div class="iconcard">
  <a href="/elements/dht.htm"><svg class="icon"><use href="/icons.svg#dht"></use></svg></a>
  <h3><a href="/elements/dht.htm">DHT Element</a> (dht)</h3>
  <p>The DHT Element allows retrieving temperature and humidity values from the DHT11, DHT22 and AM2302 sensors and creates actions when new values are available.
</p>
</div>
<div class="iconcard">
  <a href="/elements/am2320.htm"><svg class="icon"><use href="/icons.svg#dht"></use></svg></a>
  <h3><a href="/elements/am2320.htm">AM2320 Element</a> (am2320)</h3>
  <p>The AM2320Element allows retrieving temperature and humidity values  and creates actions when new values are available.
</p>
</div>
<div class="iconcard">
  <a href="/elements/aht20.htm"><svg class="icon"><use href="/icons.svg#dht"></use></svg></a>
  <h3><a href="/elements/aht20.htm">AHT20 Element</a> (aht20)</h3>
  <p>The AHT20Element allows retrieving temperature and humidity values from the AHT20 sensors from aosong.
</p>
</div>
<div class="iconcard">
  <a href="/elements/dallas.htm"><svg class="icon"><use href="/icons.svg#dallas"></use></svg></a>
  <h3><a href="/elements/dallas.htm">Dallas Element</a> (dallas)</h3>
  <p>The DallasElement allows retrieving temperature values from DS18B20 aka. Dallas Temperature sensors and creates actions when new values are available.
</p>
</div>
<div class="iconcard">
  <a href="/elements/bme680.htm"><svg class="icon"><use href="/icons.svg#bme680"></use></svg></a>
  <h3><a href="/elements/bme680.htm">BME680 Element</a> (bme680)</h3>
  <p>The BME680Element implements reading the 4 sensor values from a BME680 environment air sensor chip. This sensor can capture temperature, humidity, air pressure and air resistance.
</p>
</div>
<div class="iconcard">
  <a href="/elements/pms.htm"><svg class="icon"><use href="/icons.svg#pms"></use></svg></a>
  <h3><a href="/elements/pms.htm">PMS Element</a> (pms)</h3>
  <p>The PMSElement allows using the laser based air particle and pollution sensor PMS5003 from plantower to report the number of micro particles in the air.
</p>
</div>
<div class="iconcard">
  <a href="/elements/bmp280.htm"><svg class="icon"><use href="/icons.svg#bmp280"></use></svg></a>
  <h3><a href="/elements/bmp280.htm">BMP280 Element</a> (bmp280)</h3>
  <p>The BMP280 Element supports the BMP280 sensor chips for air temperature and air absolute barometric pressure.
</p>
</div>
<div class="iconcard">
  <a href="/elements/bl0937.htm"><svg class="icon"><use href="/icons.svg#no"></use></svg></a>
  <h3><a href="/elements/bl0937.htm">BL0937 Element</a> (bl0937)</h3>
  <p>The BL0937Element has been implemented to support single phase energy monitoring using BL0937, HLW8012 or HJL-01 chips that are used in some retail plugs and switches.
</p>
</div>
<!-- TODO: element bme280 bme280 -->
<!-- MPU9250 
 3-Axis gyroscope
 3-Axis accelerometer.
 3-Axis magnetometer 
 
<https://media.digikey.com/pdf/Data%20Sheets/TDK%20PDFs/MPU-9250_Rev_1.1.pdf> 
-->
<p>More detailed information on sensor implementation can be found in <a href="/elements/sensors.htm">sensor Elements</a> implementation.</p>
<h2>Output and Actor Elements</h2>
<div class="iconcard"><a href="/elements/pwmout.htm"><svg class="icon"><use href="/icons.svg#pwmout"></use></svg><h3>pwmout</h3></a><p>The <a href="/elements/pwmout.htm">PWMOut Element</a> is used to output an pwm signals based on actions. e.g. LEDs.</p>
</div>
<div class="iconcard">
  <a href="/elements/digitalout.htm"><svg class="icon"><use href="/icons.svg#digitalout"></use></svg></a>
  <h3><a href="/elements/digitalout.htm">Digital Output Element</a> (digitalout)</h3>
  <p>The DigitalOutElement is used with the GPIO pins of the board to create a digital output level based on actions sent to the element. This can e.g. be used to switch a LED or relay on/off. 
</p>
</div>
<div class="iconcard"><a href="/elements/rfcodes.htm"><svg class="icon"><use href="/icons.svg#default"></use></svg><h3>rfcodes</h3></a><p>The <a href="/elements/rfcodes.htm">RFCodes Element</a> is used for sending and receiving RF codes on the 433 MHz band
e.g. to control remote sockets.</p>
</div>
<h2>Light Elements</h2>
<p>To control a simple light or bulb the <a href="/elements/switch.htm">Switch Element</a> and <a href="/elements/value.htm">Value Element</a> can be used
to control on/off and the brightness of LEDs using <a href="/elements/pwmout.htm">PWM Out Element</a> or <a href="/elements/digitalout.htm">DigitalOut Element</a>.</p>
<p>To control lights, <a href="/boards/bulb.htm">bulbs</a> and LED stripes with colors the following special light elements can be used.</p>
<p>There are special elements to control specific chips or using the PWM capabilities:</p>
<div class="iconcard">
  <a href="/elements/light/light.htm"><svg class="icon"><use href="/icons.svg#light"></use></svg></a>
  <h3><a href="/elements/light/light.htm">Light Element</a> (light)</h3>
  <p>The LightElement is used as a base class to control a light by WRGB Value and Brightness. It can control up to 4 PWM GPIO output pins directly for WRGB lights. It is used as a base class for other light elements using a specific chip or protocol.
</p>
</div>
<div class="iconcard">
  <a href="/elements/light/my9291.htm"><svg class="icon"><use href="/icons.svg#led"></use></svg></a>
  <h3><a href="/elements/light/my9291.htm">MY9291 Element</a> (my9291)</h3>
  <p>The MY9291Element implements the protocol to control the Taiwan Mingyang MY9291 LED driver chip that can be found in some bulbs. It can control 3 or 4 channels of PWM output with a high PWM frequency typically used for RGB and WRGB bulbs.
</p>
</div>
<p>The <a href="/elements/light/color.htm">Color Element</a> can be used to create a light color value of your choice.</p>
<div class="iconcard">
  <a href="/elements/light/color.htm"><svg class="icon"><use href="/icons.svg#color"></use></svg></a>
  <h3><a href="/elements/light/color.htm">Color Element</a> (color)</h3>
  <p>The Color Element allows controlling a value for a light emitting element using the color values in the xRRGGBB or xWWRRGGBB format and brightness 0..100. A special Web UI is available.
</p>
</div>
<p>For LED stripes the <a href="/elements/light/stripe.htm">Stripe Element</a> provides the base functionality to control a series of LEDs with individual color values and a overall brightness.</p>
<p>The stripes can be controlled from the following elements implementing the specific protocols:</p>
<div class="iconcard">
  <a href="/elements/light/neo.htm"><svg class="icon"><use href="/icons.svg#neo"></use></svg></a>
  <h3><a href="/elements/light/neo.htm">Neo Element</a> (neo)</h3>
  <p>The Neo Element allows driving these LEDs and provides some color animations and transitions. Neopixels is a brand name for LED stripes with the ws2812 chip.
</p>
</div>
<div class="iconcard">
  <a href="/elements/light/apa102.htm"><svg class="icon"><use href="/icons.svg#led"></use></svg></a>
  <h3><a href="/elements/light/apa102.htm">APA102 Element</a> (apa102)</h3>
  <p>The APA102Element implements ... 
</p>
</div>
<div class="iconcard">
  <a href="/elements/light/p9813.htm"><svg class="icon"><use href="/icons.svg#led"></use></svg></a>
  <h3><a href="/elements/light/p9813.htm">P9813 Element</a> (p9813)</h3>
  <p>The P9813Element implements the protocol to control the P9813 LED driver chip also known as Groove chainable LED.
</p>
</div>
<h2>Light Sensors</h2>
<div class="iconcard"><a href="/elements/bh1750.htm"><svg class="icon"><use href="/icons.svg#default"></use></svg><h3>bh1750</h3></a><p>This is a light sensor probong for the intensity of light in lumen.
<a href="/elements/bh1750.htm">BH1750 Element</a></p>
</div>
<h2>Logic and Calculation Elements</h2>
<p>Logic elements implement using on/off values expressed as 1/0 values. See <a href="/elements/calc.htm">Calc Abstract Element</a></p>
<div class="iconcard"><a href="/elements/button.htm"><svg class="icon"><use href="/icons.svg#button"></use></svg><h3>button</h3></a><p>The <a href="/elements/button.htm">Button Element</a> can differentiate clicks, double clicks and long press gestures to send out actions.</p>
</div>
<div class="iconcard"><a href="/elements/switch.htm"><svg class="icon"><use href="/icons.svg#switch"></use></svg><h3>switch</h3></a><p>The <a href="/elements/switch.htm">Switch Element</a> controls a boolean output value with 0 and 1 values.
It can use input from a <a href="/elements/digitalin.htm">DigitalIn Element</a> with a momentary button and the Web UI.</p>
</div>
<div class="iconcard"><a href="/elements/and.htm"><svg class="icon"><use href="/icons.svg#and"></use></svg><h3>and</h3></a><p>The <a href="/elements/and.htm">AND Element</a> combines multiple logic input values to a single output value.
The outgoing value is HIGH(1) when all of the given input values are not LOW(0).</p>
</div>
<div class="iconcard"><a href="/elements/or.htm"><svg class="icon"><use href="/icons.svg#or"></use></svg><h3>or</h3></a><p>The <a href="/elements/or.htm">OR Element</a> combines multiple logic input values to a single output value.
The outgoing value is HIGH(1) when one of the given input values is not LOW(0).</p>
</div>
<div class="iconcard"><a href="/elements/add.htm"><svg class="icon"><use href="/icons.svg#add"></use></svg><h3>add</h3></a><p>The ADD Element sums up multiple input values to create a single output value.</p>
</div>
<div class="iconcard">
  <a href="/elements/map.htm"><svg class="icon"><use href="/icons.svg#map"></use></svg></a>
  <h3><a href="/elements/map.htm">Map Element</a> (map)</h3>
  <p>The MapElement creates actions based on an in-bound value and range definitions.
</p>
</div>
<div class="iconcard"><a href="/elements/reference.htm"><svg class="icon"><use href="/icons.svg#default"></use></svg><h3>reference</h3></a><p>The <a href="/elements/map.htm">Reference Element</a> creates actions by comparing an incoming value with a reference value.</p>
</div>
<div class="iconcard">
  <a href="/elements/scene.htm"><svg class="icon"><use href="/icons.svg#scene"></use></svg></a>
  <h3><a href="/elements/scene.htm">Scene Element</a> (scene)</h3>
  <p>The Scene Element sends a series of actions triggered by a single incoming action. They can be send out step by step using a defined delay or by actions.
</p>
</div>
<div class="iconcard">
  <a href="/elements/select.htm"><svg class="icon"><use href="/icons.svg#select"></use></svg></a>
  <h3><a href="/elements/select.htm">Select Element</a> (select)</h3>
  <p>The SelectElement is used to choose one of many options with keys and a values. When selecting one of the options a key action and a value action is dispatched.
</p>
</div>
<h2>Display Elements</h2>
<p>The HomeDing library supports local attached <a href="/elements/display/index.htm">displays</a> but also works fine without a local display.</p>
<div class="iconcard">
  <a href="/elements/display/ssd1306.htm"><svg class="icon"><use href="/icons.svg#displayssd1306"></use></svg></a>
  <h3><a href="/elements/display/ssd1306.htm">Display SSD1306 Element</a> (ssd1306)</h3>
  <p>The DisplaySSD1306 Element allows connecting a pixel based OLED display based on a SSD1306 chip.
</p>
</div>
<div class="iconcard">
  <a href="/elements/display/sh1106.htm"><svg class="icon"><use href="/icons.svg#displaysh1106"></use></svg></a>
  <h3><a href="/elements/display/sh1106.htm">Display SH1106 Element</a> (sh1106)</h3>
  <p>The DisplaySH1106 Element allows connecting a pixel based OLED display based on a SH1106 chip.
</p>
</div>
<div class="iconcard">
  <a href="/elements/display/lcd.htm"><svg class="icon"><use href="/icons.svg#displaylcd"></use></svg></a>
  <h3><a href="/elements/display/lcd.htm">Display LCD Element</a> (lcd)</h3>
  <p>The DisplayLCD Element implements the display using Monochrome LCDs based on HD44780 chips. The display is connected by using the PCF8574 I2C chip to control the direct input lines of the display.
</p>
</div>
<div class="iconcard">
  <a href="/elements/display/max7219.htm"><svg class="icon"><use href="/icons.svg#displaymax7219"></use></svg></a>
  <h3><a href="/elements/display/max7219.htm">DisplayMAX7219 Element</a> (max7219)</h3>
  <p>The DisplayMAX7219 Element implements a larger display by using LED 8x8 led displays matrixes based on MAX7219 controller chips.
</p>
</div>
<p>On the displays several Elements can be used to display data, text and visuals:</p>
<div class="iconcard">
  <a href="/elements/display/text.htm"><svg class="icon"><use href="/icons.svg#displaytext"></use></svg></a>
  <h3><a href="/elements/display/text.htm">DisplayText Element</a> (text)</h3>
  <p>The DisplayTextElement allows sending a value to the display and show it at a specified position as text including a prefix and postfix. The value can be changed by using an action.
</p>
</div>
<div class="iconcard">
  <a href="/elements/display/dot.htm"><svg class="icon"><use href="/icons.svg#displaydot"></use></svg></a>
  <h3><a href="/elements/display/dot.htm">DisplayDot Element</a> (dot)</h3>
  <p>The DisplayDot Element allows sending a boolean value to the display and show it at a specified position as a shallow or filled dot/circle. The value can be changed by using an action.
</p>
</div>
<!-- { { elemCard("bar", "displaybar") }} -->
<div class="iconcard">
  <a href="/elements/display/line.htm"><svg class="icon"><use href="/icons.svg#displayline"></use></svg></a>
  <h3><a href="/elements/display/line.htm">DisplayLine Element</a> (line)</h3>
  <p>The DisplayLineElement allows drawing a simple fixed line on the display when the display supports pixel drawing.
</p>
</div>
<p>More detailed information on displays and related elements can be found in <a href="/elements/display/index.htm">displays</a>.</p>
<h2>One Value Display Elements</h2>
<p>These Elements can be used to display a single value.</p>
<div class="iconcard">
  <a href="/elements/display/max7219.htm"><svg class="icon"><use href="/icons.svg#max7219"></use></svg></a>
  <h3><a href="/elements/display/max7219.htm">DisplayMAX7219 Element</a> (max7219)</h3>
  <p>The DisplayMAX7219 Element implements a larger display by using LED 8x8 led displays matrixes based on MAX7219 controller chips.
</p>
</div>
<div class="iconcard">
  <a href="/elements/tm1637.htm"><svg class="icon"><use href="/icons.svg#tm1637"></use></svg></a>
  <h3><a href="/elements/tm1637.htm">TM1637 Element</a> (tm1637)</h3>
  <p>The TM1637 is a chip that allows using 7-segment displays up to 6 digits.
</p>
</div>
<h2>Time related Elements</h2>
<div class="iconcard"><a href="/elements/time.htm"><svg class="icon"><use href="/icons.svg#dstime"></use></svg><h3>time</h3></a><p>The <a href="/elements/time.htm">Time Element</a> sends actions with the actual local time.</p>
</div>
<div class="iconcard"><a href="/elements/dstime.htm"><svg class="icon"><use href="/icons.svg#dstime"></use></svg><h3>dstime</h3></a><p>The <a href="/elements/dstime.htm">DSTime Element</a> can retrieve the local time using the RTC DS3231 chip.</p>
</div>
<div class="iconcard"><a href="/elements/ntptime.htm"><svg class="icon"><use href="/icons.svg#ntptime"></use></svg><h3>ntptime</h3></a><p>The <a href="/elements/ntptime.htm">NTPTime Element</a> can retrieve the local time using the NTP protocol from a NTP server.</p>
</div>
<!--
:::element dcftime
The [DCFTime Element](/elements/dcftime.md) can retrieve the local time from a DCF 77kHz signal over the air.
:::
-->
<div class="iconcard"><a href="/elements/schedule.htm"><svg class="icon"><use href="/icons.svg#schedule"></use></svg><h3>schedule</h3></a><p>The <a href="/elements/schedule.htm">Schedule Element</a> creates on and off actions based on the actual local time.</p>
</div>
<div class="iconcard"><a href="/elements/alarm.htm"><svg class="icon"><use href="/icons.svg#schedule"></use></svg><h3>alarm</h3></a><p>The <a href="/elements/alarm.htm">Alarm Element</a> creates actions when reaching a defined time of day.</p>
</div>
<div class="iconcard"><a href="/elements/timer.htm"><svg class="icon"><use href="/icons.svg#timer"></use></svg><h3>timer</h3></a><p>The <a href="/elements/timer.htm">Timer Element</a> creates timer (duration) based actions.</p>
</div>
<p>More detailed information on time element and time related implementation can be found in <a href="/elements/timeelements.htm">time elements implementation</a>.</p>
<h2>System Elements</h2>
<div class="iconcard"><a href="/elements/device.htm"><svg class="icon"><use href="/icons.svg#device"></use></svg><h3>device</h3></a><p>The <a href="/elements/device.htm">Device Element</a> is used to configure the device level properties.</p>
</div>
<div class="iconcard"><a href="/elements/ota.htm"><svg class="icon"><use href="/icons.svg#ota"></use></svg><h3>ota</h3></a><p>The <a href="/elements/ota.htm">OTA Element</a> is used to enable and configure Over The Air Updates.</p>
</div>
<div class="iconcard"><a href="/elements/ssdp.htm"><svg class="icon"><use href="/icons.svg#ssdp"></use></svg><h3>ssdp</h3></a><p>The <a href="/elements/ssdp.htm">SSDP Element</a> is used to discovering devices on the network using SSDP protocol.</p>
</div>
<div class="iconcard"><a href="/elements/value.htm"><svg class="icon"><use href="/icons.svg#value"></use></svg><h3>value</h3></a><p>The <a href="/elements/value.htm">Value Element</a> is used to
receive and send actions to use and control an internal value.</p>
</div>
<div class="iconcard"><a href="/elements/menu.htm"><svg class="icon"><use href="/icons.svg#menu"></use></svg><h3>menu</h3></a><p>The <a href="/elements/menu.htm">Menu Element</a> is used for
displaying and changing multiple values.</p>
</div>
<div class="iconcard"><a href="/elements/log.htm"><svg class="icon"><use href="/icons.svg#log"></use></svg><h3>log</h3></a><p>The <a href="/elements/log.htm">Log Element</a> is used for
storing timestamp based sensor values.</p>
</div>
<h2>Network Elements</h2>
<p>Things based on the HomeDing library are network connected by default as they integrate a web server and web services.</p>
<p>The Network Elements extend the base functionality to connect to other devices and services over the network using different protocols.</p>
<div class="iconcard">
  <a href="/elements/remote.htm"><svg class="icon"><use href="/icons.svg#remote"></use></svg></a>
  <h3><a href="/elements/remote.htm">Remote element</a> (remote)</h3>
  <p>The RemoteElement allows sending actions to other elements in HomeDing devices on the network using http GET request.
</p>
</div>
<div class="iconcard"><a href="/elements/mqtt.htm"><svg class="icon"><use href="/icons.svg#default"></use></svg><h3>mqtt</h3></a><p>The MQTTElement enables publishing values to a MQTT Sever using the mqtt protocol.</p>
</div>
<p>Service elements interact with services to get or publish data using actions.</p>
<div class="iconcard"><a href="/elements/weatherfeed.htm"><svg class="icon"><use href="/icons.svg#weatherfeed"></use></svg><h3>weatherfeed</h3></a><p>The <a href="/elements/weatherfeed.htm">Weatherfeed Element</a>can retrieve weather forecast information from an internet service.</p>
</div>
<h2>Storage related Elements</h2>
<ul>
<li>SD Card Element</li>
</ul>
<div class="iconcard"><a href="/elements/sd.htm"><svg class="icon"><use href="/icons.svg#sdcard"></use></svg><h3>sd</h3></a><p>The Element …</p>
</div>
<div class="iconcard"><a href="/elements/sdmmc.htm"><svg class="icon"><use href="/icons.svg#sdcard"></use></svg><h3>sdmmc</h3></a><p>The SDMMCElement implements access to the file system on a SDMMC card on ESP32 processors and boards.</p>
</div>
<h2>Audio related Elements</h2>
<p>The <a href="/elements/audio/index.htm">Audio Elements</a> can be used to create / control audio related devices and chips.</p>
<div class="iconcard"><a href="/elements/audio/radio.htm"><svg class="icon"><use href="/icons.svg#audioradio"></use></svg><h3>audio/radio</h3></a><p>The Radio Element allows to control FM radio chips that are connected to the board via i2c bus.</p>
<p>This element is using the external <a href="http://www.mathertel.de/Arduino/RadioLibrary.aspx">Radio Library</a>
to configure and use various FM radio chips and boards.</p>
<p>This element is part of the <a href="/examples/radio.htm">Radio Example</a>.</p>
</div>
<div class="iconcard"><a href="/elements/audio/audio.htm"><svg class="icon"><use href="/icons.svg#audio"></use></svg><h3>audio/audio</h3></a><p>The Audio Element enables audio streaming and audio processing in a background task. The Audio Element is part of the WebRadio Example.</p>
<p>The <a href="/elements/audio/audio.htm">Audio Element</a> element is part of the <a href="/examples/webradio.htm">WebRadio Example</a>.</p>
</div>
<h2>Other Elements</h2>
<p>You can find some more elements in the examples folder.</p>
<p>These implementations are for special purpose or are still experimental cases
but are published already maybe with some restricted functionality.</p>
<div class="iconcard"><a href="/elements/diag.htm"><svg class="icon"><use href="/icons.svg#no"></use></svg><h3>diag</h3></a><p>The DiagElement is part of the DevDing Example  and offers some additional diagnose information.</p>
<p>This element is part of the <a href="/examples/devding.htm">DevDing example</a></p>
</div>
<div class="iconcard"><a href="/elements/ina219.htm"><svg class="icon"><use href="/icons.svg#no"></use></svg><h3>ina219</h3></a><p>The INA219 is a current and voltage sensor that uses the I2C bus for communication that can measure voltages up to 26V and current in various ranges.</p>
<p>This sensor is part of the <a href="/examples/probe.htm">Probe example</a></p>
</div>
<div class="iconcard"><a href="/elements/ina226.htm"><svg class="icon"><use href="/icons.svg#no"></use></svg><h3>ina226</h3></a><p>The INA226 is a current and voltage sensor that uses the I2C bus for communication that can measure voltages up to 26V on high-side or low-side and current in various ranges .</p>
<p>This sensor is part of the <a href="/examples/probe.htm">Probe example</a></p>
</div>
<h2>Web UI Elements</h2>
<p>These elements starting with <strong>web</strong> in their name are only known to the Web UI implementation but are not part of the firmware- The intention is to enrich and customize the Web UI dashboard with elements like presets and macros.</p>
<div class="iconcard"><a href="/elements/webbutton.htm"><svg class="icon"><use href="/icons.svg#button"></use></svg><h3>webbutton</h3></a><p>This element adds a button the Web UI of the board. The button can be used to trigger actions by clicking.</p>
</div>
<h2>See also</h2>
<ul>
<li><a href="/dev/elementclass.htm">Element</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a></div>
    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>