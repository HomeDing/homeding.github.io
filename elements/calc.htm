<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Base Element implementation for calculation supporting elements.'>
  <title>CALC Abstract Element</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav class="inpage open"></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>CALC Abstract Element</h1>

    
    
      <div class="plaincard">
    
    The CalcElement is implementing the common functionality for the Elements that create one output value from multiple input values. This Element is not intended to be used directly. Use the AND, OR and ADD Elements.
</div>
      
    <h2>Web UI for the Elements</h2>
<p>The standard card for these elements is used showing the current calculated output value.</p>
<p>Up to 8 input values can be used for calculation.</p>
<p>When no input value is given the output value is 0 by default.</p>
<h2>Element Configuration</h2>
<p>The <a href="/elements/calc.htm">Calc Element</a> is used as a base class
where the following properties are available for configuration:</p>
<blockquote>
<p><strong>type</strong> – (internal)
This property controls how the input values are scanned and can be modified by the derived elements.
The logical elements set this to datatype-boolean to enable scanning of <code>true</code> and <code>false</code> values.
The datatype-numeric and is used by the AddElement for scanning numbers.</p>
<p><strong>value[n]</strong> –
The input values of the element are given using the value array notation. n must be in the range of 0 to 7.</p>
<p><strong>invert</strong> –
The boolean calculations result is inverted when this property is set to true.</p>
<p><strong>onValue</strong> – These actions are emitted when the output value has changed.</p>
</blockquote>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> - Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> - A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> - The location of the device.</p>
<p><strong>loglevel</strong> - This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
</blockquote>
<h2>State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> – Is set to true when the element is active.</p>
<p><strong>value</strong> – The current output value is reported in the state.</p>
<h3>Example State</h3>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"add/duration"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"active"</span><span class="token operator">:</span><span class="token string">"true"</span><span class="token punctuation">,</span><br>    <span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"13"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Implementation details</h2>
<p>This base Element implementation implements the common functionality
and eases implementation of the calculation elements.</p>
<p>The derived elements must set the datatype property as required and need to implement the calc() method.</p>
<p>This method is called when any input value has be set to calc the new output value.</p>
<p>The common state implementation returns the current output value.</p>
<p>Internally all possible input values are stored in _inStringValues Strings after some input validation:</p>
<ul>
<li>values that have not been set using a value[] action contain empty strings.</li>
<li>The number of used i-values is stored in the variable _inputs so re-calculations only need to analyse
the in-values in index 0…(_inputs-1)</li>
<li>DATATYPE::STRING</li>
</ul>
<p>The number of max. 8 values can be changed by the CALCELEMENT_MAX_INPUTS definition.</p>
<h2>See Also</h2>
<ul>
<li><a href="/elements/and.htm">AND Element</a></li>
<li><a href="/elements/or.htm">OR Element</a></li>
<li><a href="/elements/add.htm">ADD Element</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a></div>
    
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    navObj.classList.toggle('open', (window.innerWidth > 880));

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>