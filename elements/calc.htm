<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Base Element implementation for calculation supporting elements.'>
  <title>The CALC Element</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-header">
    <a href="/" title="Startpage"><img class="icon" src="/i/default.svg" /></a>
    <h1>HomeDing</h1>
  </div>

  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  <nav class="inpage open"></nav>

  <main style="background-color:#eeeeee;padding:1rem">
    <h1>The CALC Element</h1>
<div class="iconcard"><svg class="icon"><use href="/icons.svg#calc"></use></svg><p>The CalcElement is implementing the common functionality for the Elements that create one output value from multiple input values. This Element is not intended to be used directly. Use the AND, OR and ADD Elements.</p>
</div>
<h2>Web UI for the Elements</h2>
<p>The standard card for these elements is used showing the current calculated output value.</p>
<h2>Element Configuration</h2>
<p>The up to 8 input values can be used for calculation.</p>
<p>When no input value is given the output value is 0 by default.</p>
<h2>Common properties</h2>
<p><strong>value[n]</strong> -
The input values of the element are given using the value array notation. n must be in the range of 0 to 7.</p>
<p><strong>type</strong> -
This property controls the input values notation and cannot be modified. The logical elements set this to datatype-boolean to enable scanning of <code>true</code> and <code>false</code> values.
The datatype-numeric and is used
by the AddElement for scanning numbers.</p>
<p><em>onValue</em>* -
These actions are emitted when the output value has changed.</p>
<h2>State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<p><strong>value</strong> -
The current output value is reported in the state.</p>
<h3>Example State</h3>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"add/duration"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"active"</span><span class="token operator">:</span><span class="token string">"true"</span><span class="token punctuation">,</span><br>    <span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"13"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Implementation details</h2>
<p>This base Element implementation
Implements the common functionality and eases implementation of the calculation function.</p>
<p>The derived elements must set the datatype property as required and need to implement the calc() method.</p>
<p>This method is called when any input value has be set to calc the new output value.</p>
<p>The common state implementation returns the current output value.</p>
<h2>See Also</h2>
<p>And
Or
Add</p>

  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    if (window.innerWidth > 880)
      navObj.classList.add('open');

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>