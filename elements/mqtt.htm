<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='publishing values to a MQTT Sever'>
  <title>MQTT Element</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav class="inpage open"></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>MQTT Element</h1>

    
    
      <div class="iconcard"><svg class="icon"><use href="/icons.svg#mqtt"></use></svg>
    
    The MQTTElement enables publishing values to a MQTT Sever using the mqtt protocol.
</div>
      
    <p>MQTT is a protocol with a lot of variations in the implementations.
This is what I discovered while looking at some MQTT implementations available on the internet.</p>
<p>The MQTTElement is made to support the mqtt protocol on the network to transfer values to MQTT Servers.</p>
<!-- and to receive value changes from MQTT Servers. -->
<p>Therefore it is not supporting all MQTT features as it is used only to publish and to subscribe to existing topics.</p>
<p>The MQTTElement is using the <a href="http://pubsubclient.knolleary.net/">Arduino PubSubClient Library</a> from Nick O’Leary that can be installed using the Arduino Library Manager
or directly from <a href="https://github.com/knolleary/pubsubclient">https://github.com/knolleary/pubsubclient</a> and API documentation from <a href="https://pubsubclient.knolleary.net/">https://pubsubclient.knolleary.net/</a>.</p>
<p>The library was developped with restricted memory in mind and is the library with the smallest footprint I could find.
It supports MQTT 3.1 and 3.1.1. on secure and insecure connections with QoS 0 and 1. The message size is limited to 128 bytes.</p>
<p>This fits into most needs and keeps the program and heap memory consumption low.</p>
<h2>Element Configuration</h2>
<!-- <object data="/element.svg?mqtt" type="image/svg+xml"></object> -->
<p><strong>server</strong> - The URI to reach the MQTT server on the network. The parameter is using the
<a href="https://github.com/mqtt/mqtt.org/wiki/URI-Scheme">MQTT URI-Scheme</a> like <code>mqtt://server:port</code> or <code>mqtts://server:port</code>.</p>
<p><strong>clientID</strong> - This is the client id identiying the participating device. This defaults to the given hostname specified in the device configuration.</p>
<p><strong>fingerprint</strong> - On secured connections the fingerprint parameter is used to verify the identity of the server.
When not configures the server identity will not be checked.</p>
<p><strong>buffersize</strong> - On secured connections this buffer size specifies the fixed maximum length of a received package.</p>
<p><strong>publish</strong> - The topic to be used for publishing. See below how to use this parameter.</p>
<p><strong>retain</strong> - When publishing messages this flag can be set to true to tell the broker
to remember the last sent message for subscribers.</p>
<p><strong>subscribe</strong> - The topic to be subscribed. See below how to use this parameter.</p>
<p><strong>qos</strong> - When subscribing the QOS defines…</p>
<p><strong>onValue</strong> - These actions are emitted when a message for the subscribed topic arrived. See below how to use this parameter.</p>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> - Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> - A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> - The location of the device.</p>
<p><strong>loglevel</strong> - This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
</blockquote>
<h3>Configuration Examples</h3>
<p>These examples use a DHT Element to create actions to show how they can be send using MQTT.</p>
<p>This configuration simply publishes a single temperature value</p>
<pre class="language-json"><code class="language-json"><span class="token property">"dht"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    ...<br>    <span class="token property">"ontemperature"</span><span class="token operator">:</span> <span class="token string">"mqtt/home?temperature=$v"</span><span class="token punctuation">,</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span><span class="token punctuation">,</span><br><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"home"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtt://pi:rasp-pwd@raspberry:1883"</span><span class="token punctuation">,</span><br>    <span class="token property">"publish"</span><span class="token operator">:</span> <span class="token string">"home/outside/temp"</span><span class="token punctuation">,</span><br>    <span class="token property">"retain"</span><span class="token operator">:</span> <span class="token number">1</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>This configuration publishes 2 values from the DHT sensor
using the wildcard publish mechanism:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"dht"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    ...<br>    <span class="token property">"ontemperature"</span><span class="token operator">:</span> <span class="token string">"mqtt/home?temperature=$v"</span><span class="token punctuation">,</span><br>    <span class="token property">"onhumidity"</span><span class="token operator">:</span> <span class="token string">"mqtt/home?humidity=$v"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span><span class="token punctuation">,</span><br><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"home"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtt://pi:rasp-pwd@raspberry:1883"</span><span class="token punctuation">,</span><br>    <span class="token property">"publish"</span><span class="token operator">:</span> <span class="token string">"home/outside/+"</span><span class="token punctuation">,</span><br>    <span class="token property">"retain"</span><span class="token operator">:</span> <span class="token number">1</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>This configuration subscribes to a single topic and value :</p>
<pre class="language-json"><code class="language-json"><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"home"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtt://pi:rasp-pwd@raspberry:1883"</span><span class="token punctuation">,</span><br>    <span class="token property">"subscribe"</span><span class="token operator">:</span> <span class="token string">"home/outside/temp"</span><span class="token punctuation">,</span><br>    <span class="token property">"retain"</span><span class="token operator">:</span> <span class="token number">1</span><br>    onValue<span class="token string">": "</span>???"<br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Server Connection</h2>
<p>The network and security parameters on how to reach the MQTT server on the network are specified by the
<code>server</code> parameter using the <a href="https://github.com/mqtt/mqtt.org/wiki/URI-Scheme">MQTT URI-Scheme</a>:</p>
<blockquote>
<p><strong>mqtt[s]://[username:password@]servername[:port]</strong>.</p>
</blockquote>
<h3>Secure Connections</h3>
<p>To enable encrypted (secure) communication you must provide a link to the server using the <code>mqtts</code> protokol.</p>
<pre class="language-json"><code class="language-json"><span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtts://alias:adapass@io.adafruit.com:8883"</span></code></pre>
<p>When using the mqtts protocol the Element uses a WifiClientSecure connection to communicate with the server.</p>
<p>The client probes for a small receive buffer. Servers that do not support negotiation of buffer sizes create the problem that a 16k buffer will be allocated taking most of the heap memory space that may cause the device to fail. You can specify a smaller fixed buffer size in case you know that only small data packages are received.</p>
<p>The <code>buffersize</code> parameter specifies the fixed maximum length of a received package.
The parameter must be a power of 2 like 512 or 1024.
When not set or set to 0 the client probes with the server on a minimal supported TSL buffer size
to identify the minimal acceptable buffer size minimizing the consumed heap memory.</p>
<p>512 bytes buffer size is the minimum.</p>
<p>To verify that the device communicates with the right server the <code>fingerprint</code> parameter can be set to the certificate fingerprint of the server.</p>
<h3>MQTT Authentication</h3>
<p>MQTT provides username/password authentication as part of the protocol.
This can be configured by specifying a username and password in the URI in the <code>server</code> property.</p>
<pre class="language-json"><code class="language-json"><span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtt://pi:rasp-pwd@raspberry:1883"</span></code></pre>
<h3>MQTT Port</h3>
<p>The <a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml">MQTT standard port</a> 1883 is used by default for non-secure connections when not specified.</p>
<p>The <a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml">MQTT standard port</a> 8883 is used by default for secure connections when not specified.</p>
<h2>Publish and Subscribe to multiple topics</h2>
<p>Publishing and consuming values from multiple topics of a device or sensor is a common use-case. Using MQTT it is common to group all data from a sensor on the same node in the topic tree like:</p>
<pre class="language-txt"><code class="language-txt">publish 'outside/sensor/temperature' '24.00'<br>publish 'outside/sensor/pressure' '9980'<br>publish 'outside/sensor/humidity' '70.20'</code></pre>
<p>The <code>+</code> wildcard in a subscription is supports subscribing to all topics within a node:</p>
<pre class="language-txt"><code class="language-txt">subscribe 'outside/sensor/+'</code></pre>
<p>The MQTTElement can handle these grouped MQTT topcis and values.
The mode is enabled using a <code>+</code> wildcard as the last character
in the <code>publish</code> parameter specifying the topic tree.
When the MQTTElement is active all received actions will be treated as data publishing actions:</p>
<pre class="language-txt"><code class="language-txt">/api/state/mqtt/outside?temperature=24.00<br>/api/state/mqtt/outside?pressure=9980</code></pre>
<p>Please be aware that common actions/topics using ‘start’ and ‘stop’
will not result in data publishing as they are handled by the base Element implementation.
So just avoid these names.</p>
<h2>Actions for MQTT subscriptions</h2>
<p>The <code>onValue</code> event occurs when data to a subscribed topic arrives.</p>
<p>The actions can be defined as usual by using the <code>$v</code> placeholder for the value</p>
<pre class="language-json"><code class="language-json">  <span class="token property">"onValue"</span><span class="token operator">:</span> <span class="token string">"device/0?log=received:$v"</span></code></pre>
<p>The actions can also contain the following placeholders to send the full ($t) or partial (k) topic name</p>
<p>When receiving <code>'outside/sensor/temperature'='24.00'</code> the</p>
<ul>
<li><code>$t</code> (topic) placeholder will contain the fill topic name: <code>outside/sensor/temperature</code></li>
<li><code>$k</code> (key) placeholder will contain the partial topic name: <code>temperature</code></li>
<li><code>$v</code> (value) will contain the value <code>24.00</code></li>
</ul>
<p>The placeholders for topic names are helpful when subscribing using a wildcard in the subscribe parameter.</p>
<h2>Topic Names</h2>
<p>The data processed MQTT brokers are organized in a hierarchical way. The topic names use the syntax contain use a folder syntax like <code>device/sensor/type</code>.</p>
<p>When using your private MQTT broker you are free to define your own hierarchy but when using brokers on the internet you must look out for naming conventions respecting a pre-defined structure. This is important especially for clustered brokers that process from many thousands of devices.</p>
<p>Special characters in topic names to be avoided:</p>
<ul>
<li>
<p>‘#’ –  This wildcard is used to subscribe to all messages of a broker across all levels.</p>
</li>
<li>
<p>‘+’ –  This wildcard is used to subscribe to all messages of a broker within a level.</p>
</li>
<li>
<p>‘/’ – used for the hierarchy structure in topic names.</p>
</li>
<li>
<p>‘$’ –  used as special start character for data from the broker system</p>
</li>
<li>
<p>‘*’ (wildcards), ‘&gt;’ –  may have special meanings</p>
</li>
<li>
<p>(empty topics) – just don’t work.</p>
</li>
</ul>
<p>There are some public available documents on how to build up topic names in general:</p>
<ul>
<li><a href="https://tinkerman.cat/post/mqtt-topic-naming-convention">https://tinkerman.cat/post/mqtt-topic-naming-convention</a></li>
<li><a href="https://pi3g.com/2019/05/29/mqtt-topic-tree-design-best-practices-tips-examples/">https://pi3g.com/2019/05/29/mqtt-topic-tree-design-best-practices-tips-examples/</a></li>
</ul>
<h2>See also</h2>
<ul>
<li>Standard Port Numbers: <a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml">https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml</a></li>
<li><a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml">https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml</a></li>
<li>&lt;<a href="https://docs.solace.com/Open-APIs-Protocols/MQTT/MQTT-Topics.htm">https://docs.solace.com/Open-APIs-Protocols/MQTT/MQTT-Topics.htm</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/network.htm">Network</a></div>
    
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    navObj.classList.toggle('open', (window.innerWidth > 880));

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>