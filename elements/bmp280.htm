
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>BMP280 Element</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name='description' content='Support of the BMP280 air temperature and barometric pressure sensor chips.'>
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
</head>

<body class="sitelayout" style="--content-width:800px">
  <div class="navbar">
    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
    </svg>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  
  <nav class="menu"></nav>

  <main>
    <h1>BMP280 Element</h1>

    
      <div class="card-container horizontal text" style="--card-height:5rem;--card-image-size:5rem;">
        <div class="card">
          
            <svg>
              <use href="/icons.svg#bmp280"></use>
            </svg>
          
          <div class="body">
            <p>The BMP280 Element supports the BMP280 sensor chips for air temperature and air absolute barometric pressure.</p>

          </div>
        </div>
      </div>
    

    <p>Bosch is developing advanced integrated environmental chips sind several years.  Some of them are available on breakout
boards and can easily be used together with the ESP CPU chips.</p>
<ul>
<li><a href="/elements/bmp280.htm">BMP280</a> (temp and pressure) in 2012</li>
<li>BME280 (temp, humidity and pressure) in 2013</li>
<li><a href="/elements/bme680.htm">BME680</a> (temp, humidity, pressure and volatile organic gas) in 2015</li>
</ul>
<p>The have similar but not identical interfaces so each needs a special library and element to be used in the HomeDing library.</p>
<p>For BMP280 and BME680 no external library is required.</p>
<h2>Interface</h2>
<p>The physical communication is done via the I2C bus to read raw data values as well as some correction factors to
calculate the temperature in celsius and pressure in pascal</p>
<p>This sensor element uses the base functionality of the <a href="/elements/sensors.htm">sensor class</a> to implement timing of
taking probes and uses the WireUtil class for I2C data communication.</p>
<p>The calculation procedures are documented in the datasheet and taken unchanged into the BMP280Element implementation.</p>
<p>The sensor is very similar to the <a href="/elements/bme680.htm">BME680 Sensor</a> that offers 2 more sensor values.</p>
<!-- ## Web UI for the BMP280 Element

There is a dedicated card for this element available that shows the actual temperature and pressure.

![BMP280 Sensor UI](/elements/bmp280ui.png)
TODO: Picture for is bmp280ui missing
-->
<h2>Using the BMP280 Element</h2>
<p>The BMP280 Element is not part of the core set of elements but it can be added to the sketch and firmware by defining
the macro <code>HOMEDING_INCLUDE_BMP280</code>.  This adds about 2100 bytes to the firmware but doesn’t need any external library.</p>
<pre class="language-cpp"><code class="language-cpp"><span class="token comment">// Use some more optional Elements.</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">HOMEDING_INCLUDE_BMP280</span></span></code></pre>
<p>The Sensor recipe shows how to configure a sensor device and log an actual value to get insight on passed values using a
graphical output.</p>
<p>A complete story about using sensors with the HomeDing library is available here:
<a href="/stories/story-airquality.htm">Air Quality Monitoring Story</a></p>
<h2>Connecting a Sensor</h2>
<p>The BMP280 sensor must be connected to the common i2c bus and needs 3.3V power supply.</p>
<p>Using the default I2C bus pins:</p>
<table>
<thead>
<tr>
<th>Signal</th>
<th>ESP8266</th>
<th>ESP32</th>
<th>Sensor</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="gpio black">GND</span></td>
<td>GND</td>
<td>GND</td>
<td>GND</td>
<td>Ground for I2C and Power Supply</td>
</tr>
<tr>
<td><span class="gpio red">VCC</span></td>
<td>3.3v</td>
<td>3.3v</td>
<td>VCC/VDD</td>
<td>Power Supply</td>
</tr>
<tr>
<td><span class="gpio blue">SDA</span></td>
<td>GPIO4(D2)</td>
<td>IO21</td>
<td>SDA</td>
<td>I2C Data Signal</td>
</tr>
<tr>
<td><span class="gpio yellow">SCL</span></td>
<td>GPIO5(D1)</td>
<td>IO22</td>
<td>SCL</td>
<td>I2C Clock Signal</td>
</tr>
</tbody>
</table>
<p>The common i2c bus is configured in the <a href="/elements/device.htm">device element</a>.  For more details on using the i2c bus
and specifying pins see <a href="/dev/i2c.htm">I2C bus</a>.</p>
<h2>Element Configuration</h2>
<p><object data="/element.svg?bmp280" type="image/svg+xml"></object></p>
<p>The following properties are available for configuration of the element:</p>
<blockquote>
<p><strong>address</strong> – The I2C Address of the sensor. The default value is 0x76.</p>
<p><strong>onTemperature</strong> – These actions are send when a new temperature value has been read. The value given in the actions is actual temperature in Celcius.</p>
<p><strong>onPressure</strong> – These actions are send when a new pressure value has been read. The value given in the actions is actual pressure in hPA.</p>
</blockquote>
<p>From the base <a href="/elements/sensors.htm">Sensor Element</a> implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>readTime</strong> – Time between 2 probes being fetched from the sensor. Default value is 1m.</p>
<p><strong>resendTime</strong> – The current values of the probe are resent after this specified time even when not changing.</p>
<p><strong>warmupTime</strong> – This time is waited after powering the sensor on the first start or after a reset before the first data is fetched.
The default time is set to 3 seconds.</p>
<p><strong>restart</strong> – This property can be set to true to enable an automated restart when the sensor was not responding data.</p>
</blockquote>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> – Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> – A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> – The location of the device.</p>
<p><strong>loglevel</strong> – This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
<p><strong>startup</strong> – This property can be used to start the element using a different initialization phase.
Possible values are “sys”, “net”, “time”. See <a href="/dev/startup.htm">The Startup sequence</a>.</p>
</blockquote>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"bmp280"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"tp"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"0x77"</span><span class="token punctuation">,</span>
      <span class="token property">"readTime"</span><span class="token operator">:</span> <span class="token string">"30s"</span><span class="token punctuation">,</span>
      <span class="token property">"resendTime"</span><span class="token operator">:</span> <span class="token string">"2m"</span><span class="token punctuation">,</span>
      <span class="token property">"onTemperature"</span><span class="token operator">:</span> <span class="token string">"device/0?log=temp=$v"</span><span class="token punctuation">,</span>
      <span class="token property">"onPressure"</span><span class="token operator">:</span> <span class="token string">"device/0?log=pressure=$v"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>State</h2>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"bmp280/tp"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"active"</span><span class="token operator">:</span><span class="token string">"true"</span><span class="token punctuation">,</span>
    <span class="token property">"temperature"</span><span class="token operator">:</span><span class="token string">"21.21"</span><span class="token punctuation">,</span>
    <span class="token property">"pressure"</span><span class="token operator">:</span><span class="token string">"99784"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>See also</h2>
<ul>
<li><a href="/elements/bme680.htm">BME680 Sensor</a></li>
<li><a href="/dev/i2c.htm">Using the I2C bus</a></li>
<li><a href="https://www.bosch-sensortec.com/products/environmental-sensors/pressure-sensors/bmp280/">https://www.bosch-sensortec.com/products/environmental-sensors/pressure-sensors/bmp280/</a></li>
<li><strong><a href="https://www.bosch-sensortec.com/media/boschsensortec/downloads/datasheets/bst-bmp280-ds001.pdf">https://www.bosch-sensortec.com/media/boschsensortec/downloads/datasheets/bst-bmp280-ds001.pdf</a></strong> Handbook and programming hints.</li>
</ul>


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/sensor.htm">Sensor</a></div>
      
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');
    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async>
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>