<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content=''>
  <title></title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-header">
    <a href="/" title="Startpage"><img class="icon" src="/i/default.svg" /></a>
    <h1>HomeDing</h1>
  </div>

  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  <nav class="inpage x  open"></nav>

  <main style="padding:1rem">
    <h2>SHT20 High-precision Temperature And Humidity Sensor</h2>
<div class="iconcard"><svg class="icon"><use href="/icons.svg#dht"></use></svg><p>The <strong>SHT2x</strong> sensors provide some high precision temperature and humidity sensors that communicate on the I2C bus.</p>
</div>
<p>In contrast to other sensors like <a href="/elements/dht.htm">DHT20</a> and <a href="/elements/ds18b20.htm">Dallas</a> no proprietary protocol on the wire is used but data is exchanged over I2C.</p>
<p>There are different housings and boards for the sensor available.</p>
<p><img src="/elements/sht20.jpg" alt="SHT20 Sensor"></p>
<h2>Web UI for the SHT20 Element</h2>
<p>There is a card for this element available that shows the actual temperature and humidity.</p>
<p><img src="/elements/sht20ui.png" alt="SHT20 Sensor UI"></p>
<h2>Using the SHT20 Element</h2>
<p>The SHT20 Element is not part of the core set of elements but can be added to the firmware by including the definition of
HOMEDING_INCLUDE_SHT20 in the sketch:</p>
<p>'''CPP
#define HOMEDING_INCLUDE_SHT20
'''</p>
<p>This element requires no extra library and the calculation for temperature and humidity from the raw values is included in the element implementation.</p>
<h2>Element Configuration</h2>
<p>The following properties are available for configuration of the element:</p>
<p><strong>address</strong> - The i2c address of the sensor. The default value is 0x40.</p>
<p><strong>onTemperature</strong> - These actions are emitted by the element when the temperature gets a new value. The action will not be sent when reading the sensor values that stay the same.</p>
<p><strong>onHumidity</strong> - These actions are emitted by the element when the humidity gets a new value. The action will not be sent when reading ne sensor values that stay the same.</p>
<p>From the generalized sensor element the following properties are available for configuration:</p>
<p><strong>readTime</strong> - The time between 2 probes from the sensor are fetched. The default value is 1 minute.</p>
<p><strong>resendTime</strong> - The current values of the probe are resent after this specified time even when not changing.</p>
<p><strong>warmupTime</strong> - This time is waited after powering the sensor on the first start or after a reset before the first data is fetched.
The default time is set to 3 seconds.</p>
<p><strong>restart</strong> - This property can be set to true to enable an automated restart when the sensor was not responding data.</p>
<h3>Configuration Example</h3>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"sht20"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"SHT20 Sensor"</span><span class="token punctuation">,</span><br>      <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"0x40"</span><span class="token punctuation">,</span><br>      <span class="token property">"onTemperature"</span><span class="token operator">:</span> <span class="token string">"device/0?log=temp: $v\u00dfC"</span><span class="token punctuation">,</span><br>      <span class="token property">"onHumidity"</span><span class="token operator">:</span> <span class="token string">"device/0?log=hum: $v%"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Element State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<p><strong>temperature</strong> - The last read temperature value from the sensor.</p>
<p><strong>humidity</strong> - The last read humidity value from the sensor.</p>
<h3>Example State</h3>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"sht20/0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"active"</span><span class="token operator">:</span><span class="token string">"true"</span><span class="token punctuation">,</span><br>    <span class="token property">"temperature"</span><span class="token operator">:</span><span class="token string">"19.92"</span><span class="token punctuation">,</span><br>    <span class="token property">"humidity"</span><span class="token operator">:</span><span class="token string">"53.4"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>more</h2>
<ul>
<li><a href="https://www.sensirion.com/SHT20/">https://www.sensirion.com/SHT20/</a></li>
<li><a href="https://www.sensirion.com/fileadmin/user_upload/customers/sensirion/Dokumente/2_Humidity_Sensors/Datasheets/Sensirion_Humidity_Sensors_SHT20_Datasheet.pdf">https://www.sensirion.com/fileadmin/user_upload/customers/sensirion/Dokumente/2_Humidity_Sensors/Datasheets/Sensirion_Humidity_Sensors_SHT20_Datasheet.pdf</a></li>
<li><a href="https://github.com/u-fire/uFire_SHT20/blob/master/src/uFire_SHT20.cpp">https://github.com/u-fire/uFire_SHT20/blob/master/src/uFire_SHT20.cpp</a></li>
</ul>

  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    navObj.classList.toggle('open', (window.innerWidth > 880));

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>