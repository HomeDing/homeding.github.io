<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <title>NO-TITLE</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>More on MQTT</h1>
<h2>Setup a private mqtt server</h2>
<p><a href="https://mosquitto.org/man/mosquitto-conf-5.html">https://mosquitto.org/man/mosquitto-conf-5.html</a></p>
<ul>
<li><a href="http://www.steves-internet-guide.com/">http://www.steves-internet-guide.com/</a></li>
<li><a href="http://www.steves-internet-guide.com/mossquitto-conf-file/">http://www.steves-internet-guide.com/mossquitto-conf-file/</a></li>
</ul>
<p><a href="https://medium.com/jungletronics/mosquitto-user-access-configurations-setups-2f95dc593adf">https://medium.com/jungletronics/mosquitto-user-access-configurations-setups-2f95dc593adf</a></p>
<h2>MQTT Servers on the Internet</h2>
<ul>
<li>some available without cost for low number of messages</li>
<li>can integrate external services like google assistant</li>
</ul>
<h2><a href="http://io.adafruit.com">io.adafruit.com</a></h2>
<ul>
<li>Secure server: mqtts://io.adafruit.com:8883</li>
<li>InSecure server: mqtt://io.adafruit.com:1883</li>
<li>Username: as registered at <a href="http://adafruit.io">adafruit.io</a></li>
<li>passwd: The MQTT connections use a separate key, not your account password. Optain a key from <a href="http://adafruit.io">adafruit.io</a> and click on Active Key.</li>
<li>Client ID: empty or random</li>
<li>MQTT 3.1.1</li>
<li>Limit: 20 connections per minute, 30/60 requests per minute, temporarily ban for the account</li>
<li>QoS 0 and 1</li>
<li>Supports secure transfer buffer size of 512</li>
</ul>
<p>The convention on topic name is using the username as the root in the topic name like</p>
<p><code>mathertel/feeds/counter</code>.</p>
<p><code>mathertel/feeds/counter/csv</code>.
<code>mathertel/feeds/counter/json</code>.</p>
<p><a href="https://io.adafruit.com/api/docs/mqtt.htm">https://io.adafruit.com/api/docs/mqtt.htm</a></p>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"ada"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"mqtts://mathertel:1234-1234-1234-1234@io.adafruit.com:8883"</span><span class="token punctuation">,</span><br>    <span class="token property">"topic"</span><span class="token operator">:</span> <span class="token string">"mathertel/feeds/counter"</span><span class="token punctuation">,</span><br>    <span class="token property">"fingerprint"</span><span class="token operator">:</span> <span class="token string">"59 3C 48 0A B1 8B 39 4E 0D 58 50 47 9A 13 55 60 CC A0 1D AF"</span><span class="token punctuation">,</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>{your Adafruit IO username}/feeds/{feed key}
{your Adafruit IO username}/feeds/{feed key}/csv
{your Adafruit IO username}/feeds/{feed key}/json</p>
<h2><a href="http://arduino.io">arduino.io</a></h2>
<p>The ArduinoIoTCloud library adds an additional leyer upon the mqtt protocol
implemented in the ArduinoMqttClient library.</p>
<p>I got the simple examples up and running and extracted some details about the MQTT implementation.</p>
<p>However the server is not supporting small packages and package size probing
so the esp8266 memory limitation is breaking the implementation.</p>
<p>Here are some details that you can find using the debug feature in the library (see source code):</p>
<p>MQTT Broker: <a href="https://mqtts-up.iot.arduino.cc:8884">https://mqtts-up.iot.arduino.cc:8884</a> (used for id+key)
Device ID: adce94ef-1111-2222-3333-b1b9366b4444 (mentioned as <code>BOARD_ID</code> in the created example code)
Password: “3DES…PK4” (mentioned as <code>SECRET_DEVICE_KEY</code> in the created example code)</p>
<p>The topics / feeds are named using the pattern</p>
<p>“/a/d/” + <device-id> + “/e/o” for subscribing.
“/a/d/” + <device-id> + “/e/i” for publishing.</p>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"xx"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"https://mqtts-up.iot.arduino.cc:8884"</span><span class="token punctuation">,</span><br>    <span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">"adce94ef-73ed-4386-a7ff-b1b9366b7232"</span><span class="token punctuation">,</span><br>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"3DEWS9BVSYTH0HGAHPK4"</span><span class="token punctuation">,</span><br>    <span class="token property">"feed"</span><span class="token operator">:</span> <span class="token string">"/a/d/adce94ef-73ed-4386-a7ff-b1b9366b7232/e/i/temp"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span><br></code></pre>
<h2><a href="http://public.mqtthq.com">public.mqtthq.com</a></h2>
<p>This is one of the unsecured MQTT brokers on the internet driven by &lt;<a href="http://controlbits.com">controlbits.com</a>&gt;
where you can publish and subscribe to values.</p>
<p><a href="http://MQTTHQ.com">MQTTHQ.com</a> works without any account and all data you publish will be visible to anyone who knows the topic name.</p>
<p>Data is not stored on the server so only connected clients will get an update.</p>
<p>More information can be found on <a href="https://mqtthq.com">https://mqtthq.com</a>.</p>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"xx"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"http://public.mqtthq.com:1883"</span><span class="token punctuation">,</span><br>    <span class="token property">"feed"</span><span class="token operator">:</span> <span class="token string">"mathertel/f/temp"</span><span class="token punctuation">,</span><br>    <span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">""</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<h2>raspberryPi with mosquitto</h2>
<pre class="language-json"><code class="language-json"><span class="token property">"mqtt"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>  <span class="token property">"dispi"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span><br>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"http://dispi:1883"</span><span class="token punctuation">,</span><br>    <span class="token property">"feed"</span><span class="token operator">:</span> <span class="token string">"outdoor/temp"</span><span class="token punctuation">,</span><br>    <span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">"homesa"</span><span class="token punctuation">,</span><br>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"Home4mqtt"</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Node-RED installation</h2>
<p><a href="https://nodered.org/docs/getting-started/raspberrypi#running-locally">https://nodered.org/docs/getting-started/raspberrypi#running-locally</a></p>
<p>phrase: “HomeRed”</p>
<p>Running Node-RED install for user pi at /home/pi on raspbian</p>
<p>This can take 20-30 minutes on the slower Pi versions - please wait.</p>
<p>Stop Node-RED                       ✔
Remove old version of Node-RED      ✔
Node option not specified           :   --node12, --node14, or --node16
Leave existing Node.js              :   v14.19.1   Npm 6.14.16
Clean npm cache                     -
Install Node-RED core               ✔   2.2.2
Move global nodes to local          -
Leave existing nodes                -
Install extra Pi nodes              ✔
Add shortcut commands               ✔
Update systemd script               ✔</p>
<p>You can now start Node-RED with the command  node-red-start
or using the icon under   Menu / Programming / Node-RED
Then point your browser to localhost:1880 or <a href="http://%7Byour_pi_ip-address%7D:1880">http://{your_pi_ip-address}:1880</a></p>
<p>Started :  Wed 13 Apr 2022 07:33:23 PM CEST
Finished:  Wed 13 Apr 2022 07:36:39 PM CEST</p>
<p>You may want to run   node-red admin init
to configure your initial options and settings.</p>
<p>Once Node-RED has started, point a browser at <a href="http://192.168.2.198:1880">http://192.168.2.198:1880</a>
On Pi Node-RED works better with the Firefox or Chrome browser</p>
<p>Use   node-red-stop                          to stop Node-RED
Use   node-red-start                         to start Node-RED again
Use   node-red-log                           to view the recent log output
Use   sudo systemctl enable nodered.service  to autostart Node-RED at every boot
Use   sudo systemctl disable nodered.service to disable autostart on boot</p>
<p>To find more nodes and example flows - go to <a href="http://flows.nodered.org">http://flows.nodered.org</a></p>
<h2><a href="https://test.mosquitto.org/">https://test.mosquitto.org/</a></h2>
<h2><a href="https://www.hivemq.com/">https://www.hivemq.com/</a></h2>
<p>create account
get MQTT cluster of a BASIC size good for development hosted on AWS.
Data is stored for 3 days.</p>
<p>HiveMQ is providing a command line utility to check / update current values
available at <a href="https://github.com/hivemq/mqtt-cli">https://github.com/hivemq/mqtt-cli</a>.</p>
<p>The HiveMQ company advises to use the pubsub library and there are some hints about using it on the web site.</p>
<h2>MQTT Explorer</h2>
<p>A Windows application available in the Microsoft Store.</p>
<h2>See also</h2>
<ul>
<li><a href="https://mntolia.com/10-free-public-private-mqtt-brokers-for-testing-prototyping/">https://mntolia.com/10-free-public-private-mqtt-brokers-for-testing-prototyping/</a></li>
<li><a href="https://iot4beginners.com/top-15-open-source-public-free-brokers-of-mqtt/">https://iot4beginners.com/top-15-open-source-public-free-brokers-of-mqtt/</a></li>
<li><a href="https://github.com/eclipse/mosquitto">https://github.com/eclipse/mosquitto</a></li>
<li></li>
</ul>
<hr>
<pre class="language-txt"><code class="language-txt">ip:192.168.2.200,mask:255.255.255.0,gw:192.168.2.1<br>Connected to "KHMH"<br>TX[110]: 10 6C 00 04 (connect)<br>  4D 51 54 54<br>  "MQTT"<br>  04 C2 00 1E 00 <br><br>  24 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 00<br>  [36] "adce94ef-73ed-4386-a7ff-b1b9366b7232" \0<br>  24 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 00<br>  [36] "adce94ef-73ed-4386-a7ff-b1b9366b7232" \0<br>  14 33 44 45 57 53 39 42 56 53 59 54 48 30 48 47 41 48 50 4B 34 <br>  [20] "3DEWS9BVSYTH0HGAHPK4"<br>RX: 20 02 00 00 (CONNACK)<br><br>TX[49]: 30 46 00 2D (PUBLISH)<br>  2F 61 2F 64 2F 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 2F 65 2F 6F<br>  ".../o"<br>TX[23]: 9F A2 00 6B 4C 49 42 5F 56 45 52 53 49 4F 4E 03 65 31 2E 36 2E 30 FF <br><br>TX[52]: 82 32 00 01 (subscribe)<br>  00 2D 2F 61 2F 64 2F 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 2F 65 2F 69 00 <br>  [45] "/a/d/adce94ef-73ed-4386-a7ff-b1b9366b7232/e/i" (0)<br><br>RX: 90 03 00 01 (subAck)<br>  00 30 9C 01 00 2D 2F 61 2F 64 2F 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 2F 65 2F 69 81 A4 21 78 2D 75 72 6E 3A 75 75 69 64 3A 61 64 63 65 39 34 65 66 2D 37 33 65 64 2D 34 33 38 36 2D 61 37 66 66 2D 62 31 62 39 33 36 36 62 37 32 33 32 22 FB 41 D8 95 1F 71 40 00 00 00 68 74 68 69 6E 67 5F 69 64 03 78 24 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36<br><br>TX[52]: 82 32 00 02 (subscribe)<br>  00 2D 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 65 2F 69 00 <br>  [45]<br>RX: 90 03 00 02 00<br>TX[57]: 82 37 00 03 00 32 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 73 68 61 64 6F 77 2F 69 00 <br>RX: 90 03 00 03 00<br><br>Connected to Arduino IoT Cloud<br><br>Thing ID: 224b84c9-7b57-46db-b6f7-9a34b88743b6<br><br>TX[54]: 30 4A 00 32 <br>  2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 73 68 61 64 6F 77 2F 6F<br>  "/a/t/224b84c9-7b57-46db-b6f7-9a34b88743b6/shadow/o"<br>TX[22]: 81 A2 00 63 72 3A 6D 03 6D 67 65 74 4C 61 73 74 56 61 6C 75 65 73 <br><br>RX: 30 B1 01 00 32 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 73 68 61 64 6F 77 2F 69 84 A4 22 FB 41 D8 95 1B ED 80 00 00 00 67 63 6F 75 6E 74 65 72 06 FB 40 50 C0 00 00 00 00 00 02 FB 40 25 FA E1 40 00 00 00 A2 00 64 74 65 6D 70 02 FB 00 00 00 00 00 00 00 00 A3 00 69 74 7A 5F 6F 66 66 73 65 74 06 FB 40 AC 24 00 00 00 00 00 02 FB 40 BC 20 00 00 00 00 00 A3 00 6C 74 7A 5F 64 73 74 5F 75 6E 74 69 6C 06 FB 40 AC 24 00 00 00 00 00 02 FB 41 D8 D7 73 24 00 00 00<br>counter set to 10.99<br>temp set to 0.00<br>TX[49]: 30 73 00 2D 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 65 2F 6F <br>TX[68]: 9F A2 00 67 63 6F 75 6E 74 65 72 02 FA 41 2F D7 0A A2 00 64 74 65 6D 70 02 FA 00 00 00 00 A2 00 69 74 7A 5F 6F 66 66 73 65 74 02 19 1C 20 A2 00 6C 74 7A 5F 64 73 74 5F 75 6E 74 69 6C 02 1A 63 5D CC 90 FF </code></pre>
<p>67 63 6F 75 6E 74 65 72 “counter”
74 65 6d 70 “temp”</p>
<p>TX[2]: C0 00 (Ping Request)
RX: D0 00 (Ping Response)</p>
<p>Connected to Arduino IoT Cloud
Thing ID: 224b84c9-7b57-46db-b6f7-9a34b88743b6
TX[54]: 30 4A 00 32 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 73 68 61 64 6F 77 2F 6F
TX[22]: 81 A2 00 63 72 3A 6D 03 6D 67 65 74 4C 61 73 74 56 61 6C 75 65 73
RX[115]: 84 A3 22 FB 41 D8 95 60 A1 00 00 00 00 67 63 6F 75 6E 74 65 72 02 FB 40 25 FA E1 40 00 00 00 A2 00 64 74 65 6D 70 02 FB 00 00 00 00 00 00 00 00 A3 00 69 74 7A 5F 6F 66 66 73 65 74 06 FB 40 88 F0 00 00 00 00 00 02 FB 40 BC 20 00 00 00 00 00 A3 00 6C 74 7A 5F 64 73 74 5F 75 6E 74 69 6C 06 FB 40 88 F0 00 00 00 00 00 02 FB 41 D8 D7 73 24 00 00 00
counter set to 10.99
temp set to 0.00
TX[49]: 30 73 00 2D 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 65 2F 6F
TX[68]: 9F A2 00 67 63 6F 75 6E 74 65 72 02 FA 41 2F D7 0A A2 00 64 74 65 6D 70 02 FA 00 00 00 00 A2 00 69 74 7A 5F 6F 66 66 73 65 74 02 19 1C 20 A2 00 6C 74 7A 5F 64 73 74 5F 75 6E 74 69 6C 02 1A 63 5D CC 90 FF
pm open,type:2 0
temp=17.10
TX[49]: 30 3E 00 2D 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 65 2F 6F
TX[15]: 9F A2 00 64 74 65 6D 70 02 FA 41 88 CC CD FF
TX[2]: C0 00
TX[2]: C0 00
TX[2]: C0 00
TX[2]: C0 00</p>
<p>temp=20.31
TX[49]: 30 3E 00 2D 2F 61 2F 74 2F 32 32 34 62 38 34 63 39 2D 37 62 35 37 2D 34 36 64 62 2D 62 36 66 37 2D 39 61 33 34 62 38 38 37 34 33 62 36 2F 65 2F 6F
“0&gt;.-/a/t/224b84c9-7b57-46db-b6f7-9a34b88743b6/e/o”
TX[15]: 9F A2 00 64 74 65 6D 70 02 FA 41 A2 7A E1 FF
“…dtemp…A.z…”</p>
<p><a href="https://dzone.com/articles/setting-up-your-own-arduino-iot-cloud-server">https://dzone.com/articles/setting-up-your-own-arduino-iot-cloud-server</a></p>
<h2>Sources</h2>
<p><a href="https://github.com/arduino-libraries/ArduinoMqttClient/tree/master/examples">https://github.com/arduino-libraries/ArduinoMqttClient/tree/master/examples</a></p>
<p><a href="https://makoserver.net/tutorials/">https://makoserver.net/tutorials/</a></p>
<p>npm install node-red-contrib-chartjs</p>

  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>