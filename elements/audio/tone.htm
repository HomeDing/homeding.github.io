
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
    <title>Tone Element</title>
    <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>Tone Element</h1>
      
        
          <div class="iconcard">
            <svg class="icon">
              <use href="/icons.svg#tone"></use>
            </svg>
          
            The Tone Element allows creating sound using the Arduino tone function.

          </div>
        
        <p>The tones to be played can be defined by a list of notes and lengths. The format of the
sequences of tones can be given in a format named “Ring Tones Text Transfer Language (RTTTL)”
that was used by Nokia mobile phones in the early days. It is quiet simple, providing a text
based definition of sequences and low in memory consumption.</p>
<p>The format in short is having 3 parts separated by ‘:’</p>
<ul>
<li>The first part is a optional name</li>
<li>The second part is used to set bpm and default octave and tone duration.</li>
<li>The third part is a list of tones with frequency and length using a “musical” notation.</li>
</ul>
<p>More on the RTTTL format can be found in the references.</p>
<h2>Examples</h2>
<p>Here are some examples for illustration.
More examples can be found on the internet by searching for <code>RTTTL</code> and in the references.</p>
<pre class="language-txt"><code class="language-txt">Fifth:d=4,o=4,b=20:8p,8g,8g,8g,2d#,8p,8f,8f,8f,1d</code></pre>
<pre class="language-txt"><code class="language-txt">Muppets:d=4,o=5,b=250:c6,c6,a,b,8a,b,g,p,c6,c6,a,8b,8a,8p,g.,p,e,e,g,f,8e,f,8c6,8c,8d,e,8e,8e,8p,8e,g,2p,c6,c6,a,b,8a,b,g,p,c6,c6,a,8b,a,g.,p,e,e,g,f,8e,f,8c6,8c,8d,e,8e,d,8d,c;</code></pre>
<pre class="language-txt"><code class="language-txt">on:b=240,d=8:c,16g</code></pre>
<pre class="language-txt"><code class="language-txt">off:b=240,d=8:g,16c</code></pre>
<p>As this format contains equal signs it cannot easily used in action definitions because the
comma is used as separating char when using multiple actions in one event parameter.
The Element also accepts spaces instead of comma to allow playing a song in an event definition when the actions
are passed to the tone element like:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"button"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"online"</span><span class="token punctuation">,</span>
      <span class="token property">"onclick"</span><span class="token operator">:</span> <span class="token string">"tone/on?tones=on:b=240 d=8:c 16g"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>Element Configuration</h2>
<p><object data="/element.svg?tone" type="image/svg+xml"></object></p>
<p>The following properties are available for configuration of the element:</p>
<p>The properties correspond to the api given by the radio library. However not all chips will support all features.</p>
<blockquote>
<p><strong>pin</strong> – The pin that is used to create the tone signals for the external speaker or piezo.</p>
<p><strong>tones</strong> – The tones to be played using the rtttl definition format. When assigned after initialization the tones will be played immediately.</p>
<p><strong>play</strong> – re-start playing the existing tones.</p>
</blockquote>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> – Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> – A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> – The location of the device.</p>
<p><strong>loglevel</strong> – This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
</blockquote>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"tone"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"pin"</span><span class="token operator">:</span> <span class="token string">"D5"</span><span class="token punctuation">,</span>
      <span class="token property">"tones"</span><span class="token operator">:</span> <span class="token string">"fifth:d=4,o=4,b=80:8p,8g,8g,8g,2d#,8p,8f,8f,8f,1d"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>State</h2>
<p>The following properties are available with the current values at runtime</p>
<blockquote>
<p><strong>active</strong> - Is set to true when the element is active.</p>
</blockquote>
<h3>Example State</h3>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"tone/on"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"active"</span><span class="token operator">:</span><span class="token string">"true"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>Tone Test Utility</h2>
<p>You can add this following htm file (as tonetest.htm) in your device to test songs interactively
by opening <a href="http://homeding/tonetest.htm">http://homeding/tonetest.htm</a></p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>ToneTest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Tone Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/state/tone/on<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tones<span class="token punctuation">"</span></span>
        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sos:d=16,o=6,b=160:g,p,g,p,g,4p,8g.,p,8g.,p,8g.,4p,g,p,g,p,g<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<p>Just enter the rtttl in the field and hit return.</p>
<p>The browser navigates to URL by automatically encoding the character ‘:’, ‘,’ and ‘=’ and ‘.’ according to the URL standard:</p>
<p><a href="http://homeding/api/state/tone/on?tones=Sos%3Ad%3D16%2Co%3D6%2Cb%3D160%3Ag%2Cp%2Cg%2Cp%2Cg%2C4p%2C8g%2Cp%2C8g%2Cp%2C8g%2C4p%2Cg%2Cp%2Cg%2Cp%2Cg">http://homeding/api/state/tone/on?tones=Sos%3Ad%3D16%2Co%3D6%2Cb%3D160%3Ag%2Cp%2Cg%2Cp%2Cg%2C4p%2C8g%2Cp%2C8g%2Cp%2C8g%2C4p%2Cg%2Cp%2Cg%2Cp%2Cg</a></p>
<p>As the http server in the devices doesn’t strictly enforce using these encodings the following URL also works:</p>
<p><a href="http://homeding/api/state/tone/on?tones=Sos:d=16,o=6,b=160:g,p,g,p,g,4p,8g.,p,8g.,p,8g.,4p,g,p,g,p,g">http://homeding/api/state/tone/on?tones=Sos:d=16,o=6,b=160:g,p,g,p,g,4p,8g.,p,8g.,p,8g.,4p,g,p,g,p,g</a></p>
<h2>See also</h2>
<ul>
<li>good article on RTTTL: <a href="https://www.informit.com/articles/article.aspx?p=169460">https://www.informit.com/articles/article.aspx?p=169460</a></li>
<li><a href="https://forum.arduino.cc/t/giving-back-to-the-community-rtttl-rttl-tones-over-11-000-tunes/490177">https://forum.arduino.cc/t/giving-back-to-the-community-rtttl-rttl-tones-over-11-000-tunes/490177</a></li>
</ul>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/element.htm">Element</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>