<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>ADD Element</title>
  <meta name='description' content='Calculate sum of values'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>ADD Element</h1>

    
    
      <div class="iconcard"><svg class="icon"><use href="/icons.svg#add"></use></svg>
    
    The ADD Element sums up multiple input values to create a single output value.</div>
      
    <p>Actions can be send to this element using the properties value[n].
Every time the value changes the onValue event is emitted with the sum of all input values.</p>
<h2>Web UI for the ADD Element</h2>
<p>The standard card for this element is used showing the current calculated output value.</p>
<h2>Element Configuration</h2>
<!-- <object data="/element.svg?add" type="image/svg+xml"></object> -->
<p>The up to 8 input values can be used for calculation. When no input value is given the output value is 0.</p>
<p>The <a href="/elements/calc.htm">Calc Element</a> is used as a base class
where the following properties are available for configuration:</p>
<blockquote>
<p><strong>type</strong> – (internal)
This property controls how the input values are scanned and can be modified by the derived elements.
The logical elements set this to datatype-boolean to enable scanning of <code>true</code> and <code>false</code> values.
The datatype-numeric and is used by the AddElement for scanning numbers.</p>
<p><strong>value[n]</strong> –
The input values of the element are given using the value array notation. n must be in the range of 0 to 7.</p>
<p><strong>invert</strong> –
The boolean calculations result is inverted when this property is set to true.</p>
<p><strong>onValue</strong> – These actions are emitted when the output value has changed.</p>
</blockquote>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> - Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> - A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> - The location of the device.</p>
<p><strong>loglevel</strong> - This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
</blockquote>
<h3>Configuration Example</h3>
<p>This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"add"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"a"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span><br>      <span class="token property">"onValue"</span><span class="token operator">:</span> <span class="token string">"device/0?log=add-output: $v"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Element State</h2>
<p>The following properties are available with the current values at runtime</p>
<blockquote>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<p><strong>value</strong> - Current output value of the element.</p>
</blockquote>
<h2>Implementation Details</h2>
<p>When input values have changed event is not created immediately but when the next loop function is called.
This avoids flickering values on the output for a certain degree.</p>
<p>You can set values using a browser by sending actions to the element by requesting for the URLs like:</p>
<ul>
<li><a href="http://homeding/$board/add/a?value%5B0%5D=1">http://homeding/$board/add/a?value[0]=1</a> to set the first input value to 1</li>
<li><a href="http://homeding/$board/add/a?value%5B1%5D=6">http://homeding/$board/add/a?value[1]=6</a> to set the second input value to 6</li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/elements/index.htm">Elements</a></li>
<li><a href="/elements/calc.htm">Calc Element</a></li>
<li><a href="/elements/and.htm">AND Element</a></li>
<li><a href="/elements/or.htm">OR Element</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a></div>
    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>