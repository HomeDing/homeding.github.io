<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>Rotary Element</title>
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  main h2 {margin-top: 1rem !important;}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Rotary Element</h1>

    
    
      <div class="iconcard"><svg class="icon"><use href="/icons.svg#rotary"></use></svg>
    
    The RotaryElement is used to capture increments and decrements for values using a rotary encoder.
</div>
      
    <p>It can be used in combination with a <a href="/elements/value.htm">Value Element</a> to define a logical or numeric value that can be changed using the rotary encoder.</p>
<p><img src="/sensors/rotary.jpg" alt="Rotary Encoder" title="w200"></p>
<p>This element uses the RotaryEncoder library available in the Arduino Library Manager.</p>
<h2>Element Configuration</h2>
<p>The following properties are available for configuration of the element:</p>
<p><object data="/element.svg?rotary" type="image/svg+xml"></object></p>
<p><strong>pin1</strong>* – Specifies the hardware number of the first input pin.</p>
<p><strong>pin2</strong>* – Specifies the hardware number of the second input pin.</p>
<p><strong>step</strong> – Default:1 the increment/decrement value of one rotary step.</p>
<p><strong>value</strong> – current value.</p>
<p><strong>onValue</strong> – These actions are emitted when the value has changed. The delta from the last position is used as the value in this event.</p>
<p>From the base element implementation the following properties are available for configuration:</p>
<blockquote>
<p><strong>title</strong> - Caption text for the element. Used by the element specific cards on the dash boards.</p>
<p><strong>description</strong> - A line of text that gives a short description of the device used in the web UI.</p>
<p><strong>room</strong> - The location of the device.</p>
<p><strong>loglevel</strong> - This property holds the element specific log level. The default value is LOGGER_LEVEL_ERR == 1.</p>
</blockquote>
<p>* This parameter must be specified.</p>
<h2>Example Configuration</h2>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"rotary"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"in"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Rotary Input"</span><span class="token punctuation">,</span>
      <span class="token property">"pin1"</span><span class="token operator">:</span> <span class="token string">"D5"</span><span class="token punctuation">,</span>
      <span class="token property">"pin2"</span><span class="token operator">:</span> <span class="token string">"D6"</span><span class="token punctuation">,</span>
      <span class="token property">"step"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
      <span class="token property">"onValue"</span><span class="token operator">:</span> <span class="token string">"value/led?up=$v"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>Element State</h2>
<p>The following properties are available with the current values at runtime</p>
<p><strong>active</strong> - Is set to true when the element is active.</p>
<p><strong>value</strong> - Current output value of the element.</p>
<h3>Example State</h3>
<p>The internal value can be seen in the rotary state but should not directly be used as a value.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"rotary/in"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"active"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>
    <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"4"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>See also</h2>
<ul>
<li><a href="/elements/value.htm">Value Element</a></li>
<li><a href="/recipes/ledrotary.htm">Recipe: Dimming a LED using a Rotary Encoder</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/input.htm">Input</a></div>
    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>