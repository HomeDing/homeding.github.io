<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Make some diagnose information available.'>
  <title>Diag Element</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Diag Element</h1>

    
    
      <div class="plaincard">
    
    The DiagElement is part of the DevDing Example  and offers some additional diagnose information.
</div>
      
    <h2>Serial output</h2>
<p>On the Serial output some information about the Chips and memory is shown by using ESP32 SDK functions:</p>
<pre class="language-txt"><code class="language-txt">14:50:58 diag/0:t Chip-Info:<br>14:50:58 diag/0:t   model: 5<br>14:50:58 diag/0:t     ESP32-C3<br>14:50:58 diag/0:t   features: 00000012<br>14:50:58 diag/0:t     2.4GHz WiFi<br>14:50:58 diag/0:t     Bluetooth LE<br>14:50:58 diag/0:t   cores: 1<br>14:50:58 diag/0:t   revision: 3<br>14:50:58 diag/0:t ChipModel: ESP32-C3<br>14:50:58 diag/0:t Flash:<br>14:50:58 diag/0:t   ChipSize: 4194304<br>14:50:58 diag/0:t   ChipMode: 2<br>14:50:58 diag/0:t   ChipSpeed: 80000000</code></pre>
<h2>I2C scan</h2>
<p>by using the url <a href="http://%7Bdevicename%7D/diag">http://{devicename}/diag</a> ths I2C bus will be scanned for existing devices.
The result of the scan is shown as plain TXT output in the browser:</p>
<!-- TODO: -->
<pre class="language-txt"><code class="language-txt">...</code></pre>
<!-- 
## rtcmem

TODO:
-->
<h3>Configuration Example</h3>
<p>This element requires no parameters.
This example shows how to configure this element:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"diag"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>See also</h2>
<ul>
<li><a href="/examples/devding.htm">DevDing Example</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/implementation.htm">Implementation</a><a href="/tag/element.htm">Element</a></div>
    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>