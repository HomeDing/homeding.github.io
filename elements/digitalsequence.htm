<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>Digital Sequence Element</title>
  <meta name='description' content='Support digital input signals to create actions.'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  main h2 {margin-top: 1rem !important;}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Digital Sequence Element</h1>

    
    
      <div class="iconcard"><svg class="icon"><use href="/icons.svg#digitalsequence"></use></svg>
    
    The digital sequence Element is used internally for several elements that need to analyze timing sequences and digital signals.
</div>
      
    <p>see also <a href="/elements/dcftime.htm">DCF Time Element</a></p>
<p>For some elements it is required to listen to the digital input at the specific GPIO pin
for discovering the specific protocol and data.</p>
<p>The DigitalSequence Element helps with collecting the timing and level information from the digital signal
by recording the timings into a ring buffer.</p>
<h2>Recording</h2>
<p>The digital sequence Element records the timings in a ring buffer to be picked up by the element
that can decode the protocol.</p>
<p>This is realized by using interrupts on the specific pin.
Because interrupts are using static functions there is the delimitation that only
one element of this kind is supported in a device.</p>
<p>The size of the ring buffer and some debouncing functionality can be configured.</p>
<p><strong>pin</strong> - The input GPIO with the digital signal.</p>
<p><strong>buffersize</strong> - the size of the recording buffer.</p>
<p><strong>minTime</strong> - this time is the minimal time that is recorded in the ring Buffer.
When the signal bounces the short timings are added to the next recorded time.</p>
<p><strong>maxTime</strong> - this time is the minimal time that is recorded in the ring Buffer.
When the signal bounces the short timings are added to the next recorded time.</p>
<p><strong>ideal timing diagram</strong></p>
<p>_<em><strong><strong>/^^^^^^^_</strong></strong></em></p>
<p><strong>timing with bounces</strong></p>
<p>___<em><strong>/^^^^^^^/_</strong></em></p>
<p><strong>timing with multi bounces</strong></p>
<p>___<em><strong>/^^^^^^^//_</strong></em></p>
<p><strong>spike bounces</strong></p>
<p>___<em><strong>/^^^/^^^^^_</strong></em></p>
<p><strong>noise bounces</strong></p>
<p>___<em><strong>/^^^///^^^^_</strong></em></p>
<p><strong>long time no signal</strong></p>
<p><strong><strong><strong>/^^^_</strong>(max)</strong></strong>__</p>
<ul>
<li>debounce list DL[2]</li>
<li>len</li>
</ul>
<pre><code>on edge:

calc delta 
if (delta &gt; max) delta = max;
start = now;

&lt;!-- add to debounce list (DL). --&gt;

if (len == 0)
  DL[0] = delta.
  len = 1

if (len == 1) and (DL[0] &gt; minTime) and (delta &gt; minTime)
  // shift out regular timing
  ring.add(DL[0]),
  DL[0] = delta.
  len = 1

if (len == 1) and (DL[0] &gt; minTime) and (delta &lt; minTime)
  // = spike bounce or noise starts.
  DL[1] = delta
  len = 2;

if (len == 2) and (DL[0] &gt; minTime) and (DL[1] &lt; minTime)
  // = spike bounce finished or noise 
  // add to the current[0] timing.
  DL[0] = DL[0] + DL[1] + delta
  set DL-Length = 1;

  if (DL[0] &gt; maxTime)
    ring.add(max)
    len = 0


else
  the debounceTiming will set.


onLoop:

calc delta (interim)

if (delta &gt; max) &amp;&amp; (len &gt; 1)
  // shift out all
  ring.add(DL[0]),
  ring.add(max)
  len = 0
  start = now;
</code></pre>
<h2>Using recorded data</h2>
<p>There are elements that can decode the signal. These elements derive from the Digital Sequence Element
and can access the ring buffer with the raw input data.</p>
<p>static function hasData() -&gt; (ring has data)
static function count()   -&gt; (# items in ringbuffer)
static function peek()    -&gt; get oldest timing
static function pop()     -&gt; get oldest timing and remove
static function peek(1)   -&gt; get oldest timing + 1</p>
<h2>See also</h2>
<ul>
<li>NTPTimeElement</li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="/tag/element.htm">Element</a><a href="/tag/wip.htm">Wip</a></div>
    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>