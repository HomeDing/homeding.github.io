// file: base.scss
// colors, dark mode, sizes, page level layout
// This is part of the micro css implementation.

// ===== Colors =====
// hue of 220 is signature of this style

$u-hue: 220;
$u-background: #e0e0e0;
$u-background-darkmode: #111111;
$u-text: #111111; // any text
$u-text-darkmode: #eeeeee; // any text

$u-primary: hsl(220, 80%, 30%); // active objects

$u-border-color: #555555;
$u-border-color-active: hsl(220, 100%, 30%);

$u-disabled: gray; // disabled objects
$u-heading: $u-primary; // any headlines
$u-connect: #00cc00; // connectivity / net

$u-card-border: none;
$u-card-radius: 0.4rem;

$u-on: lighten(green, 10%);
$u-off: red;

$u-border: 0.1em solid $u-border-color;
$u-border-none: 0.1em solid transparent;
$u-border-active: 0.1em solid $u-border-color-active;

$u-navbar: $u-primary;
$u-navbar-text: white;

// ===== Sizes =====

$white-space: 1rem;
$gutter: calc($white-space / 2);
$gutter2: calc($white-space / 4);

// @debug $gutter;
// @debug $gutter2;

$u-btn-radius: 0.2em;
$u-output-border: $u-border-none;

$font-sans-serif: Arial, ui-sans-serif, sans-serif;

// ===== main =====

:root {
  --color: #{$u-text};
  --back: #{$u-background};

  --card-back: #{lighten($u-background, 20%)};
  --card-head: #{hsl($u-hue, 0%, 70%)};
  --card-head-active: #{hsl($u-hue, 80%, 70%)};
  --focus: #{hsl($u-hue, 50%, 50%)};

  color-scheme: dark light;
  @media (prefers-color-scheme: dark) {
    --color: #{$u-text-darkmode};
    --back: #{$u-background-darkmode};
    --card-back: #{lighten($u-background-darkmode, 15%)};
    --card-head: #{hsl($u-hue, 0%, 30%)};
    --card-head-active: #{hsl($u-hue, 80%, 30%)};
  }
}

html,
body {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: $font-sans-serif;
  font-size: 1em;
  color: var(--color);
  background-color: var(--back);
}

/* apply a natural box layout model to all elements, but allowing components to change */
*,
*::before,
*::after {
  box-sizing: inherit;
}

// ===== Text containers =====
p,
pre,
code,
h2,
h3,
h4 {
  margin: 0 0 $gutter 0;
  min-height: 1rem;

  > img,
  > svg {
    // assume image in text containers to be inline icons
    height: 1em;

    &:first-child {
      margin-right: 0.2em;
    }
  }
}

a,
a:visited,
a:hover {
  color: inherit;
  text-decoration: underline;
  cursor: pointer;
}

// h1 Page title is always inside u-header
h2,
h3,
h4 {
  font-family: $font-sans-serif;
  font-weight: bold;
}

// Chapter
h2 {
  font-size: 1.6em;
  min-height: 1.6em;
}

// Topic
h3 {
  font-size: 1.25em;
  min-height: 1.25em;
}

// Subtitle
h4 {
  font-size: 1em;
  min-height: 1em;
}

code,
.code,
code.hljs,
pre > code {
  background-color: rgb(255, 255, 185);
  color: $u-text;
  font-size: 1rem;
  font-family: 'Courier New', Courier, monospace;

  @media print {
    border: 1px solid $u-text;
  }
}

p > code {
  padding-left: 0.1em;
  padding-right: 0.1em;
}

pre > code {
  display: block;
  border-radius: $u-card-radius;
  padding: 0.1em;
}

// form elements

label,
input,
input+span,
input::placeholder,
select,
button {
  display: inline-block;
  font-size: inherit;
  margin: 0;
  border: $u-border-none;
  padding: 0.1em 0.2em;
  color: currentColor;
}

input::placeholder {
  padding-top: 0.4em;
  font-size: 0.8em;
}

label {
  cursor: pointer;
  height: 1.6em;

  > img,
  > .icon {
    // vertical-align: middle;
    width: 1em !important;
    height: 1em !important;
    margin: 0 !important;
  }
}

input,
select,
button {
  border-color: var(--color);
}

select:invalid,
input:invalid {
  border-color: #ff5555;
}


input[type='checkbox'],
input[type='radio'] {
  width: 2ch;
  vertical-align: baseline;
}

input,
select {
  width: 22ch;
  border-radius: 0.2em;
}

select {
  padding-left: 0;
}


// ===== Native dialogs and focus Object

dialog::backdrop {
  background-color: rgba(200, 200, 200, 0.7);
}

dialog {
  position: relative;
  padding: 1rem;
  background-color: Canvas;
  border: 0;

  .u-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    height: 1.6rem;
    width: 1.6rem;
    background-color: red;
    background-size: 1.6rem 1.6rem;
    background-repeat: no-repeat;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'><path d='M12 12L36 36M36 12L12 36' stroke='white' stroke-width='8' stroke-linecap='round' /></svg>");
    z-index: 1 !important;
    user-select: none;
    cursor: pointer;
  }

  &::before {
    content: '';
    position: absolute;
    z-index: -1;
    width: 2rem;
    height: 2rem;
  }

  &::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'><path d='M0 0h48v48h-16v-32h-32z' fill='red' /></svg>");
    top: 0;
    right: 0;
  }
}



// ===== Grid Design with grid of 6 =====

.container {
  margin-right: 2rem;
  margin-left: 2rem;

  @media (max-width: 720px) {
    margin-right: 0.6rem;
    margin-left: 0.6rem;
  }
}

.container-fluid {
  margin-right: 0;
  margin-left: 0;
  padding: $white-space;

  @media (max-width: 720px) {
    padding: 0;
  }
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-start;
  margin: 0 0 0 -$gutter;
  clear: both;
  padding: 0 0 $gutter 0;

  &.wrap {
    flex-wrap: wrap;
  }

  @media (max-width: 720px) {
    margin: 0;
  }

  &.nogutter {
    margin: 0;
    padding: 0;

    > .col {
      margin: 0;
      padding: 0;
    }
  }
}

.col,
.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6 {
  flex: 0 0 auto;
  margin: $gutter 0 0 $gutter;

  @media (max-width: 720px) {
    margin-left: 1px;
  }
}

.col.stretch {
  flex-grow: 1;
}

.col-1 {
  flex-basis: 16.66666667%;
}

.col-2 {
  flex-basis: 33.33333333%;
}

.col-3 {
  flex-basis: 50%;
}

.col-4 {
  flex-basis: 66.66666667%;
}

.col-5 {
  flex-basis: 83.33333334%;
}

.col-6 {
  flex-basis: 100%;
}

svg {
  &.button {
    width: 2em;
    height: 2em;

    .object {
      fill: $u-primary;
      fill-opacity: 1;
    }

    .connect {
      fill: $u-connect;
      fill-opacity: 1;
    }
  }

  &.icon {
    user-select: none;
    color: currentColor;
  }
}

// ===== Page Layout =====

// The header in the micro css is used to display the primary icon of the device and title.

.u-header {
  margin-bottom: 0;

  .icon {
    margin-right: $gutter;
    width: 2.6rem;
    height: 2.6rem;
    vertical-align: top;
  }

  h1 {
    margin: 0;
    font-size: 2.4rem;
    font-family: $font-sans-serif;
    font-weight: bold;
  }
}

// u-navbar is a horizontal always visible menu just below the header.

.u-navbar {
  margin-bottom: 0;
  padding: $gutter $white-space;
  height: 2.8rem;
  background-color: $u-navbar;

  > .gap {
    flex-grow: 2;
  }

  > button,
  > .button {
    text-decoration: none;
    font-size: 1.25em;
    min-width: 2em;
    color: $u-navbar-text;

    &:hover {
      border-color: var(--focus);
      background-color: var(--focus);
    }
  }

  > img.button,
  > svg.button {
    padding: 0;
    min-width: 1.4em !important;
    width: 1.4em !important;
    height: 1.4em !important;
  }

  @media print {
    display: none;
  }
}



.invalid {
  border: 2px solid #ff1111 !important;
  background-color: #ffcccc !important;
  color: $u-text;
}

.valid {
  border: 2px solid #00cc00 !important;
  background-color: #ccffcc !important;
  color: $u-text;
}


