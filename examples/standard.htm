
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Standard Example</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet">
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name="description" content="Examples and documentation for the HomeDing IoT Library">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc">
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353">
</head>

<body class="sitelayout">
  <div class="navbar">
    <button id="menu" popovertarget="my-menu">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"></path>
      </svg>
    </button>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
    
  </div>
  
  <nav popover="auto" id="my-menu" class="menu"></nav>

  <main>
    <h1>Standard Example</h1>

    

    <div class="plaincard"><p>The examples in the HomeDing library are used to compile a firmware that provides the base functionality
combined with a set of elements that can be used in the configuration of the device.</p>
<p>The <strong>standard example</strong> can be used with any board that has a 4MByte Flash memory and is a good jumpstart for any project you may have.
This example e.G. runs on all the <a href="/boards/nodemcu.htm">nodemcu boards</a>.</p>
</div>
<p>No additional hardware is required to start this example and the Serial interface is used to transfer some internal actions and infos.</p>
<h2>Setup the development environment and board</h2>
<p>If this is the first time you use an ESP8266 board, some instructions on how to setup your development environment can be found here:</p>
<p><a href="/steps/arduinosetup.htm">Step by Step setting up a development environment</a></p>
<p>There are some options in uploading the required software and registration on the network that s described here:</p>
<p><a href="/steps/newdevice.htm">Step by Step Bring your device to work</a></p>
<p>This includes:</p>
<ul>
<li>Upload the sketch and Web UI</li>
<li>Connect to the network</li>
<li>Upload the Web UI files</li>
</ul>
<p>After flashing the software and the web files the web interface is fully functional but not yet configured.</p>
<h2>Components for the Standard Example</h2>
<p>When using nodemcu board there is a LED on the ESP-12 module and another LED on the board itself. The example uses both. When using different boards an external LED can be used.</p>
<h2>Device configuration</h2>
<p>The following env.json file can be used as a starting point:</p>
<p><strong>env.json</strong></p>
<p>The boot process can show itâ€™s state on a LED. Here the LED(D4) from the ESP-12 module is configured for this purpose.</p>
<p>The FLASH button(D3) can be used to start the config mode manually.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"device"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"homeding"</span><span class="token punctuation">,</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"minimal config for http://homeding device"</span><span class="token punctuation">,</span>
      <span class="token property">"reboottime"</span><span class="token operator">:</span> <span class="token string">"24h"</span><span class="token punctuation">,</span>
      <span class="token property">"led"</span><span class="token operator">:</span> <span class="token string">"D4"</span><span class="token punctuation">,</span>
      <span class="token property">"button"</span><span class="token operator">:</span> <span class="token string">"D3"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p><strong>config.json:</strong></p>
<p>As a starting configuration the blink recipe can be used when your board is a
<a href="/boards/nodemcu.htm">NodeMCU board</a> with a ESP-12 module the led will blink slowly.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"timer"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"blink"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Timer for testing"</span><span class="token punctuation">,</span>
      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"LOOP"</span><span class="token punctuation">,</span>
      <span class="token property">"waittime"</span><span class="token operator">:</span> <span class="token string">"0s"</span><span class="token punctuation">,</span>
      <span class="token property">"pulsetime"</span><span class="token operator">:</span> <span class="token string">"1s"</span><span class="token punctuation">,</span>
      <span class="token property">"cycletime"</span><span class="token operator">:</span> <span class="token string">"2s"</span><span class="token punctuation">,</span>
      <span class="token property">"onvalue"</span><span class="token operator">:</span> <span class="token string">"digitalout/led?value=$v"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">"digitalout"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"led"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"pin"</span><span class="token operator">:</span> <span class="token string">"D0"</span><span class="token punctuation">,</span>
      <span class="token property">"invert"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>
      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Builtin LED is on Port D0 = GPIO16"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>This configuration can be used as a starting point to implement your own projects.</p>
<h2>See also</h2>
<ul>
<li><a href="/examples/index.htm">examples</a></li>
<li><a href="/boards/index.htm">Boards overview</a></li>
<li><a href="/recipes/index.htm">Recipes</a></li>
</ul>


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/example.htm">Example</a></div>
      
  </main>

  <script>
    

    var navObj = document.querySelector('nav');
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async="">
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>