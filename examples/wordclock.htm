<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <title>WordClock Example</title>
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  main h2 {margin-top: 1rem !important;}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>WordClock Example</h1>

    
      
    <div class="iconcard"><svg class="icon"><use href="/icons.svg#default"></use></svg><p>This folder contains an example for a wordclock implementations (Germany layout). It also illustrates how to implement something special
using the HomeDing Library and selected standard Elements but to add a new functionality.</p>
</div>
<p><img src="/examples/wordclock.jpg" alt="WordClock Image"></p>
<p>The challenge shown in this example is to implement the pattern generator for the wordclock on a 8*8 matrix.
This is a very specific piece of source code exactly for this specific IoT Device. But instead of building everything
yourself by using various libraries the ecosystem of the HomeDing is also a good starting point.</p>
<h2>Base Sketch</h2>
<p>The sketch file (WordClock.ino) is a copy of the Standard example but some elements are not included to keep the resulting firmware small.</p>
<p>This sketch creates the runtime environment and includes the helpful elements.
The Arduino typical setup() and loop() approach can also be used but is better contained in a separate file.</p>
<h2>Project specific code</h2>
<p>Beside the functionality in the base sketch a new Element is implemented in the WordClock.cpp file
that includes the specific code for this device. This element class is then plugged into the ecosystem of actions.</p>
<p><img src="/examples/wordclockflow.png" alt="Wordclock flow"></p>
<ul>
<li>
<p>Instead of implementing functionality of the typical <strong>setup()</strong> function
all the code should be placed into the <strong>start()</strong> function.</p>
</li>
<li>
<p>Instead of implementing functionality of the typical <strong>loop()</strong> function
all the code can be placed into the <strong>loop()</strong> function.</p>
</li>
<li>
<p>If you like to participate in using configuration parameters you can place a specific code in the <strong>set()</strong> function to get a configuration.</p>
</li>
<li>
<p>Incoming actions can also be implemented in the <strong>set()</strong> function.</p>
</li>
</ul>
<p>In this example a <strong>WordClock</strong> element is implemented that receives the current time and creates a pattern for the LED matrix.
To send the bitmap away a action will be triggered when the time has changed.</p>
<h2>Wiring</h2>
<p>The 8*8 matrix needs to be connected to the EPS8266 board using the SPI bus:</p>
<table>
<thead>
<tr>
<th>pin</th>
<th>function</th>
<th>max7219</th>
</tr>
</thead>
<tbody>
<tr>
<td>GPIO14(D5)</td>
<td>SPI-CLK</td>
<td>Clock</td>
</tr>
<tr>
<td>GPIO13(D7)</td>
<td>SPI-MOSI</td>
<td>Data to Matrix</td>
</tr>
<tr>
<td>GPIO0(D3)</td>
<td>CS for max7219</td>
<td>Matrix Select</td>
</tr>
<tr>
<td>VCC</td>
<td>+5V</td>
<td>VCC from USB</td>
</tr>
<tr>
<td>GND</td>
<td>GND</td>
<td>Common Ground</td>
</tr>
</tbody>
</table>
<p>While GPIO14(D5) and GPIO13(D7) must be used because they correspond to the SPI bus implementation by hardware
the GPIO0(D3) can be exchanged. It is configured in the config.json file.</p>
<h2>Env.json</h2>
<p>This is a system configuration file for this example:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"device"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"wordclock"</span><span class="token punctuation">,</span><br>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Word Clock"</span><span class="token punctuation">,</span><br>      <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br>      <span class="token property">"logfile"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br>      <span class="token property">"button"</span><span class="token operator">:</span> <span class="token string">"D3"</span><span class="token punctuation">,</span><br>      <span class="token property">"led"</span><span class="token operator">:</span> <span class="token string">"D4"</span><span class="token punctuation">,</span><br>      <span class="token property">"safemode"</span><span class="token operator">:</span> <span class="token string">"false"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><span class="token punctuation">,</span><br>  <span class="token property">"ota"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><span class="token punctuation">,</span><br>  <span class="token property">"ntptime"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"zone"</span><span class="token operator">:</span> <span class="token string">"CET-1CEST,M3.5.0,M10.5.0/3"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>This configures for German timezone and unsafe mode. Please see documentation on how to change.</p>
<h2>Config.json</h2>
<p>This is a configuration file for this example:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"time"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"clock"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"onminute"</span><span class="token operator">:</span> <span class="token string">"wordtime/0?value=$v"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><span class="token punctuation">,</span><br>  <span class="token property">"wordtime"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"onvalue"</span><span class="token operator">:</span> <span class="token string">"max7219/0?value=$v"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><span class="token punctuation">,</span><br>  <span class="token property">"max7219"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><br>      <span class="token property">"cspin"</span><span class="token operator">:</span> <span class="token string">"D3"</span><span class="token punctuation">,</span><br>      <span class="token property">"brightness"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><br>      <span class="token property">"mode"</span><span class="token operator">:</span> <span class="token string">"8x8"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>See also</h2>
<ul>
<li><a href="https://github.com/formatc1702/Micro-Word-Clock">https://github.com/formatc1702/Micro-Word-Clock</a></li>
<li><a href="https://shop.led-studien.de/de/elektronik-bausatze/wordclock-mirco/wordclock-micro-bausatz-modul-weiss?action_ms=1">https://shop.led-studien.de/de/elektronik-bausatze/wordclock-mirco/wordclock-micro-bausatz-modul-weiss?action_ms=1</a></li>
<li><a href="https://www.mikrocontroller.net/articles/Word_Clock">https://www.mikrocontroller.net/articles/Word_Clock</a></li>
</ul>


    
  </main>

  <script>
    const param = {
      MENU_MIN_WIDTH: 1030
    };

    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

   if (window.innerWidth > param.MENU_MIN_WIDTH) {
      // menu is inside the page
      navObj.classList.add('open');
      navObj.classList.add('inpage');
    }

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>