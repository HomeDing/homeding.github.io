
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Implementation Details</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet">
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name="description" content="Hints for implementing and extending Elements and the Web UI">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc">
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353">
</head>

<body class="sitelayout">
  <div class="navbar">
    <button id="menu" popovertarget="my-menu">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"></path>
      </svg>
    </button>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
    
  </div>
  
  <nav popover="auto" id="my-menu" class="menu"></nav>

  <main>
    <h1>Implementation Details</h1>

    
      <div class="card-container horizontal text" style="--card-height:5rem;--card-image-size:5rem;">
        <div class="card">
          
          <div class="body">
            <p>Hints and details on how to implement new and extend existing elements using an Arduino programming environment and how to implement new cards for the dashboards.</p>

          </div>
        </div>
      </div>
    

    <!-- ## Customize a sketch file -->
<h2>Implementing new Elements</h2>
<blockquote>
<p>The HomeDing library is not a closed eco system but rather allows adding new functionality
by adding new Elements to support a specific functionality, sensor, chip, network service and more.</p>
<p>In the <a href="/steps/newelement.htm">Create and extend a new Element</a> step-by-step article you find
how to start with a simple Element implementation that gets extended to support the specific benefits of the ecosystem.</p>
<p>In the development example you can find a Element called <strong>TemplateElement</strong>
that contains all function declarations and empty function implementation for an element
that does nothing and some additional information as comments that help implementing new Elements.</p>
<p>The 2 files (TemplateElement.*) can be copied and renamed and the class name should be adjusted as well to create a new element not doing anything yet.</p>
<p>More details about the base implementation and available methods can be found in <a href="/dev/elementclass.htm">Element Class</a> description.</p>
<p>The I2C bus is used by many components, sensors, displays and other chips to communicate commands and data.
A central configuration is supported on the device level. Som implementation hits can be found in <a href="/dev/i2c.htm">Using the I2C bus</a>.</p>
<p>The <a href="/dev/elementregistry.htm">Element registry</a> is the central class that knows all included and available
Element classes to allow further creation and customization of new Elements by name at runtime.</p>
</blockquote>
<h2>Firmware implementation details</h2>
<blockquote>
<p>There is a list of articles on how the HomeDing library works and is built and provides some
useful functionality:</p>
<ul>
<li><a href="/dev/wifimanager.htm">WiFi manager</a></li>
<li><a href="/dev/logger.htm">Serial Logger</a></li>
<li><a href="/dev/safemode.htm">The safemode</a></li>
<li><a href="/dev/startup.htm">Network Startup</a></li>
<li><a href="/dev/microjson.htm">Using JSON formatted data</a></li>
</ul>
</blockquote>
<h2>About the Web UI</h2>
<blockquote>
<p>Implementing the Web UI functionality is almost as important as implementing the Arduino code for the firmware.</p>
<p>There is a list of articles on how the HomeDing library works and is built and provides some
useful functionality:</p>
<ul>
<li><a href="/dev/micro.htm">Introduction</a></li>
<li><a href="/dev/website.htm">Embedded Web Site for IoT Devices</a></li>
<li><a href="/dev/microbehaviors.htm">micro behaviors</a></li>
<li><a href="/dev/microcharts.htm">micro charts</a></li>
<li><a href="/dev/microicons.htm">micro icons</a></li>
<li><a href="/dev/microjavascript.htm">micro javascript utils</a></li>
<li><a href="/dev/microstyle.htm">micro style</a></li>
<li><a href="/dev/microtemplates.htm">micro templates</a></li>
<li><a href="/dev/dialogs.htm">dialogs</a></li>
<li><a href="/dev/microportal.htm">Portal</a></li>
</ul>
</blockquote>
<!-- TODO: * [monitor](/elements/_monitor.md) -->
<!-- TODO: * [_iconsforthings](/_iconsforthings.md) -->
<h2>Element Meta data</h2>
<blockquote>
<p>For new elements the list of properties, actions and events should be specified in the <code>elements.json</code> file that is saved on the device.</p>
<p>This file is the basis for the <code>Add a new element</code> dialog in the board implementation.</p>
<ul>
<li><strong>Properties</strong> are implemented in the <code>set(name, value)</code> method to get the configuration values.</li>
<li><strong>Actions</strong> are also implemented in the <code>set(name, value)</code> method but are expected to be used at runtime by incoming actions.</li>
<li><strong>Events</strong> are outgoing actions to other elements.</li>
</ul>
</blockquote>
<h2>Command Line Builds and Uploads for WebFiles</h2>
<p>See <a href="/dev/cli.htm">Command Line CLI commands</a></p>
<h2>See also</h2>
<ul>
<li><a href="/dev/logger.htm">Device Logging</a></li>
</ul>


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/implementation.htm">Implementation</a></div>
      
  </main>

  <script>
    

    var navObj = document.querySelector('nav');
    lazyLoadHTM('nav', '/toc.htm');
  </script>

</body>
</html>