
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Micro Dialogs and Forms</title>
  <script src="/pages.js"></script>
  <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
  <script src="/story.js" type="module"></script>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
</head>

<body class="sitelayout" style="--content-width:800px">
  <div class="navbar">
    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
    </svg>
    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  
  <nav style="background-color:white"></nav>

  <main>
    <h1>Micro Dialogs and Forms</h1>

    
      <div class="card-container horizontal text" style="--card-height:5rem;--card-image-size:5rem;">
        <div class="card">
          
          <div class="body">
            <p>Simple User interactions using small forms.</p>

          </div>
        </div>
      </div>
    

    <p>The Web UI implementation of the homeding library supports a simple and small but powerful implementation
to ask for user input to interactively define and modify elements.</p>
<p>This can be found on the <code>board.htm</code> when new elements are added or existing elements are modified.</p>
<p>This can also be found on the <code>panel.htm</code> where connections between elements can be created by drag &amp; drop.</p>
<p>The dialogs that pop up are implementation using the &lt;dialog&gt; html element.
Inside these dialogs html forms are used that have been extended to work with JSON formatted form data.</p>
<h2>Dialogs</h2>
<p>Dialogs can be opened by JavaScript using the static <code>DialogClass.openModalForm(...)</code> function.
The following parameters can be used:</p>
<ul>
<li><code>id</code> – id of the dialog element</li>
<li><code>data</code> – optional data object with keys+values to populate the dialog.</li>
<li><code>fCallBack</code> – optional Dialog CallBack function. The form data is passed as parameter.</li>
</ul>
<p>The dialogs will be shown as modal dialogs. The background will be covered by a semi transparent cover
to focus on the dialog itself.</p>
<p>Mandatory layout is a dialog title and a ren close icon in the upper right corner.</p>
<p>A dialog can be closed without taking further actions by pressing the &lt;esc&gt; key or by clicking the close button.</p>
<p>A &lt;form&gt; element can be part of the dialog.</p>
<h2>Dialog buttons</h2>
<p>The dialog mechanism supports the following functionality on buttons:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre>
<p>This button closes the dialog without any further action.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>done<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre>
<p>This button is automatically enabled when the form validates completely on all input fields.</p>
<p>When clicked the button closes the dialog by returning ‘ok’ as return value.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>return<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre>
<p>This button is automatically enabled when the form validates completely on all input fields.</p>
<p>When clicked the button closes the dialog by returning the current form data to the callback function.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next:configElement<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Next<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre>
<p>This button is automatically enabled when the form validates completely on all input fields.</p>
<p>By using a <code>next:${id}</code> action th data from the form will be passed to the next dialog with the given id.
This is useful for chaining dialogs to request for input in multiple seqential opened forms.</p>
<p>It can be used to open a form based on the input from the first form.</p>
<h2>Dialog template</h2>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dialog</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span> <span class="token attr-name">u-is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Config ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>u-close<span class="token punctuation">"</span></span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">...</span><span class="token punctuation">></span></span>
    ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">u-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>return<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dialog</span><span class="token punctuation">></span></span></code></pre>
<h2>Dialog opening example</h2>
<pre class="language-js"><code class="language-js">DialogClass<span class="token punctuation">.</span><span class="token function">openModalForm</span><span class="token punctuation">(</span><span class="token string">'action'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">"switch/0"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sound</span><span class="token operator">:</span> <span class="token string">"bell"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">extra</span><span class="token operator">:</span> <span class="token string">"notused"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// result of action dialog </span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Dialog result=\n"</span>
  <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2>Nesting Dialogs</h2>
<p>Dialogs can be nested when another DialogClass.openModalForm is called e.g. from a click event.</p>
<p>The dialogs get “stacked” and must be closed in reverse order.</p>
<h2>Chaining Dialogs</h2>
<p>Dialogs can be chained by the “next:${id}” action as shown above or by calling
another DialogClass.openModalForm in the callback function.</p>
<h2>Forms</h2>
<p>Modern HTML forms support a rich interactivity using many input and output elements and features
like field level validation. However the data interface to form elements doesn’t strictly support
JSON as expected.</p>
<p>To use forms inside dialogs the form-json Web Control is available.</p>
<p>This is a standard HTML Web Component implementation extending the form element using the FormJson class.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-json<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre>
<p>The method should be set to “dialog” to prevent POST requests by the standard dialog submit functionality.</p>
<p>By this extended html the form element now supports the methods:</p>
<ul>
<li><code>setJsonData(data)</code> – sets the form data but leaves unmentione fields untouched.</li>
<li><code>data = getJsonData()</code> – returns the current form data.</li>
</ul>
<p>The standard form methods <code>reset()</code> and <code>checkValidity()</code> can be used to reset the form or check if all
input is valid according the defined rules on the input elements.</p>


      
        <h2>Tags</h2>
        <div class="taglist"><a href="/tag/implementation.htm">Implementation</a></div>
      
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');
    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    lazyLoadHTM('nav', '/toc.htm');
  </script>

  <script type="module" async>
    import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
    document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
  </script>

</body>
</html>