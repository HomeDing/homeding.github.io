<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content=''>
  <title></title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <link href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css" rel="stylesheet">
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-header">
    <a href="/" title="Startpage"><img class="icon" src="/i/default.svg" /></a>
    <h1>HomeDing</h1>
  </div>

  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  <nav class="inpage open"></nav>

  <main style="background-color:#eeeeee;padding:1rem">
    <h2>micro JavaScript Library</h2>
<p>t.b.c</p>
<ul>
<li>Task Queue =&gt; Promises</li>
</ul>
<h2>HTML Templates</h2>
<p>Templates for the web framework are combinations of standard HTML elements to create layout and details of the controls for the specific use case. These template objects are placed inside a template area or can be loaded from a HTML file when required.</p>
<p>A template object is identified by the <code>u-control</code> property that must have a unique name.</p>
<p>When using the template to create a new control a clone of the complete template object is copied into the right place in the document:</p>
<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> newControl <span class="token operator">=</span> <span class="token function">insertTemplate</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> controlName<span class="token punctuation">,</span> initialProperties<span class="token punctuation">)</span></code></pre>
<p>The placeholders ${type} and ${id} will be replaced by the corresponding values of the initial properties.</p>
<p>For adding functionality to the new object the value of the <code>u-behavior</code> property specifies what behavior will be added to the created component.</p>
<p>Here is an example of a simple control that displays a card with some specific information for a button control.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>card<span class="token punctuation">'</span></span> <span class="token attr-name">microID</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${id}<span class="token punctuation">"</span></span> <span class="token attr-name">u-control</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>button<span class="token punctuation">'</span></span> <span class="token attr-name">u-behavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>button<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><br>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>block header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>${id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><br>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>description<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><br>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>activeState<span class="token punctuation">"</span></span> <span class="token attr-name">u-active</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>active<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><br>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>config<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><br>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/i/button.svg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>u-button<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border-radius</span><span class="token punctuation">:</span>3rem<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>5rem<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>1rem</span><span class="token punctuation">"</span></span></span> <span class="token punctuation">></span></span><br>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>How templates for elements are implemented and how to use the functionalities of the landing page and config page
is explained in <a href="/concepts/paper04.htm">Builtin Web server</a>   and <a href="/dev/elementcards.htm">Templates for Elements</a>.</p>
<p>In this example the outer element and the block structure of this control is given by the design of cards similar to the one you can find in the bootstrap framework.</p>
<p>There are several behaviors already implemented to visualize and configure elements that can be found in the <code>ding.js</code> file.</p>
<h2>Micro-Behavior implementations for Elements</h2>
<p>The <code>generic</code> behavior implementation includes already the basic functionality that is required by almost every control.</p>
<p>More advanced controls like the one for the timer displaying the current status as a bar can be implemented by enhancing this generic implementation.</p>
<p>The control implementations can register to new data arriving and can implement handlers that are attached to the classic JavaScript events.</p>
<p>The generic behavior implementation uses the following properties on HTML elements to bind data to the elements:</p>
<p><strong>u-value='<propertyname>'</strong> Using this attribute on a HTML element causes that the data from the specified property will be put into the <code>value</code> of the HTML element.</p>
<p><strong>u-bool</strong> as classname
This attribute on a HTML element can be used to visualize boolean (0/1) values.
A HTML element with this classname and a value 1 will get a green color assigned where a value 0 will assign a red value.</p>
<p><strong>u-active='<propertyname>'</strong> Using this property the class name of the HTML element will be set to <code>active</code> when the specified property has a true value.</p>
<p><strong>u-text='<propertyname>'</strong> Using this attribute on a HTML element causes that the data from the specified property will be put into the <code>text</code> of the HTML element.</p>
<!-- * once buttons -->
<!-- * function binding -->
<!-- * data binding -->

  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    if (window.innerWidth > 880)
      navObj.classList.add('open');

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>