
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
    <title>Display Classes</title>
    <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>Display Classes</h1>
      
        
            <div class="plaincard">
            
            The C++ Classes used for displays and their dependencies.

          </div>
        
        <p>The C++ Classes used for display drivers for specific chips and the display item shown on the
display are illustrated in the following class diagram:</p>
<pre class="mermaid">flowchart TD&#10;&#10;  DisplayChipAdapter[&quot;Display#60;Chip#62;Adapter&quot;]&#10;  DisplayAGFXAdapter&#10;  DisplayItemElement[&quot;Display#60;Item#62;Element&quot;]&#10;  DisplayOutputElement&#10;  DisplayChipElement[&quot;Display#60;Chip#62;Element&quot;]&#10;  DisplayElement&#10;  Element&#10;&#10;&#10;  subgraph Implementation of displays&#10;    DisplayChipElement -- implements--&gt; DisplayElement&#10;  end&#10;&#10;  subgraph Implementation of display items&#10;    DisplayItemElement --implements--&gt; DisplayOutputElement&#10;  end&#10;&#10;  subgraph Implementation of draw operations&#10;    DisplayChipAdapter --&gt;|implements| DisplayAGFXAdapter&#10;    DisplayAGFXAdapter --&gt;|implements| DisplayAdapter&#10;  end&#10;&#10;&#10;    DisplayElement --implements--&gt; Element&#10;&#10;    DisplayOutputElement --implements--&gt; Element&#10;&#10;  DisplayItemElement -.draws with.-&gt; DisplayChipAdapter&#10;  DisplayChipElement -.creates.-&gt; DisplayChipAdapter&#10;</pre>
<p>The <code>Display&lt;Chip&gt;Adapter</code> implementations include using various display types. They are
created and initialized by the corresponding <code>Display&lt;Chip&gt;Element</code> class.</p>
<p>The <code>DisplayAGFXAdapter</code> is a base implementation for display drivers from the Arduino_GFX library. This library supports various chips and is very similar to the Adafruit GFX library.</p>
<p>The full list of Elements for using displays can be found in the <a href="/elements/display/index.htm">Display Elements</a> documentation.</p>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/implementation.htm">Implementation</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>