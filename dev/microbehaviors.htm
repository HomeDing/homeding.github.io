<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
  <title>Micro Behaviors</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
  <script src="/story.js" type="module"></script>
  <style>
  .gpio { 
    display:inline-block;
    padding: 0 4px;
    border-radius: 4px;
    }
  .gpio.yellow {background-color: #FF0;}
  .gpio.red {background-color: #F22; color:white}
  .gpio.black {background-color: #111; color:white}
  .gpio.blue {background-color: #22F; color:white}
  </style>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav class="inpage open"></nav>

  <main style="padding:1rem;max-width: 800px;">
    <h1>Micro Behaviors</h1>

    
      
    <p>Javascript Behaviors are around for many years and are used to extend regular HTML elements with specific functionality. The new <code>Web Components</code> technologies is following this approach to define templates and their behavior as well. However this doesnâ€™t work yet in all current used browsers. (see <a href="https://caniuse.com/#feat=custom-elementsv1">https://caniuse.com/#feat=custom-elementsv1</a>)</p>
<p>This implementation used in the HomeDing device website is following the approach to <em>customize built-in elements</em> like a <code>&lt;div&gt;</code> HTML element. The implementation is based on prior work form <a href="https://www.mathertel.de/AJAXEngine">https://www.mathertel.de/AJAXEngine</a> but uses Typescript instead of plain JavaScript and is adjusted to the current HTML5 Web Component Standard.</p>
<p>This avoid using a huge polyfill like <a href="https://github.com/webcomponents/webcomponentsjs">https://github.com/webcomponents/webcomponentsjs</a> with all the dependencies.</p>
<p>Naming conventions are adapted to the Web Component Standard and is using a <code>u-</code> prefix to avoid conflicts.</p>
<h2>Implementing a Behavior</h2>
<p>Behaviors provide a specific functionality for a web component specified in HTML. They are implemented by using a typescript class
that extends the <code>MicroControlClass</code> or the <code>GenericWidgetClass</code>. When extending <code>GenericWidgetClass</code> some functionalities for representing a HomeDing element are already available.</p>
<pre class="language-typescript"><code class="language-typescript"><span class="token decorator"><span class="token at operator">@</span><span class="token function">MicroControl</span></span><span class="token punctuation">(</span><span class="token string">"switch"</span><span class="token punctuation">)</span><br><span class="token keyword">class</span> <span class="token class-name">SwitchWidgetClass</span> <span class="token keyword">extends</span> <span class="token class-name">GenericWidgetClass</span> <span class="token punctuation">{</span><br>  <span class="token function">onclick</span><span class="token punctuation">(</span>e<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span><br>    <span class="token operator">...</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>This Typescript Class is then specifying the methods, event handlers and local private variables of the template using <code>u-is='switch'</code>.</p>
<p>In short:</p>
<ul>
<li>The <code>connectedCallback</code> function will be called once after a new element is created from a template.</li>
<li>The functions using the <code>onXxx</code> naming convention are registered to events by using addEventListener()</li>
<li>All other functions and class members are bound to the HTML element.</li>
<li>By using attributes on the HTML template element class-members can be initialized.</li>
</ul>
<p>The implementations can be found in the <code>src</code> folder of the web site implementation and are compiled to JavaScript into the <code>micro.js</code> file.</p>
<p>There are many example of implemented templates in the file <code>ding-templates.htm</code> that fit to the html templates and are used to display a generalized or specific card for the elements.</p>
<h2>Attaching a Behavior</h2>
<p>The central part of the implementation that attaches the functionality to the HTML tags is done by listening to changes in the displayed document. Every time a HTML element is created with a <code>u-is</code> attribute the corresponding behavior implementation
is used.</p>
<p>This works without invoking any JavaScript analog to the <code>is</code> attribute from the HTML standard. in <code>micro.ts</code> a MutationObserver is used to be notified every time a new object is added and to load the defined behavior.</p>
<h3>See also</h3>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements">https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements</a></li>
<li><a href="https://html.spec.whatwg.org/multipage/custom-elements.htmlx">https://html.spec.whatwg.org/multipage/custom-elements.htmlx</a></li>
<li><a href="https://developers.google.com/web/fundamentals/web-components/">https://developers.google.com/web/fundamentals/web-components/</a></li>
<li><a href="https://www.mathertel.de/AJAXEngine">https://www.mathertel.de/AJAXEngine</a></li>
<li><a href="https://www.mathertel.de/AJAXEngine/S03_AJAXControls">https://www.mathertel.de/AJAXEngine/S03_AJAXControls</a></li>
<li><a href="https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements">https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements</a></li>
<li><a href="https://github.com/w3c/webcomponents/">https://github.com/w3c/webcomponents/</a></li>
<li><a href="https://www.ccs.neu.edu/home/dherman/javascript/behavior/">https://www.ccs.neu.edu/home/dherman/javascript/behavior/</a></li>
</ul>


    
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    navObj.classList.toggle('open', (window.innerWidth > 880));

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>