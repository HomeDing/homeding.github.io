
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
    <title>Light Toggle with timer</title>
    <meta name='description' content='Examples and documentation for the HomeDing IoT Library'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>Light Toggle with timer</h1>
      
        <p>This recipe implements a light switch that keeps light on for a specific time before switching off automatically.</p>
<blockquote>
<p>(lightimerflow.png) ???</p>
</blockquote>
<p>The configuration combines an digitalin, a timer, a switch and a digitalout element.</p>
<ul>
<li>
<p>When the input driven by a momentary button is going low an action is sent to the timer and the switch element.</p>
</li>
<li>
<p>The switch will toggle the value so you can use the input for switching on and off.</p>
</li>
<li>
<p>The timer is started and will run only once until the pulseTime is over.</p>
</li>
<li>
<p>When the timer pulseTime ends the switch is forced to the value 0 to switch the light off.</p>
</li>
<li>
<p>The switch value is sent to the digital output driving a LED or a relays.</p>
</li>
</ul>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"digitalin"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"up"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"pin"</span><span class="token operator">:</span> <span class="token string">"D6"</span><span class="token punctuation">,</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"up button signal"</span><span class="token punctuation">,</span>
      <span class="token property">"invert"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>
      <span class="token property">"pullup"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>
      <span class="token property">"onLow"</span><span class="token operator">:</span> <span class="token string">"switch/light?toggle=1,timer/done?start=1"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token property">"timer"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"done"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"reset after timeout"</span><span class="token punctuation">,</span>
      <span class="token property">"pulseTime"</span><span class="token operator">:</span> <span class="token string">"00:05:00"</span><span class="token punctuation">,</span>
      <span class="token property">"onOff"</span><span class="token operator">:</span> <span class="token string">"switch/light?value=0"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 

  <span class="token property">"switch"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"light"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Control light level"</span><span class="token punctuation">,</span>
      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">"onValue"</span><span class="token operator">:</span> <span class="token string">"digitalout/light?value=$v"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token property">"digitalout"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"light"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">"pin"</span><span class="token operator">:</span> <span class="token string">"D0"</span><span class="token punctuation">,</span>
      <span class="token property">"invert"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>
      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Light output on port D0 = GPIO16"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2>More functionality</h2>
<p>By adding a button element in-between the digital input and the timer
more functions can be supported:</p>
<ul>
<li>The <code>click</code> action of the button will start the timer as before.</li>
<li>A <code>doubleclick</code> will turn off the light immediately by sending an action to the timer that sets the timer to the end state.</li>
<li>When more momentary buttons are required to control the light you can use other device that have a configuration from the <a href="/recipes/remotebutton.htm">Remote Button recipe</a>.</li>
</ul>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/recipe.htm">Recipe</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>
    </body>
  </body>
</html>