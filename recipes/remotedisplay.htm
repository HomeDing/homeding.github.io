<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content=''>
  <title>Remote Display for Temperature and Humidity</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <link href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css" rel="stylesheet">
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-header">
    <a href="/" title="Startpage"><img class="icon" src="/i/default.svg" /></a>
    <h1>HomeDing</h1>
  </div>

  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>
  <nav class="inpage open"></nav>

  <main style="background-color:#eeeeee;padding:1rem">
    <h1>Remote Display for Temperature and Humidity</h1>
<p>This recipe shows how to implement 2 devices</p>
<ul>
<li>A device named &quot;displayding&quot; with a locally attached display to display some information.</li>
<li>Another device with a DHT sensor that sends the sensor to the display.</li>
</ul>
<h2>Configuration of the display device</h2>
<p>The display device has no need to know about the sensor device because the sensor device will always send the actions across the network.
Only the general display configuration and the displayText elements need to be configured.</p>
<h3>Display general configuration</h3>
<p>There is a configuration required that corresponds to the chip inside the display and the protocol used to communicate with the display.</p>
<p>** Example:**</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"DisplaySSD1306"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"0"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span><br>      <span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">64</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>This is specified typically in the <code>env.json</code> file that holds all the configurations for the board
and the directly connected actors, sensors and displays.
Samples for this configuration can be found in the description of the display elements and some board descriptions.</p>
<p>See also <a href="/elements/displays.htm">displays</a> for a list of the supported displays.</p>
<p>Having done this configuration the display will be used on system startup showing the devicename and the assigned ip-address.</p>
<h3>Display elements configuration</h3>
<p>The following configuration used 2 display elements for text to define
the position and size of the information that will be shown:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"displaytext"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"temp"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"x"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><br>      <span class="token property">"y"</span><span class="token operator">:</span> <span class="token number">26</span><span class="token punctuation">,</span><br>      <span class="token property">"fontsize"</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span><br>      <span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token string">"Temp:"</span><span class="token punctuation">,</span><br>      <span class="token property">"postfix"</span><span class="token operator">:</span> <span class="token string">"Â°C"</span><br>    <span class="token punctuation">}</span><span class="token punctuation">,</span><br>    <span class="token property">"hum"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"x"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><br>      <span class="token property">"y"</span><span class="token operator">:</span> <span class="token number">44</span><span class="token punctuation">,</span><br>      <span class="token property">"fontsize"</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span><br>      <span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token string">"Hum: "</span><span class="token punctuation">,</span><br>      <span class="token property">"postfix"</span><span class="token operator">:</span> <span class="token string">"%"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>The prefix and postfix fits to the purpose of the information that is send to the display device
from the device that has a sensor for temperature and humidity.</p>
<h2>Configuration of the sensor device</h2>
<p>The sensor device needs to have the elements configures so that actions are sent to the display device.
This is done by using a remote element for every action that is send across the network.</p>
<p>Here a DHT22 sensor is configured on pin D4.</p>
<p>For sending out to 2 remote elements the 2 remote configurations are used.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br>  <span class="token property">"dht"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"on"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Local DHT sensor"</span><span class="token punctuation">,</span><br>      <span class="token property">"pin"</span><span class="token operator">:</span> <span class="token string">"D4"</span><span class="token punctuation">,</span><br>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"DHT22"</span><span class="token punctuation">,</span><br>      <span class="token property">"readtime"</span><span class="token operator">:</span> <span class="token string">"30s"</span><span class="token punctuation">,</span><br>      <span class="token property">"resendtime"</span><span class="token operator">:</span> <span class="token string">"2m"</span><span class="token punctuation">,</span><br>      <span class="token property">"onTemperature"</span><span class="token operator">:</span> <span class="token string">"remote/display-t?value=$v"</span><span class="token punctuation">,</span><br>      <span class="token property">"onHumidity"</span><span class="token operator">:</span> <span class="token string">"remote/display-h?value=$v"</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><span class="token punctuation">,</span><br>  <span class="token property">"remote"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token property">"display-t"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"displayding"</span><span class="token punctuation">,</span><br>      <span class="token property">"remoteid"</span><span class="token operator">:</span> <span class="token string">"displaytext/t"</span><span class="token punctuation">,</span><br>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Display temperature on remode thing."</span><br>    <span class="token punctuation">}</span><span class="token punctuation">,</span><br>    <span class="token property">"display-h"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"displayding"</span><span class="token punctuation">,</span><br>      <span class="token property">"remoteid"</span><span class="token operator">:</span> <span class="token string">"displaytext/h"</span><span class="token punctuation">,</span><br>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Display humidity on remode thing."</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<h2>Tags</h2>
<p>#recipe #sensor #remote #display</p>

  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });
    if (window.innerWidth > 880)
      navObj.classList.add('open');

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>