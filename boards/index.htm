
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
    <title>Boards and Processor modules</title>
    <meta name='description' content='Boards supported by the HomeDing library'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>Boards and Processor modules</h1>
      
        
            <div class="plaincard">
            
            The HomeDing library can be used with Boards and Processor modules using the the ESP8266 and ESP32 chips from Espressif. In this overview some boards and devices can be found that are supported by the HomeDing library.

          </div>
        
        <p>On the market you find a lot of solutions like bare chip adapters, development boards,
IoT devices off-the-shelf and even complete kits that use these chips.</p>
<p>Here you find some common species and bare processors described in detail that you may consider to use
including hints for configuration and programming.</p>
<ul>
<li><a href="/boards/esp32/index.htm">ESP32 boards</a></li>
<li><a href="/boards/esp32c3/index.htm">ESP32-C3 boards</a></li>
<li><a href="/boards/esp32s3/index.htm">ESP32-S3 boards</a></li>
</ul>
<h2>DIY development boards</h2>
<p>The NodeMCU boards for ESP8266 and the DevKit Boards for ESP32, ESP32-C3 and ESP32-S3</p>
<p>There are good options to start a DIY project with breadboard friendly boards.
You can find these in the Arduino Store, at resellers and eBay :</p>
<div class="imgcard"><img src="/boards/esp32s3/arduino-nano-esp32.jpg">
<p><strong><a href="/boards/esp32s3/arduino-nano-esp32.htm">Arduino Nano ESP32</a></strong></p>
<p>This board is an official Arduino board with the ESP32-S3 chip</p>
</div>
<div class="imgcard"><img src="/boards/nodemcu.jpg">
<p><strong><a href="/boards/nodemcu.htm">ESP8266 NodeMCU development boards</a></strong></p>
<p>The NodeMCU boards are one of the most common development boards. They offer an easy start into the ESP8266 development. The have all you need for programming, offer 4MByte flash memory and a LED on-board.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/devkit.jpg">
<p><strong><a href="/boards/esp32/devkit.htm">ESP32 DevKit Boards</a></strong></p>
<p>The ESP32 DevKit Boards come in various formats and sizes with WROOM modules and USB adapter. They are supported by the HomeDing library.</p>
</div>
<p>The ESP8266 development board descriptions, hints and more references
can be found at <a href="https://arduino-esp8266.readthedocs.io/en/latest/boards.html">https://arduino-esp8266.readthedocs.io/en/latest/boards.html</a>.</p>
<p>ESP32 boards from espressif :<a href="https://www.espressif.com/en/products/devkits">https://www.espressif.com/en/products/devkits</a></p>
<p>In the Repository of Tasmota Supported Devices at <a href="https://templates.blakadder.com/">https://templates.blakadder.com/</a>
many off-the-shell devices can be identified using a espressif processor.</p>
<h2>ESP8266 boards</h2>
<p>The HomeDing library is compatible to the Arduino environment using the ESP8266 board package.
Most boards offer 4 MByte flash memory. Some boards and devices with less flash memory are supported as well. See below.</p>
<p>Specific to ESP8266 are the following features:</p>
<ul>
<li>
<p>The <a href="/elements/light/my9291.htm">MY9291 Element</a> only works with ESP8266 by the used library.</p>
</li>
<li>
<p>The <a href="/examples/standard.htm">standard example</a> can be flashed onto these boards by providing
most of the <a href="/elements/index.htm">elements</a> and <a href="/elements/display/index.htm">display adapters</a>.</p>
</li>
<li>
<p>The web interface is working out of the box by using 1MByte of the flash memory and includes
the Web UI, IDE features and logging capabilities.</p>
</li>
<li>
<p>These devices are used for <code>always-on</code> scenarios to provide the webserver functionality. Using
a battery based power source will only result in a short lifetime maybe a few hours or days.</p>
</li>
<li>
<p>These devices have enough flash capacity to be updated over the network by using the OTA method.</p>
</li>
</ul>
<div class="imgcard"><img src="/boards/nodemcu.jpg">
<p><strong><a href="/boards/nodemcu.htm">ESP8266 NodeMCU development boards</a></strong></p>
<p>The NodeMCU boards are one of the most common development boards. They offer an easy start into the ESP8266 development. The have all you need for programming, offer 4MByte flash memory and a LED on-board.</p>
</div>
<div class="imgcard"><img src="/boards/d1mini.jpg">
<p><strong><a href="/boards/d1mini.htm">D1 Mini Boards (ESP8266 and ESP32)</a></strong></p>
<p>There are many different mini boards available with differend ESP processors that share the same form factor and connector pin assignments.</p>
</div>
<div class="imgcard"><img src="/boards/wifikit8.jpg">
<p><strong><a href="/boards/wifikit8.htm">Wifi Kit 8 Module ESP8266 with OLED</a></strong></p>
<p>The Wifi Kit 8 Module ESP8266 with OLED is a ESP8266 with 4k Flash, OLED display and Li-Polymer battery support. It has a slim size and fits well on breadboards.</p>
</div>
<div class="imgcard"><img src="/boards/witty.jpg">
<p><strong><a href="/boards/witty.htm">Witty-Board</a></strong></p>
<p>The Witty board offers a ESP8266-12F solution with a RGB LED, a LDR sensor and an input button. It can be used on a breadboard.</p>
</div>
<div class="imgcard"><img src="/boards/wemosoled.jpg">
<p><strong><a href="/boards/wemosoled.htm">Board Review ESP8266 with OLED</a></strong></p>
<p>This WeMos labeled board has a OLED display using the SSD1306 chip on a ESP-12E module based ESP8266 board.</p>
</div>
<div class="imgcard"><img src="/boards/esp8266/wemos18650.jpg">
<p><strong><a href="/boards/esp8266/wemos18650.htm">WeMos ESP8266 board with OLED and 18650</a></strong></p>
<p>This board from WeMos has a OLED display on a ESP-12E module based ESP8266 board with a joystick input, LiIon Battery support and on/off switch.</p>
</div>
<h2>ESP32 boards</h2>
<p>The HomeDing library is compatible to the ESP32 Arduino environment.</p>
<p>Specific to ESP32 are the following features:</p>
<ul>
<li>Usually there are no other names for the GPIO pins and GPIO numbers from the processor descriptions are used.</li>
<li>An exception is the <a href="/boards/esp32s3/arduino-nano-esp32.htm">Arduino Nano ESP32</a> having printed
pin numbers that differ from the GPIO numbers.</li>
<li>The <a href="/elements/touch.htm">Touch Element</a> allows using the ESP32 built-in touch features on the GPIO pins.</li>
</ul>
<p>There are many options for starting with HomeDing with a ESP32 processor.
There are official boards from espressif
<a href="https://www.espressif.com/en/products/devkits">https://www.espressif.com/en/products/devkits</a> but also other boards from other manufacurers.</p>
<p>Some boards have been tested:</p>
<div class="imgcard"><img src="/boards/esp32/devkit.jpg">
<p><strong><a href="/boards/esp32/devkit.htm">ESP32 DevKit Boards</a></strong></p>
<p>The ESP32 DevKit Boards come in various formats and sizes with WROOM modules and USB adapter. They are supported by the HomeDing library.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/azureiotkit.jpg">
<p><strong><a href="/boards/esp32/azureiotkit.htm">ESP32 Azure IoT Kit</a></strong></p>
<p>This is a ESP32 based board based on ESP-WROVER-B module designed by Microsoft as a reference IoT Kit Azure. It is no more supported.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/esp32audiokit.jpg">
<p><strong><a href="/boards/esp32/esp32audiokit.htm">Ai-Thinker ESP32 Audio Kit</a></strong></p>
<p>This is an ESP32 based board using the ESP-WROVER-B module supporting audio processing.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/ttgo-t-display.jpg">
<p><strong><a href="/boards/esp32/ttgo-t-display.htm">LilyGO TTGO T-Display</a></strong></p>
<p>The LilyGO TTGO T-Display board offer an integrated TFT color display and a USB-C type connector.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/ttgogallery.jpg">
<p><strong><a href="/boards/esp32/ttgogallery.htm">TTGO Gallery (T14)</a></strong></p>
<p>The LilyGO TTGO Gallery (T14) board offers an integrated TFT color display, SD Card, 4 buttons and Audio DAC output with amplifier.</p>
</div>
<h2>ESP32-S3 boards</h2>
<p>The <a href="/boards/esp32s3/index.htm">ESP32-S3</a> variant of the ESP32 is supported by the Arduino
Framework and by the HomeDing library. There is an official <a href="/boards/esp32s3/arduino-nano-esp32.htm">Arduino Nano ESP32</a> board using this processor.</p>
<p>Some boards have been tested:</p>
<div class="imgcard"><img src="/boards/esp32s3/arduino-nano-esp32.jpg">
<p><strong><a href="/boards/esp32s3/arduino-nano-esp32.htm">Arduino Nano ESP32</a></strong></p>
<p>This board is an official Arduino board with the ESP32-S3 chip</p>
</div>
<div class="imgcard"><img src="/boards/esp32s3/lilygo-t-dongle-s3.jpg">
<p><strong><a href="/boards/esp32s3/lilygo-t-dongle-s3.htm">LilyGO T-Dongle S3</a></strong></p>
<p>The LilyGO T-Dongle-S3 board has a USB stick layout including a TFT color display, a APA102 LED, a input button and SD card slot.</p>
</div>
<div class="imgcard"><img src="/boards/esp32s3/lilygo-t-display-s3.jpg">
<p><strong><a href="/boards/esp32s3/lilygo-t-display-s3.htm">LilyGO T-Display-S3</a></strong></p>
<p>The LilyGO T-Display-S3 board offer an integrated TFT color display with optional capacitive touch and a USB-C type connector.</p>
</div>
<div class="imgcard"><img src="/boards/esp32s3/xiao-esp32s3.jpg">
<p><strong><a href="/boards/esp32s3/xiao-esp32s3.htm">XIAO ESP32 S3</a></strong></p>
<p>The XIAO ESP32 S3 is a thumb-size board with external antenna designed for low power consumption.</p>
</div>
<div class="imgcard"><img src="/boards/esp32s3/sc01-plus.jpg">
<p><strong><a href="/boards/esp32s3/sc01-plus.htm">ESP32S3 SC01 Plus Panel</a></strong></p>
<p>This touch display panel with a 320 * 480 LCD display based on a ESP32-S3 processor. This panel is supported by the [HomeDing BigDisplay Example].</p>
</div>
<div class="imgcard"><img src="/boards/esp32s3/panel-8048S043.jpg">
<p><strong><a href="/boards/esp32s3/panel-8048S043.htm">Panel ESP32-8048S043C</a></strong></p>
<p>This panel is using a ESP32-S3 processor with 16M Flash and 8M PSRAM Memory in combination with a 800*480px 16 bit color display and touch controller. This panel is supported by the [HomeDing BigDisplay Example]</p>
</div>
<h2>ESP32-C3 boards</h2>
<p>The <a href="/boards/esp32c3/index.htm">ESP32-C3</a> variant of the ESP32 is supported by the Arduino Framework
and by the HomeDing library.</p>
<p>Some boards have been tested:</p>
<div class="imgcard"><img src="/boards/esp32c3/core.jpg">
<p><strong><a href="/boards/esp32c3/core.htm">CORE-ESP32C3 development board</a></strong></p>
<p>The CORE-ESP32 core board is based on Espressif ESP32-C3 SoC that fits good on a breadboard and has the option for a LCD + digital joystick shield on top. The ESP32-C3 variant is supported by the HomeDing library.</p>
</div>
<div class="imgcard"><img src="/boards/esp32c3/micro.jpg">
<p><strong><a href="/boards/esp32c3/micro.htm">ESP32-C3 micro board with OLED display</a></strong></p>
<p>This is very small board based on EPS32-C3 with an 0.42&quot; onboard OLED display and a single NeoPixel.</p>
</div>
<div class="imgcard"><img src="/boards/esp32/esp32-c3pico.jpg">
<p>The C3 pico board is based on the ESP32-C3 MCU with 4 MByte internal flash memory
and includes</p>
<ul>
<li>Lipo charger</li>
<li>i2c connector using the Qwiic standard JST SH 4-pin (1mm)</li>
<li>RST button</li>
<li>pin 9 button</li>
<li>USB-C connector</li>
</ul>
</div>
<div class="imgcard"><img src="/boards/esp32c3/esp32c3-01.jpg">
<p><strong><a href="/boards/esp32c3/esp32c3-01.htm">Board ESP32-C3 ESP-01</a></strong></p>
<p>The ESP32-C3 processor is now also available in a ESP01 form factor board including 4MByte flash and an external antenna connector.</p>
</div>
<!-- https://www.cnx-software.com/2022/01/12/esp32-s3-esp32-c3-esp8266-modules-comparison/ -->
<h2>Devices based on Esp8266</h2>
<p>ESP8266 is also used as CPU in various retail devices like sockets and switches but also WiFi lights.</p>
<div class="imgcard"><img src="/boards/sonoffbasic.jpg"><p>The <strong><a href="/boards/sonoffbasic.htm">Sonoff Basic</a></strong> is a off-the-shelf solution to switch main power consumers.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>.</p>
</div>
<div class="imgcard"><img src="/boards/sonoffs20.jpg"><p>The <strong><a href="/boards/sonoffs20.htm">Sonoff S20</a></strong> is a off-the-shelf plug available for different plug types.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>.</p>
</div>
<div class="imgcard"><img src="/boards/sockets.jpg"><p>The <strong><a href="/boards/sockets.htm">Gosund or Blitzwolf Sockets</a></strong> can switch on/off and can meassure power consumption
of the plugged-in load.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>
and the <a href="/elements/bl0937.htm">BL0937 chip</a>.</p>
</div>
<div class="imgcard"><img src="/boards/bulb.jpg"><p><strong><a href="/boards/devices/bulb.htm">Bulb devices</a></strong> build on base of the ESP8266 chip are supported by the minimal sketch.</p>
<p>They are using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a> using
the <a href="/elements/light/color.htm">Color Element</a> and <a href="/elements/switch.htm">Switch Element</a> for control.</p>
</div>
<!-- ESP8266 Module Series
ESP-07S	 Pin compatible with esp-12, IPEX connector to get greater signal
ESP-01S	 General DIP PTH version, less pin lead out, easy to use
ESP-01M	 Vertical stand on your PCBsave space and better signal
WROOM-02	Most certificated, best design by original Espressif.
ESP-14
-->
<h2>Bare ESP-12 boards</h2>
<p>These boards help implementing things using the ESP-12 boards directly.
When used alone an external power supply and some minimal wiring is required.</p>
<div class="imgcard"><img src="/boards/esp12dev.jpg"><p>The <strong><a href="/boards/esp8266/esp12dev.htm">Esp-12 development boards</a></strong> is an adapter board that can be used to program a ESP-12 boards before adding it to a device.
This solution is especially suitable for creating devices that run on battery or low power conditions and therefore do not need USB chips.</p>
</div>
<div class="imgcard"><img src="/boards/whiteadapter.jpg"><p>The <strong><a href="/boards/whiteadapter.htm">White ESP-12 adapter</a></strong> enables using ESP-12 type boards on a breadboard and includes some resistors and a power regulator option.</p>
</div>
<div class="imgcard"><img src="/boards/adapter2.jpg"><p>Another adapter for the ESP-12 type boards including space for soldering components.</p>
</div>
<h2>ESP-12 module types</h2>
<p>ON the ESP-12 with 4 GByte Flash the <a href="/examples/standard.htm">standard example</a> can be uploaded by providing most of the <a href="/elements/index.htm">elements</a> and <a href="/elements/display/index.htm">display adapters</a> out of the box.</p>
<p>The ESP-12 format is a common format but there are different sub-versions available. The all use the ESP8266 SoC but flash size and available pins differ:</p>
<div class="imgcard"><img src="/boards/esp12e.jpg"><p>The <strong>ESP-12</strong> (old) and <strong>ESP-12E</strong> modules offer 8+8 pins at the sides where most of the interesting pins from the ESP8266 SoC chips are available.</p>
<p>They are manufactured by different vendors.</p>
</div>
<div class="imgcard"><img src="/boards/esp12f.jpg"><p>On the <strong>ESP-12F</strong>, in addition to the ESP-12E some more pins are available on the “bottom” side that are th signals to the FLASH memory. They are not of much use in most scenarios but in the case you want to add some SPI RAM.</p>
</div>
<div class="imgcard"><img src="/boards/esp12s.jpg"><p>The <strong>ESP-12S</strong> is an optimized version from esp-12f with a better antenna signal. FLASH SPI signals are not available.</p>
</div>
<div class="imgcard"><img src="/boards/espwroom.jpg"><p>The <strong>ESP-WROOM-02</strong> is not strictly the same form factor this module is directly made by espressif as a reference implementation. The SPI Flash has only 2 MByte. I found it mounted on a wider board including battery based power management.</p>
</div>
<h2>Esp8266 boards with 1 MByte flash memory</h2>
<p>There are some boards around that only provide 1 MByte flash memory.
This is often sufficient for simple devices that offer small amounts of functionality.
The SOC and processor itself offer the full features but connectivity on the pins is also reduced.</p>
<h3>Applicable Examples</h3>
<p>The <a href="/examples/minimal.htm">minimal example</a> can be flashed onto these boards by providing the typical switch elements and most core elements but no sensor and display adapters. The functionality will be activated through the configuration.</p>
<!-- The [sensor example](/elements/sensors.md) can be flashed onto these boards to create small sensor solutions with a set of available sensor elements and most core elements but no display adapters. The functionality will be activated through the configuration. -->
<h3>Boards</h3>
<p>The following are boards and solutions with 1 MBytes flash memory chips.</p>
<div class="imgcard"><img src="/boards/esp01.jpg"><p>The <a href="/boards/esp8266/esp01.htm">ESP-01</a> is the cheapest bare minimum ESP8266 board available. The connector only supports few GPIO pins but it is small and enough for simple sensors and relay appliances. Only 2-4 GPIO signals can be used.</p>
<p>There are variants of this board with different antenna and different flash sizes.</p>
</div>
<div class="imgcard"><img src="/boards/neo.jpg"><p>The <a href="/boards/neo.htm">neo board</a> is a very specific adapter
to run a neopixel stripe, wheel or array using a ESP8266 ESP-01 board.</p>
</div>
<div class="imgcard"><img src="/boards/esp01-dht.jpg"><p>The <a href="/boards/esp01-dht.htm">ESP-01 with DHT22 board</a> is a very specific adapter
to run a DHT22 sensor using  a ESP8266 ESP-01 board.</p>
</div>
<h2>ESP8285 based boards</h2>
<p>The ESP8285 was released in 2016 as a cheaper replacement for ESp8266 with an internal Flash Ram chip.</p>
<p>ESP8285 = ESP8266 + 1M Flash in the same chip.</p>
<h2>Comments</h2>
<p>The lack of the metal housing of the high frequency emitting CPU and bus to the flash chip may be the reason why they don’t have a CE certificate.</p>
<p>Less memory is cheaper. These boards have no difference regarding the CPU and RAM but these boards offer less flash memory, fewer I/O ports and often do not include a USB converter.</p>
<p>Older boards with 512 KByte are still available but should be avoided because OTA probably will not work caused by this small memory size.</p>
<p>The <a href="/boards/esp8266/esp01.htm">ESP-01</a> is the cheapest bare minimum ESP8266 board available. The connector only supports few GPIO pins but it is small and enough for simple sensors and relay appliances.</p>
<h2>See also</h2>
<ul>
<li><a href="/boards/pins.htm">ESP8266 pins</a></li>
<li><a href="https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/">https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/</a></li>
<li><a href="https://blog.squix.org/2015/03/esp8266-module-comparison-esp-01-esp-05.html">https://blog.squix.org/2015/03/esp8266-module-comparison-esp-01-esp-05.html</a></li>
<li><a href="https://www.mikrocontroller.net/topic/425242">https://www.mikrocontroller.net/topic/425242</a></li>
<li><a href="http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html">http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html</a></li>
<li><a href="https://github.com/esp8266/esp8266-wiki/wiki/Boot-Process">https://github.com/esp8266/esp8266-wiki/wiki/Boot-Process</a></li>
<li><a href="https://tasmota.github.io/docs/Pinouts">https://tasmota.github.io/docs/Pinouts</a></li>
</ul>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/board.htm">Board</a>
            
              <a href="/tag/implementation.htm">Implementation</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>