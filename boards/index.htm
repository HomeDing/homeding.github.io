<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc" />
  <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353" />
  <link rel="icon" type="image/png" href="favicon48.png" sizes="48x48">
  <meta name='description' content='Boards supported by the HomeDing library'>

  <title>Boards Overview</title>
  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <script src="/pages.js"></script>
</head>

<body scroll="0" style="padding:0;">
  <div class="u-navbar" style="margin-bottom: 0;">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
      <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z" />
    </svg>

    <a href="/index.htm" class="button">Home</a>
    <a href="/concepts/index.htm" class="button">Concepts</a>
    <a href="/elements/index.htm" class="button">Elements</a>
    <a href="/boards/index.htm" class="button">Boards</a>
    <a href="/recipes/index.htm" class="button">Recipes</a>
  </div>

  <nav class="inpage open"></nav>

  <main style="padding:1rem">
    <h1>Boards Overview</h1>

    <div class="plaincard">Details on some boards and devices supported by the HomeDing library.
</div>
    <p>The HomeDing library can be used with many boards and manufactured devices
that use a ESP8266 or ESP32 system-on-chip processor.</p>
<p>On the market you find a lot of solutions like bare chip adapters, development boards,
IoT devices off-the-shelf and even complete kits that use these chips.</p>
<p>Here you find some common species and bare processors described in detail that you may consider to use
including hints for configuration and programming.</p>
<ul>
<li><a href="#full-feature-boards-with-4-mbyte-flash-memory">Full feature boards with 4 MByte flash memory</a></li>
<li><a href="#devices-based-on-esp8266">Devices based on Esp8266</a></li>
<li><a href="#bare-esp-12-boards">Bare ESP-12 boards</a></li>
<li><a href="#esp-12-module-types">ESP-12 module types</a></li>
<li><a href="#esp8266-boards-with-1-mbyte-flash-memory">Esp8266 boards with 1 MByte flash memory</a>
<ul>
<li><a href="#applicable-examples">Applicable Examples</a></li>
<li><a href="#boards">Boards</a></li>
</ul>
</li>
<li><a href="#esp8285-based-boards">ESP8285 based boards</a></li>
<li><a href="#comments">Comments</a></li>
<li><a href="#see-also">See also</a></li>
</ul>
<p>A good source of development board descriptions, hints as well as references
can be found at <a href="https://arduino-esp8266.readthedocs.io/en/latest/boards.html">https://arduino-esp8266.readthedocs.io/en/latest/boards.html</a>.</p>
<p>In the Repository of Tasmota Supported Devices at <a href="https://templates.blakadder.com/">https://templates.blakadder.com/</a>
many off-the-shell devices can be identified using a espressif processor.</p>
<h2>Full feature boards with 4 MByte flash memory</h2>
<p>The following boards with 4 MBytes flash memory have been used for development and their specialties can be found in the board reviews.</p>
<ul>
<li>The <a href="/examples/standard.htm">standard example</a> can be flashed onto these boards by providing most of the <a href="/elements/index.htm">elements</a> and <a href="/elements/displays.htm">display adapters</a>.</li>
<li>The web interface is working out of the box by using 1MByte of the flash memory and includes the Web UI, IDE features and logging capabilities.</li>
<li>These devices are used for <code>always-on</code> scenarios to provide the webserver functionality. Using a battery based power source will only result in a short lifetime maybe a few hours or days.</li>
<li>These devices have enough flash capacity to be updated over the network by using the OTA method.</li>
</ul>
<div class="imgcard"><img src="/boards/nodemcu.jpg"><p>The <strong><a href="/boards/nodemcu.htm">NodeMCU development boards</a></strong> is one of the most common development boards including an usb to serial converter chip.</p>
</div>
<div class="imgcard"><img src="/boards/wifikit8.jpg"><p>The <strong><a href="/boards/wifikit8.htm">Wifi Kit 8 Module ESP8266 with OLED</a></strong> is a ESP8266 with 4k Flash, OLED display and Li-Polymer battery support.</p>
</div>
<div class="imgcard"><img src="/boards/witty.jpg"><p>The <strong><a href="/boards/witty.htm">Witty board</a></strong> offers a ESP8266-12F solution with a RGB LED, a LDR sensor and an input button. It can be used on a breadboard.</p>
</div>
<div class="imgcard"><img src="/boards/wemosoled.jpg"><p>The <strong><a href="/boards/wemosoled.htm">Wemos labeled board with OLED</a></strong> is a ESP-12E with OLED display.</p>
</div>
<div class="imgcard"><img src="/boards/wroom2.jpg"><p>The <strong><a href="/boards/wroom2.htm">Esp-Wroom-02 Module ESP8266 with OLED and 18650</a></strong> is a ESP-12E with OLED display, LiIon Battery support and switch.</p>
</div>
<h2>Devices based on Esp8266</h2>
<p>ESP8266 is also used as CPU in various retail devices like sockets and switches but also WiFi lights.</p>
<div class="imgcard"><img src="/boards/sonoffbasic.jpg"><p>The <strong><a href="/boards/sonoffbasic.htm">Sonoff Basic</a></strong> is a off-the-shelf solution to switch main power consumers.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>.</p>
</div>
<div class="imgcard"><img src="/boards/sonoffs20.jpg"><p>The <strong><a href="/boards/sonoffs20.htm">Sonoff S20</a></strong> is a off-the-shelf plug available for different plug types.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>.</p>
</div>
<div class="imgcard"><img src="/boards/sockets.jpg"><p>The <strong><a href="/boards/sockets.htm">Gosund or Blitzwolf Sockets</a></strong> can switch on/off and can meassure power consumption
of the plugged-in load.</p>
<p>It is using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a>
and the <a href="/elements/bl0937.htm">BL0937 chip</a>.</p>
</div>
<div class="imgcard"><img src="/boards/bulb.jpg"><p><strong><a href="/boards/bulb.htm">Bulb devices</a></strong> build on base of the ESP8266 chip are supported by the minimal sketch.</p>
<p>They are using the ESP8266 CPU and 1 MByte Flash and can be used with the <a href="/examples/minimal.htm">Minimal Example</a> using
the <a href="/elements/color.htm">Color Element</a> and <a href="/elements/switch.htm">Switch Element</a> for control.</p>
</div>
<!-- ESP8266 Module Series
ESP-07S	 Pin compatible with esp-12, IPEX connector to get greater signal
ESP-01S	 General DIP PTH version, less pin lead out, easy to use
ESP-01M	 Vertical stand on your PCBsave space and better signal
WROOM-02	Most certificated, best design by original Espressif.
ESP-14
-->
<h2>Bare ESP-12 boards</h2>
<p>These boards help implementing things using the ESP-12 boards directly.
When used alone an external power supply and some minimal wiring is required.</p>
<div class="imgcard"><img src="/boards/esp12dev.jpg"><p>The <strong><a href="/boards/esp12dev.htm">Esp-12 development boards</a></strong> is an adapter board that can be used to program a ESP-12 boards before adding it to a device.
This solution is especially suitable for creating devices that run on battery or low power conditions and therefore do not need USB chips.</p>
</div>
<div class="imgcard"><img src="/boards/whiteadapter.jpg"><p>The <strong><a href="/boards/whiteadapter.htm">White ESP-12 adapter</a></strong> enables using ESP-12 type boards on a breadboad and includes some resistors and a power regulator option.</p>
</div>
<div class="imgcard"><img src="/boards/adapter2.jpg"><p>Another adapter for the ESP-12 type boards including space for soldering components.</p>
</div>
<h2>ESP-12 module types</h2>
<p>ON the ESP-12 with 4 GByte Flash the <a href="/examples/standard.htm">standard example</a> can be uploaded by providing most of the <a href="/elements/index.htm">elements</a> and <a href="/elements/displays.htm">display adapters</a> out of the box.</p>
<p>The ESP-12 format is a common format but there are different sub-versions available. The all use the ESP8266 SoC but flash size and available pins differ:</p>
<div class="imgcard"><img src="/boards/esp12e.jpg"><p>The <strong>ESP-12</strong> (old) and <strong>ESP-12E</strong> modules offer 8+8 pins at the sides where most of the interesting pins from the ESP8266 SoC chips are available.</p>
<p>They are manufactured by different vendors.</p>
</div>
<div class="imgcard"><img src="/boards/esp12f.jpg"><p>On the <strong>ESP-12F</strong>, in addition to the ESP-12E some more pins are available on the &quot;bottom&quot; side that are th signals to the FLASH memory. They are not of much use in most scenarios but in the case you want to add some SPI RAM.</p>
</div>
<div class="imgcard"><img src="/boards/esp12s.jpg"><p>The <strong>ESP-12S</strong> is an optimized version from esp-12f with a better antenna signal. FLASH SPI signals are not available.</p>
</div>
<div class="imgcard"><img src="/boards/espwroom.jpg"><p>The <strong>ESP-WROOM-02</strong> is not strictly the same form factor this module is directly made by espressif as a reference implementation. The SPI Flash has only 2 MByte. I found it mounted on a wider board including battery based power management.</p>
</div>
<h2>Esp8266 boards with 1 MByte flash memory</h2>
<p>There are some boards around that only provide 1 MByte flash memory.
This is often sufficient for simple devices that offer small amounts of functionality.
The SOC and processor itself offer the full features but connectivity on the pins is also reduced.</p>
<h3>Applicable Examples</h3>
<p>The <a href="/examples/minimal.htm">minimal example</a> can be flashed onto these boards by providing the typical switch elements and most core elements but no sensor and display adapters. The functionality will be activated through the configuration.</p>
<!-- The [sensor example](/elements/sensors.md) can be flashed onto these boards to create small sensor solutions with a set of available sensor elements and most core elements but no display adapters. The functionality will be activated through the configuration. -->
<h3>Boards</h3>
<p>The following are boards and solutions with 1 MBytes flash memory chips.</p>
<div class="imgcard"><img src="/boards/esp01.jpg"><p>The <a href="/boards/esp01.htm">ESP-01</a> is the cheapest bare minimum ESP8266 board available. The connector only supports few GPIO pins but it is small and enough for simple sensors and relay appliances. Only 2-4 GPIO signals can be used.</p>
<p>There are variants of this board with different antenna and different flash sizes.</p>
</div>
<div class="imgcard"><img src="/boards/neo.jpg"><p>The <a href="/boards/neo.htm">neo board</a> is a very specific adapter
to run a neopixel stripe, wheel or array using a ESP8266 ESP-01 board.</p>
</div>
<div class="imgcard"><img src="/boards/esp01-dht.jpg"><p>The <a href="/boards/esp01-dht.htm">ESP-01 with DHT22 board</a> is a very specific adapter
to run a DHT22 sensor using  a ESP8266 ESP-01 board.</p>
</div>
<h2>ESP8285 based boards</h2>
<p>The ESP8285 was released in 2016 as a cheaper replacement for ESp8266 with an internal Flash Ram chip.</p>
<p>ESP8285 = ESP8266 + 1M Flash in the same chip.</p>
<h2>Comments</h2>
<p>The lack of the metal housing of the high frequency emitting CPU and bus to the flash chip may be the reason why they don't have a CE certificate.</p>
<p>Less memory is cheaper. These boards have no difference regarding the CPU and RAM but these boards offer less flash memory, fewer I/O ports and often do not include a USB converter.</p>
<p>Older boards with 512 KByte are still available but should be avoided because OTA probably will not work caused by this small memory size.</p>
<p>The <a href="/boards/esp01.htm">ESP-01</a> is the cheapest bare minimum ESP8266 board available. The connector only supports few GPIO pins but it is small and enough for simple sensors and relay appliances.</p>
<h2>See also</h2>
<ul>
<li><a href="/boards/pins.htm">ESP8266 pins</a></li>
<li><a href="https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/">https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/</a></li>
<li><a href="https://blog.squix.org/2015/03/esp8266-module-comparison-esp-01-esp-05.html">https://blog.squix.org/2015/03/esp8266-module-comparison-esp-01-esp-05.html</a></li>
<li><a href="https://www.mikrocontroller.net/topic/425242">https://www.mikrocontroller.net/topic/425242</a></li>
<li><a href="http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html">http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html</a></li>
<li><a href="https://github.com/esp8266/esp8266-wiki/wiki/Boot-Process">https://github.com/esp8266/esp8266-wiki/wiki/Boot-Process</a></li>
<li><a href="https://tasmota.github.io/docs/Pinouts">https://tasmota.github.io/docs/Pinouts</a></li>
</ul>


    
    <h2>Tags</h2>
    <div class="taglist"><a href="tag-board.htm">Board</a><a href="tag-implementation.htm">Implementation</a></div>
    
  </main>

  <script>
    var mbObj = document.querySelector('#menuButton');
    var navObj = document.querySelector('nav');

    navObj.classList.toggle('open', (window.innerWidth > 880));

    mbObj.addEventListener('click', function (e) {
      navObj.classList.toggle('open');
    });

    lazyLoadHTM('nav', '/toc.htm');
  </script>
  
  </body>

</html>