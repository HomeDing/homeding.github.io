
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
    <title>ESP32 Boards</title>
    <meta name='description' content='ESP32 based boards'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>ESP32 Boards</h1>
      
        
            <div class="plaincard">
            
            There are several boards available using the ESP32 chip. Boards based on the ESP32 variant offer a high performance dual core SoC.

          </div>
        
        <p>The ESP32 was the initial version of the ESP32 processors based on a XtensaÂ® 32-bit LX6 single
or dual-core that operates at up to 240 MHz.</p>
<p>It offers:</p>
<ul>
<li>Wi-Fi (2.4 GHz, single band)</li>
<li>Bluetooth v4.2 and LE</li>
<li>CPU clock speed up to 240 MHz</li>
<li>Max 34 configurable GPIOs</li>
<li>520 KB static RAM</li>
<li>16 KB of static RTC RAM that keeps data as long as powered.</li>
<li>448 KB of ROM</li>
<li>integrated Touch sensors</li>
<li>SD/MMC interface</li>
<li>2 * I2C Interface</li>
<li>4 * SPI Interface</li>
<li>2 * I2S Interface</li>
<li>PWM for LEDs and motors</li>
<li>low-power-mode</li>
<li>crypro acceleration</li>
<li>Secure Boot</li>
<li>Flash encryption</li>
</ul>
<p>This SoC is positioned as a high power SoC MCU with Wi-Fi and Bluetooth 4.2 and LE for general
purpose devices.</p>
<p>There are boards with newer processor designs available using the
<a href="/boards/esp32c3/index.htm">ESP32-C3</a> and <a href="/boards/esp32s3/index.htm">ESP32-S3</a> that are also
supported by the Arduino environment.</p>
<h2>Powersave modes</h2>
<p>several sleep modes:</p>
<ul>
<li>Modem-sleep mode</li>
<li>Light-sleep mode</li>
<li>Deep-sleep mode</li>
</ul>
<h2>Cryptographic Hardware Accelerators</h2>
<p>Secure communication, signing packages and flash memory is supported by some built-in special functionality.</p>
<p>This results in faster secure (https) network requests.</p>
<h2>Boards with ESP32</h2>
<h2>See also</h2>
<ul>
<li>Product web site: <a href="https://www.espressif.com/en/products/socs/esp32">https://www.espressif.com/en/products/socs/esp32</a></li>
<li>Official datasheet: <a href="https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf">https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf</a></li>
</ul>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/board.htm">Board</a>
            
              <a href="/tag/wip.htm">Wip</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>