
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="7tTF0t5uCMnyE6X31OIOQpcOf4QxWuODtyZLoVsKCEc"/>
    <meta name="msvalidate.01" content="7FC9C7BCD4002EBD89AAC2EF63D7B353"/>
    <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
    <title>White Adapter board for ESP8266</title>
    <meta name='description' content='ESP8266 board for using ESP-12 on breadboards.'>
    <link content-type="text/css" href="/docstyle.css" rel="stylesheet"/>
    <script src="/pages.js"></script>
    <script src="/story.js" type="module"></script>
  </head>
  <body scroll="0" style="padding:0;">
    <div class="u-navbar" style="margin-bottom: 0;">
      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 48" id="menuButton" class="button" style="height:1.4rem">
        <path fill="white" d="M0 8h48v6H0zm0 13h48v6H0zm0 13h48v6H0z"/>
      </svg>
      <a href="/index.htm" class="button">Home</a>
      <a href="/elements/index.htm" class="button">Elements</a>
      <a href="/boards/index.htm" class="button">Boards</a>
      <a href="/recipes/index.htm" class="button">Recipes</a>
    </div>
    <nav></nav>
    <main style="padding:1rem;max-width: 800px;">
      <h1>White Adapter board for ESP8266</h1>
      
        
            <div class="plaincard">
            
            This &#39;white&#39; adapter board helps soldering ESP-12 of similar boards in regular breadboards and prototype boards. The signals are straight forward routed from the board to the connectors with some exceptions only:

          </div>
        
        <p><img src="/boards/whiteadapter.jpg" alt="White Adapter Board"></p>
<p><img src="/boards/whiteadapterwires.png" alt="Adapter Board with Wires"></p>
<h3>Resistor on the left</h3>
<p>This 10 kOhm resistor connects the CH_PD to Module-VCC to pull CH_PD to HIGH by default.
This is one of the required conditions so the module can start.</p>
<p>Some boards (at least some ESP-12E) already have an internal resistor for the same reason so the board just adds another one - not harmful.</p>
<h2>Resistor in the middle</h2>
<p>This 0 Ohm resistor actually is a bridge between VCC and Module-VCC required when no regulator is installed.</p>
<p>When you add a regulator (see below) this resistor <strong>MUST</strong> be removed.</p>
<h3>Resistor on the right</h3>
<p>This 10 kOhm resistor connects the GPIO15 to GND to pull GPIO15 to LOW by default.<br>
This is one of the required conditions so the module can start.</p>
<h3>Missing signals</h3>
<p>The REST signal should be pulled up to HIGH by default but many boards also run without.
If you like to have a RES button aside a 10 kOhm pull up Resistor should be added.</p>
<p>The GPIO0(D3) signal should be pulled up to HIGH for normal operation and to LOW for uploading a sketch using the Serial interface.
I recommend to have a FLASH button and a 10 kOhm pull up resistor on this pin.</p>
<p>The GPIO0 signal should be pulled up to HIGH to start the board.
Some boards (at least some ESP-12E) already have an internal resistor for the same reason but to add another one is not harmful.</p>
<h2>Adding a Regulator</h2>
<p>To add a regulator to the bottom layer of the board the following steps must be done.</p>
<ul>
<li>Remove the Resistor/Bridge in the middle on the upper side.</li>
<li>add a compatible regulator like MCP1703A or HT7333A with SOT-89 package. The signals must be like this:</li>
</ul>
<pre><code>          |IN|
     +-------------+
     |             |
     +-------------+
      |     |     |
     GND   IN    OUT
</code></pre>
<ul>
<li>add capacitors at least 100nF to the IN and OUT VCC level.</li>
</ul>
<h2>See also</h2>
<ul>
<li><a href="/boards/witty.htm">Witty board</a></li>
</ul>

        
          <h2>Tags</h2>
          <div class="taglist">
            
              <a href="/tag/board.htm">Board</a>
            
          </div>
        
      </main>
      <script>
        const param = {
          MENU_MIN_WIDTH: 1030
        };
        var mbObj = document.querySelector('#menuButton');
        var navObj = document.querySelector('nav');
        if (window.innerWidth > param.MENU_MIN_WIDTH) { // menu is inside the page
          navObj.classList.add('open');
          navObj.classList.add('inpage');
        }
        mbObj.addEventListener('click', function (e) {
          navObj.classList.toggle('open');
        });
        lazyLoadHTM('nav', '/toc.htm');
      </script>

      <script type="module" async>
        import mermaid from "https://unpkg.com/mermaid@10/dist/mermaid.esm.min.mjs";
        document.addEventListener('DOMContentLoaded', mermaid.initialize({startOnLoad: true}));
      </script>

    </body>
  </body>
</html>